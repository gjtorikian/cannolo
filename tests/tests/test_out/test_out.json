{"title":"TEST","date":"Mon, 03 Jun 2013 21:22:10 GMT","tree":{"children":[{"id":"assert","type":"class","description":"\nAll of the `assert` methods basically compare two different states—an expected\none, and an actual one—and return a Boolean condition. If the comparisson is\n`true`, the condition passes. If an assert method is `false`, the entire Node.js\napp crashes.\n\nSome methods have an additional `message` parameter, which sends text out to the\nconsole when the assert fails.\n\n#### Example: Testing for equivalency\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/assert/assert.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","stability":"5 - Locked","short_description":"\nAll of the `assert` methods basically compare two different states—an expected\none, and an actual one—and return a Boolean condition. If the comparisson is\n`true`, the condition passes. If an assert method is `false`, the entire Node.js\napp crashes.\n","line":19,"aliases":[],"children":[{"id":"assert.assert","type":"class method","signatures":[{"arguments":[{"name":"value","types":["Object"],"description":"The value you receive\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n\n\n"}]}],"arguments":[{"name":"value","types":["Object"],"description":"The value you receive\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n\n\n"}],"related_to":"assert.ok","description":"Tests if value is \"truthy.\" This is equivalent to `assert.equal(true,\n!!value, message);`. This is the same as `assert.ok()`, except that `message` is\nrequired.","short_description":"Tests if value is \"truthy.\" This is equivalent to `assert.equal(true,\n!!value, message);`. This is the same as `assert.ok()`, except that `message` is\nrequired.","line":49,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"assert","name_prefix":"assert.","path":"assert.assert","outFile":"assert.html#assert.assert"},{"id":"assert.deepEqual","type":"class method","signatures":[{"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"Tests for deep equality.","short_description":"Tests for deep equality.","line":92,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"deepEqual","name_prefix":"assert.","path":"assert.deepEqual","outFile":"assert.html#assert.deepEqual"},{"id":"assert.doesNotThrow","type":"class method","signatures":[{"arguments":[{"name":"block","types":["Function"],"description":"A block of code to check against\n\n"},{"name":"error","optional":true,"types":["RegExp","Function"],"description":"The expected error that's thrown; this can be a\n\n*constructor, regexp, or validation function\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"block","types":["Function"],"description":"A block of code to check against\n\n"},{"name":"error","types":["RegExp","Function"],"description":"The expected error that's thrown; this can be a\n\n*constructor, regexp, or validation function\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"Expects `block` not to throw an error; for more details, see `assert.throws()`.","short_description":"Expects `block` not to throw an error; for more details, see `assert.throws()`.","line":157,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"doesNotThrow","name_prefix":"assert.","path":"assert.doesNotThrow","outFile":"assert.html#assert.doesNotThrow"},{"id":"assert.equal","type":"class method","signatures":[{"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"Tests shallow, coercive equality with the equal comparison operator ( `==` ).","short_description":"Tests shallow, coercive equality with the equal comparison operator ( `==` ).","line":71,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"equal","name_prefix":"assert.","path":"assert.equal","outFile":"assert.html#assert.equal"},{"id":"assert.fail","type":"class method","signatures":[{"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"},{"name":"operator","types":["String"],"description":"The operator used to separate the `actual` and `expected`\n\n*values in the `message`\n\n"}]}],"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"},{"name":"operator","types":["String"],"description":"The operator used to separate the `actual` and `expected`\n\n*values in the `message`\n\n"}],"description":"Throws an exception that displays the values for `actual` and `expected`\nseparated by the provided operator.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/assert/assert.fail.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Throws an exception that displays the values for `actual` and `expected`\nseparated by the provided operator.\n","line":37,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"fail","name_prefix":"assert.","path":"assert.fail","outFile":"assert.html#assert.fail"},{"id":"assert.ifError","type":"class method","signatures":[{"arguments":[{"name":"value","types":["Object"],"description":"The value to check against \n\n"}]}],"arguments":[{"name":"value","types":["Object"],"description":"The value to check against \n\n"}],"description":"Tests if value is `false`; throws an error if it is `true`. Useful when testing\nthe first argument, `error`, in callbacks.","short_description":"Tests if value is `false`; throws an error if it is `true`. Useful when testing\nthe first argument, `error`, in callbacks.","line":166,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"ifError","name_prefix":"assert.","path":"assert.ifError","outFile":"assert.html#assert.ifError"},{"id":"assert.notDeepEqual","type":"class method","signatures":[{"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"Tests for any deep inequality.","short_description":"Tests for any deep inequality.","line":102,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"notDeepEqual","name_prefix":"assert.","path":"assert.notDeepEqual","outFile":"assert.html#assert.notDeepEqual"},{"id":"assert.notEqual","type":"class method","signatures":[{"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"Tests shallow, coercive non-equality with the not equal comparison operator (\n`!=` ).","short_description":"Tests shallow, coercive non-equality with the not equal comparison operator (\n`!=` ).","line":82,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"notEqual","name_prefix":"assert.","path":"assert.notEqual","outFile":"assert.html#assert.notEqual"},{"id":"assert.notStrictEqual","type":"class method","signatures":[{"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"Tests strict non-equality, as determined by the strict not equal operator (\n`!==` ).","short_description":"Tests strict non-equality, as determined by the strict not equal operator (\n`!==` ).","line":123,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"notStrictEqual","name_prefix":"assert.","path":"assert.notStrictEqual","outFile":"assert.html#assert.notStrictEqual"},{"id":"assert.ok","type":"class method","signatures":[{"arguments":[{"name":"value","types":["Object"],"description":"The value you receive\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n\n\n"}]}],"arguments":[{"name":"value","types":["Object"],"description":"The value you receive\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n\n\n"}],"related_to":"assert.assert","description":"Tests if value is a `true` value. This is equivalent to `assert.equal(true,\nvalue, message);`. This is the same as `assert()`, except that `message` is not\nrequired.","short_description":"Tests if value is a `true` value. This is equivalent to `assert.equal(true,\nvalue, message);`. This is the same as `assert()`, except that `message` is not\nrequired.","line":61,"aliases":["console.assert"],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"ok","name_prefix":"assert.","path":"assert.ok","outFile":"assert.html#assert.ok"},{"id":"assert.strictEqual","type":"class method","signatures":[{"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"actual","types":["Object"],"description":"The value you receive\n\n"},{"name":"expected","types":["Object"],"description":"The expected value you're looking for\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"Tests strict equality, as determined by the strict equality operator ( `===` ).","short_description":"Tests strict equality, as determined by the strict equality operator ( `===` ).","line":112,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"strictEqual","name_prefix":"assert.","path":"assert.strictEqual","outFile":"assert.html#assert.strictEqual"},{"id":"assert.throws","type":"class method","signatures":[{"arguments":[{"name":"block","types":["Function"],"description":"A block of code to check against\n\n"},{"name":"error","optional":true,"types":["Function","RegExp","Function"],"description":"The expected error that's thrown; this\n\n*can be a constructor, regexp, or validation function\n\n"},{"name":"message","optional":true,"types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}]}],"arguments":[{"name":"block","types":["Function"],"description":"A block of code to check against\n\n"},{"name":"error","types":["Function","RegExp","Function"],"description":"The expected error that's thrown; this\n\n*can be a constructor, regexp, or validation function\n\n"},{"name":"message","types":["String"],"description":"The message to send to the console if the comparisson fails\n\n"}],"description":"If `block`throws an error, then the assertion passes.\n\n#### Example: Validate `instanceof` using a constructor:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/assert/assert.throws_1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: Validate an error message using regular expressions:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/assert/assert.throws_2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: Custom error validation:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/assert/assert.throws_3.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"If `block`throws an error, then the assertion passes.\n","line":146,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/assert.markdown","name":"throws","name_prefix":"assert.","path":"assert.throws","outFile":"assert.html#assert.throws"}],"file":"0.8.14/nodejs_ref_guide/assert.markdown","subclasses":[],"name":"assert","path":"assert","outFile":"assert.html"},{"id":"Buffer","type":"class","metadata":{"type":"global"},"description":"\nPure JavaScript is Unicode friendly, but not nice to binary data.  When dealing\nwith TCP streams or the file system, it's often necessary to handle octet\nstreams. Node has several strategies for manipulating, creating, and consuming\noctet streams.\n\nRaw data is stored in instances of the `Buffer` class. A `Buffer` is similar to\nan array of integers, but corresponds to a raw memory allocation outside the V8\nheap. A `Buffer` cannot be resized.\n\nThe `Buffer` class is a global, making it very rare that one would need to ever\n`require('buffer')`.\n\nConverting between Buffers and JavaScript string objects requires an explicit\nencoding method.  These encoding methods are:\n\n* `'ascii'` - for 7 bit ASCII data only.  This encoding method is very fast, and\nwill strip the high bit if set.\n  Note that this encoding converts a null character (`'\\0'` or `'\\u0000'`) into\n`0x20` (character code of a space). If you want to convert a null character into\n`0x00`, you should use `'utf8'`.\n\n* `'base64'`: Base64 string encoding\n\n* `'binary'`: A way of encoding raw binary data into strings by using only the\nfirst 8 bits of each character. This encoding method is deprecated and should be\navoided in favor of `Buffer` objects where possible. This encoding is going to\nbe removed in future versions of Node.js.\n\n* `'hex'`: Encodes each byte as two hexidecimal characters.\n\n* `'utf8'` - Multi byte encoded Unicode characters.  Many web pages and other\ndocument formats use UTF-8.\n\n* `'utf16le'` - 2 or 4 bytes, little endian encoded Unicode characters.\nSurrogate pairs (U+10000 to U+10FFFF) are supported.\n\n* `'ucs2'`: 2-bytes, little endian encoded Unicode characters. It can encode\nonly BMP (Basic Multilingual Plane—from U+0000 to U+FFFF).\n\nIn most cases, the default of `'utf8'` is used.\n\nFor more information, see [this article on manipulating\nbuffers](../nodejs_dev_guide/manipulating_buffers.html).","stability":"3 - Stable","short_description":"\nPure JavaScript is Unicode friendly, but not nice to binary data.  When dealing\nwith TCP streams or the file system, it's often necessary to handle octet\nstreams. Node has several strategies for manipulating, creating, and consuming\noctet streams.\n","line":52,"aliases":[],"children":[{"id":"Buffer._charsWritten","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of characters written by [[Buffer.write `buffer.write()`]]. This\nvalue is overwritten each time `buffer.write()` is called.","short_description":"The number of characters written by [[Buffer.write `buffer.write()`]]. This\nvalue is overwritten each time `buffer.write()` is called.","line":690,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"_charsWritten","name_prefix":"Buffer.","path":"Buffer._charsWritten","outFile":"buffer.html#Buffer._charsWritten"},{"id":"Buffer.byteLength","type":"class method","signatures":[{"arguments":[{"name":"string","types":["String"],"description":"The string to check\n\n"},{"name":"encoding","default_value":"utf8","types":["String"],"description":"The encoding that the string is in\n\n"}],"returns":[{"type":"Number"}]}],"arguments":[{"name":"string","types":["String"],"description":"The string to check\n\n"},{"name":"encoding","types":["String"],"description":"The encoding that the string is in\n\n"}],"description":"Gives the actual byte length of a string.  This is not the same as\n`String.length` since that returns the number of _characters_ in a string.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.byteLength.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n#### Returns\n\nReturns the byte length of a buffer","short_description":"Gives the actual byte length of a string.  This is not the same as\n`String.length` since that returns the number of _characters_ in a string.\n","line":89,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"byteLength","name_prefix":"Buffer.","path":"Buffer.byteLength","outFile":"buffer.html#Buffer.byteLength"},{"id":"Buffer.concat","type":"class method","signatures":[{"arguments":[{"name":"list"},{"name":"totalLength","optional":true}],"returns":[{"type":"Buffer"}]}],"description":"* `list` {Array} List of Buffer objects to concat\n* `totalLength` {Number} Total length of the buffers when concatenated\n\n<!-- Class Method -->\n\nReturns a buffer that is the result of concatenating all the buffers in\nthe list together.\n\nIf the list has no items, or if `totalLength` is 0, then it returns a\nzero-length buffer.\n\nIf the list has exactly one item, then the first item of the list is\nreturned.\n\nIf the list has more than one item, then a new Buffer is created.\n\nIf `totalLength` is not provided, it is read from the buffers in the list.\nHowever, this adds an additional loop to the function, so it is faster\nto explicitly provide the length.","short_description":"* `list` {Array} List of Buffer objects to concat\n* `totalLength` {Number} Total length of the buffers when concatenated\n","line":174,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"concat","name_prefix":"Buffer.","path":"Buffer.concat","outFile":"buffer.html#Buffer.concat"},{"id":"Buffer.copy","type":"class method","signatures":[{"arguments":[{"name":"targetBuffer","types":["Buffer"],"description":"The buffer to copy into\n\n"},{"name":"targetStart","default_value":0,"types":["Number"],"description":"The offset to start at for the buffer you're copying \n\n*into\n\n"},{"name":"sourceStart","default_value":0,"types":["Number"],"description":"The offset to start at for the buffer you're copying from\n\n"},{"name":"sourceEnd","default_value":"buffer.length","types":["Number"],"description":"The number of bytes to read from the originating buffer.\n\n*Defaults to the length of the buffer\n\n"}]}],"arguments":[{"name":"targetBuffer","types":["Buffer"],"description":"The buffer to copy into\n\n"},{"name":"targetStart","types":["Number"],"description":"The offset to start at for the buffer you're copying \n\n*into\n\n"},{"name":"sourceStart","types":["Number"],"description":"The offset to start at for the buffer you're copying from\n\n"},{"name":"sourceEnd","types":["Number"],"description":"The number of bytes to read from the originating buffer.\n\n*Defaults to the length of the buffer\n\n"}],"description":"Performs a copy between buffers. The source and target regions can overlap.\n\n#### Example: Building two buffers\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.copy.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Performs a copy between buffers. The source and target regions can overlap.\n","line":107,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"copy","name_prefix":"Buffer.","path":"Buffer.copy","outFile":"buffer.html#Buffer.copy"},{"id":"Buffer.fill","type":"class method","signatures":[{"arguments":[{"name":"value","types":["Object"],"description":"The value to use to fill the buffer\n\n"},{"name":"offset","default_value":0,"types":["Number"],"description":"The position in the buffer to start filling at\n\n"},{"name":"end","default_value":"buffer.length","types":["Number"],"description":"The position in the buffer to stop filling at\n\n"}]}],"arguments":[{"name":"value","types":["Object"],"description":"The value to use to fill the buffer\n\n"},{"name":"offset","types":["Number"],"description":"The position in the buffer to start filling at\n\n"},{"name":"end","types":["Number"],"description":"The position in the buffer to stop filling at\n\n"}],"description":"Fills the buffer with the specified value. If the offset and end are not given,\nthis fills the entire buffer.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.fill.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Fills the buffer with the specified value. If the offset and end are not given,\nthis fills the entire buffer.\n","line":122,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"fill","name_prefix":"Buffer.","path":"Buffer.fill","outFile":"buffer.html#Buffer.fill"},{"id":"Buffer.index","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Gets and sets the octet at `index` in an array format. The values refer to\nindividual bytes, so the legal range is between `0x00` and `0xFF` hex or `0` and\n`255`.\n\n#### Example: Copy an ASCII string into a buffer, one byte at a time\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.index.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Gets and sets the octet at `index` in an array format. The values refer to\nindividual bytes, so the legal range is between `0x00` and `0xFF` hex or `0` and\n`255`.\n","line":682,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"index","name_prefix":"Buffer.","path":"Buffer.index","outFile":"buffer.html#Buffer.index"},{"id":"Buffer.INSPECT_MAX_BYTES","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of bytes returned when `buffer.inspect()` is called; the default is 50.\nThis can be overridden by user modules.","short_description":"The number of bytes returned when `buffer.inspect()` is called; the default is 50.\nThis can be overridden by user modules.","line":712,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"INSPECT_MAX_BYTES","name_prefix":"Buffer.","path":"Buffer.INSPECT_MAX_BYTES","outFile":"buffer.html#Buffer.INSPECT_MAX_BYTES"},{"id":"Buffer.isBuffer","type":"class method","signatures":[{"arguments":[{"name":"obj","types":["Object"],"description":"The object to check\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"obj","types":["Object"],"description":"The object to check\n\n"}],"description":"<!-- Class Method -->\n\nReturns `true` if `obj` is a `Buffer`.","short_description":"<!-- Class Method -->\n","line":133,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"isBuffer","name_prefix":"Buffer.","path":"Buffer.isBuffer","outFile":"buffer.html#Buffer.isBuffer"},{"id":"Buffer.length","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The size of the buffer in bytes.  Note that this is not necessarily the size of\nthe contents. `length` refers to the amount of memory allocated for the buffer\nobject.  It does not change when the contents of the buffer are changed.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.length.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"The size of the buffer in bytes.  Note that this is not necessarily the size of\nthe contents. `length` refers to the amount of memory allocated for the buffer\nobject.  It does not change when the contents of the buffer are changed.\n","line":704,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"length","name_prefix":"Buffer.","path":"Buffer.length","outFile":"buffer.html#Buffer.length"},{"id":"new Buffer","type":"constructor","signatures":[{"arguments":[{"name":"array"}]},{"arguments":[{"name":"size"}]},{"arguments":[{"name":"str"},{"name":"encoding","default_value":"utf8"}]}],"description":"Allocates a new buffer object.\n\nYou can use either:\n\n- an `array` of octects\n- allocation of a specific `size`\n- conversion from a `string` with the specified `encoding`\n\n#### Example\n\n    var bBuffer = new Buffer(\"This is a Buffer.\", \"utf8\");","short_description":"Allocates a new buffer object.\n","line":72,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"new","name_prefix":"Buffer.","path":"Buffer.new","outFile":"buffer.html#Buffer.new"},{"id":"Buffer.readDoubleBE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a 64-bit double from the buffer at the specified offset in big endian\nnotation.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readDoubleBELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads a 64-bit double from the buffer at the specified offset in big endian\nnotation.\n","line":149,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readDoubleBE","name_prefix":"Buffer.","path":"Buffer.readDoubleBE","outFile":"buffer.html#Buffer.readDoubleBE"},{"id":"Buffer.readDoubleLE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a 64 bit double from the buffer at the specified offset in little endian\nnotation.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readDoubleBELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads a 64 bit double from the buffer at the specified offset in little endian\nnotation.\n","line":190,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readDoubleLE","name_prefix":"Buffer.","path":"Buffer.readDoubleLE","outFile":"buffer.html#Buffer.readDoubleLE"},{"id":"Buffer.readFloatBE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n** noAssert {Boolean}  If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"},{"name":"noAssert","default_value":false}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n** noAssert {Boolean}  If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a 32 bit float from the buffer at the specified offset in big endian\nnotation.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readFloatBELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads a 32 bit float from the buffer at the specified offset in big endian\nnotation.\n","line":206,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readFloatBE","name_prefix":"Buffer.","path":"Buffer.readFloatBE","outFile":"buffer.html#Buffer.readFloatBE"},{"id":"Buffer.readFloatLE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a 32 bit float from the buffer at the specified offset in little endian\nnotation.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readFloatBELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads a 32 bit float from the buffer at the specified offset in little endian\nnotation.\n","line":222,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readFloatLE","name_prefix":"Buffer.","path":"Buffer.readFloatLE","outFile":"buffer.html#Buffer.readFloatLE"},{"id":"Buffer.readInt16BE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a signed 16 bit integer from the buffer at the specified offset in big\nendian notation.\n\nThis function also works as [[Buffer.readUInt16BE `buffer.readUInt16BE()`]],\nexcept buffer contents are treated as a two's complement signed values.","short_description":"Reads a signed 16 bit integer from the buffer at the specified offset in big\nendian notation.\n","line":253,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readInt16BE","name_prefix":"Buffer.","path":"Buffer.readInt16BE","outFile":"buffer.html#Buffer.readInt16BE"},{"id":"Buffer.readInt16LE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a signed 16 bit integer from the buffer at the specified offset in little\nendian notation.\n\nThis function also works as [[Buffer.readUInt16LE `buffer.readUInt16LE()`]],\nexcept buffer contents are treated as a two'scomplement signed values.","short_description":"Reads a signed 16 bit integer from the buffer at the specified offset in little\nendian notation.\n","line":268,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readInt16LE","name_prefix":"Buffer.","path":"Buffer.readInt16LE","outFile":"buffer.html#Buffer.readInt16LE"},{"id":"Buffer.readInt32BE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a signed 32-bit integer from the buffer at the specified offset in big\nendian notation.\n\nThis function works like [[Buffer.readUInt32BE `buffer.readUInt32BE()`]], except\nbuffer contents are treated as a two's complement signed values.","short_description":"Reads a signed 32-bit integer from the buffer at the specified offset in big\nendian notation.\n","line":283,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readInt32BE","name_prefix":"Buffer.","path":"Buffer.readInt32BE","outFile":"buffer.html#Buffer.readInt32BE"},{"id":"Buffer.readInt32LE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a signed 32 bit integer from the buffer at the specified offset in little\nendian notation.\n\nThis function works like [[Buffer.readUInt32LE `buffer.readUInt32LE()`]], except\nbuffer contents are treated as a two's complement signed values.","short_description":"Reads a signed 32 bit integer from the buffer at the specified offset in little\nendian notation.\n","line":300,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readInt32LE","name_prefix":"Buffer.","path":"Buffer.readInt32LE","outFile":"buffer.html#Buffer.readInt32LE"},{"id":"Buffer.readInt8","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads a signed 8 bit integer from the buffer at the specified offset.\n\nThis function also works as [[Buffer.readUInt8 `buffer.readUInt8()`]], except\nbuffer contents are treated as two's complement signed values.","short_description":"Reads a signed 8 bit integer from the buffer at the specified offset.\n","line":237,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readInt8","name_prefix":"Buffer.","path":"Buffer.readInt8","outFile":"buffer.html#Buffer.readInt8"},{"id":"Buffer.readUInt16BE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads an unsigned 16 bit integer from the buffer at the specified offset in the\nbig endian format.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readUInt16BELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads an unsigned 16 bit integer from the buffer at the specified offset in the\nbig endian format.\n","line":332,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readUInt16BE","name_prefix":"Buffer.","path":"Buffer.readUInt16BE","outFile":"buffer.html#Buffer.readUInt16BE"},{"id":"Buffer.readUInt16LE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads an unsigned 16 bit integer from the buffer at the specified offset in the\nlittle endian format.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readUInt16BELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads an unsigned 16 bit integer from the buffer at the specified offset in the\nlittle endian format.\n","line":347,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readUInt16LE","name_prefix":"Buffer.","path":"Buffer.readUInt16LE","outFile":"buffer.html#Buffer.readUInt16LE"},{"id":"Buffer.readUInt32BE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads an unsigned 32 bit integer from the buffer at the specified offset in the\nbig endian format.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readUInt32BELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads an unsigned 32 bit integer from the buffer at the specified offset in the\nbig endian format.\n","line":363,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readUInt32BE","name_prefix":"Buffer.","path":"Buffer.readUInt32BE","outFile":"buffer.html#Buffer.readUInt32BE"},{"id":"Buffer.readUInt32LE","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads an unsigned 32 bit integer from the buffer at the specified offset in the\nlittle endian format.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readUInt32BELE.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads an unsigned 32 bit integer from the buffer at the specified offset in the\nlittle endian format.\n","line":380,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readUInt32LE","name_prefix":"Buffer.","path":"Buffer.readUInt32LE","outFile":"buffer.html#Buffer.readUInt32LE"},{"id":"Buffer.readUInt8","type":"class method","signatures":[{"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Reads an unsigned 8 bit integer from the buffer at the specified offset.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readUInt8.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Reads an unsigned 8 bit integer from the buffer at the specified offset.\n","line":316,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"readUInt8","name_prefix":"Buffer.","path":"Buffer.readUInt8","outFile":"buffer.html#Buffer.readUInt8"},{"id":"Buffer.slice","type":"class method","signatures":[{"arguments":[{"name":"start","types":["Number"],"description":"The offset in the buffer to start from\n\n"},{"name":"end","default_value":"buffer.length","types":["Number"],"description":"The position of the last byte to slice. Defaults to the length\n\n*of the buffer\n\n"}],"returns":[{"type":"Buffer"}]}],"arguments":[{"name":"start","types":["Number"],"description":"The offset in the buffer to start from\n\n"},{"name":"end","types":["Number"],"description":"The position of the last byte to slice. Defaults to the length\n\n*of the buffer\n\n"}],"description":"Returns a new buffer that references the same memory as the old, but offset and\ncropped by the `start` and `end` indexes.\n\nNote: Modifying the new buffer slice modifies memory in the original buffer!\n\n#### Example\n\nBuilding a `Buffer` with the ASCII alphabet, taking a slice, then modifying one\nbyte from the original `Buffer`:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.readUInt32BELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns a new buffer that references the same memory as the old, but offset and\ncropped by the `start` and `end` indexes.\n","line":399,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"slice","name_prefix":"Buffer.","path":"Buffer.slice","outFile":"buffer.html#Buffer.slice"},{"id":"Buffer.toString","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"utf8","types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"},{"name":"start","default_value":0,"types":["Number"],"description":"The starting byte offset; defaults to `0`\n\n"},{"name":"end","default_value":"buffer.length","types":["Number"],"description":"The number of bytes to write; defaults to the length of the\n\n*buffer\n\n\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"},{"name":"start","types":["Number"],"description":"The starting byte offset; defaults to `0`\n\n"},{"name":"end","types":["Number"],"description":"The number of bytes to write; defaults to the length of the\n\n*buffer\n\n\n\n"}],"related_to":"Buffer.write","description":"Decodes and returns a string from buffer data encoded with `encoding` beginning\nat `start` and ending at `end`.","short_description":"Decodes and returns a string from buffer data encoded with `encoding` beginning\nat `start` and ending at `end`.","line":413,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"toString","name_prefix":"Buffer.","path":"Buffer.toString","outFile":"buffer.html#Buffer.toString"},{"id":"Buffer.write","type":"class method","signatures":[{"arguments":[{"name":"string","types":["String"],"description":"The string to write\n\n"},{"name":"offset","default_value":0,"types":["Number"],"description":"The starting byte offset\n\n"},{"name":"length","default_value":"startPos","types":["Number"],"description":"The number of bytes to write; defaults to the length of the\n\n*buffer minus any offset (`buffer.length` - `buffer.offset`)\n\n"},{"name":"encoding","default_value":"utf8","types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"}],"returns":[{"type":"Number"}]}],"arguments":[{"name":"string","types":["String"],"description":"The string to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting byte offset\n\n"},{"name":"length","types":["Number"],"description":"The number of bytes to write; defaults to the length of the\n\n*buffer minus any offset (`buffer.length` - `buffer.offset`)\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"}],"description":"Writes a `string` to the buffer at `offset` using the given encoding. `length`\nis the number of bytes to write. If `buffer` does not contain enough space to\nfit the entire string, it instead writes a partial amount of the string. The\nmethod doesn't write partial characters.\n\n\n#### Example\n\nWriting a utf8 string into a buffer, then printing it:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.write.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>\n\n#### Returns\n\nReturns number of octets written.","short_description":"Writes a `string` to the buffer at `offset` using the given encoding. `length`\nis the number of bytes to write. If `buffer` does not contain enough space to\nfit the entire string, it instead writes a partial amount of the string. The\nmethod doesn't write partial characters.\n","line":439,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"write","name_prefix":"Buffer.","path":"Buffer.write","outFile":"buffer.html#Buffer.write"},{"id":"Buffer.writeDoubleBE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid 64 bit double.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeDoubleBELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid 64 bit double.\n","line":456,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeDoubleBE","name_prefix":"Buffer.","path":"Buffer.writeDoubleBE","outFile":"buffer.html#Buffer.writeDoubleBE"},{"id":"Buffer.writeDoubleLE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid 64 bit double.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeDoubleBELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid 64 bit double.\n","line":473,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeDoubleLE","name_prefix":"Buffer.","path":"Buffer.writeDoubleLE","outFile":"buffer.html#Buffer.writeDoubleLE"},{"id":"Buffer.writeFloatBE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid 32 bit float.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeFloatBELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid 32 bit float.\n","line":489,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeFloatBE","name_prefix":"Buffer.","path":"Buffer.writeFloatBE","outFile":"buffer.html#Buffer.writeFloatBE"},{"id":"Buffer.writeFloatLE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid 32 bit float.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeFloatBELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid 32 bit float.\n","line":506,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeFloatLE","name_prefix":"Buffer.","path":"Buffer.writeFloatLE","outFile":"buffer.html#Buffer.writeFloatLE"},{"id":"Buffer.writeInt16BE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid signed 16 bit integer.\n\nThis function also works as `buffer.writeUInt16*()`, except value is written out\nas a two's complement signed integer into `buffer`.","short_description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid signed 16 bit integer.\n","line":539,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeInt16BE","name_prefix":"Buffer.","path":"Buffer.writeInt16BE","outFile":"buffer.html#Buffer.writeInt16BE"},{"id":"Buffer.writeInt16LE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":"alse","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid signed 16 bit integer.\n\nThis function also works as `buffer.writeUInt16*()`, except value is written out\nas a two's complement signed integer into `buffer`.","short_description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid signed 16 bit integer.\n","line":556,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeInt16LE","name_prefix":"Buffer.","path":"Buffer.writeInt16LE","outFile":"buffer.html#Buffer.writeInt16LE"},{"id":"Buffer.writeInt32BE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid signed 32 bit integer.\n\nThis function also works as `buffer.writeUInt32*`, except value is written out\nas a two's complement signed integer into `buffer`.","short_description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid signed 32 bit integer.\n","line":572,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeInt32BE","name_prefix":"Buffer.","path":"Buffer.writeInt32BE","outFile":"buffer.html#Buffer.writeInt32BE"},{"id":"Buffer.writeInt32LE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid signed 32 bit integer.\n\nThis function also works as `buffer.writeUInt32*`, except value is written out\nas a two's complement signed integer into `buffer`.","short_description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid signed 32 bit integer.\n","line":589,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeInt32LE","name_prefix":"Buffer.","path":"Buffer.writeInt32LE","outFile":"buffer.html#Buffer.writeInt32LE"},{"id":"Buffer.writeInt8","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset. Note that `value` must be\na valid signed 8 bit integer.\n\nWorks as `buffer.writeUInt8()`, except value is written out as a two's\ncomplement signed integer into `buffer`.","short_description":"Writes `value` to the buffer at the specified offset. Note that `value` must be\na valid signed 8 bit integer.\n","line":522,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeInt8","name_prefix":"Buffer.","path":"Buffer.writeInt8","outFile":"buffer.html#Buffer.writeInt8"},{"id":"Buffer.writeUInt16BE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid unsigned 16 bit integer.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeUInt16BELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid unsigned 16 bit integer.\n","line":623,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeUInt16BE","name_prefix":"Buffer.","path":"Buffer.writeUInt16BE","outFile":"buffer.html#Buffer.writeUInt16BE"},{"id":"Buffer.writeUInt16LE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset \n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset \n\n"}],"description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid unsigned 16 bit integer.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeUInt16BELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid unsigned 16 bit integer.\n","line":638,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeUInt16LE","name_prefix":"Buffer.","path":"Buffer.writeUInt16LE","outFile":"buffer.html#Buffer.writeUInt16LE"},{"id":"Buffer.writeUInt32BE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid unsigned 32 bit integer.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeUInt32BELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the big endian format.\nNote that `value` must be a valid unsigned 32 bit integer.\n","line":655,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeUInt32BE","name_prefix":"Buffer.","path":"Buffer.writeUInt32BE","outFile":"buffer.html#Buffer.writeUInt32BE"},{"id":"Buffer.writeUInt32LE","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset \n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset \n\n"}],"description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid unsigned 32 bit integer.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeUInt32BELE.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset in the little endian\nformat. Note that `value` must be a valid unsigned 32 bit integer.\n","line":669,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeUInt32LE","name_prefix":"Buffer.","path":"Buffer.writeUInt32LE","outFile":"buffer.html#Buffer.writeUInt32LE"},{"id":"Buffer.writeUInt8","type":"class method","signatures":[{"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","default_value":false,"types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}]}],"arguments":[{"name":"value","types":["String"],"description":"The content to write\n\n"},{"name":"offset","types":["Number"],"description":"The starting position\n\n"},{"name":"noAssert","types":["Boolean"],"description":"If `true`, skips the validation of the offset. This means\n\n*that `offset` may be beyond the end of the buffer, and is typically not\n\n*recommended.\n\n"}],"description":"Writes `value` to the buffer at the specified offset. Note that `value` must be\na valid unsigned 8 bit integer.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/buffer/buffer.writeUInt8.js?linestart=4&lineend=0&showlines=false' defer='defer'></script>","short_description":"Writes `value` to the buffer at the specified offset. Note that `value` must be\na valid unsigned 8 bit integer.\n","line":606,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","name":"writeUInt8","name_prefix":"Buffer.","path":"Buffer.writeUInt8","outFile":"buffer.html#Buffer.writeUInt8"}],"file":"0.8.14/nodejs_ref_guide/buffer.markdown","subclasses":[],"name":"Buffer","path":"Buffer","outFile":"buffer.html"},{"id":"child_process","type":"class","description":"\nNode.js provides a tri-directional\n[`popen(3)`](http://www.kernel.org/doc/man-pages/online/pages/man3/popen.3.html)\nfacility through the `child_process` module. It's possible to stream data\nthrough the child's `stdin`, `stdout`, and `stderr` in a fully non-blocking way.\n\nTo create a child process object, use `require('child_process')` in your code.\n\nChild processes always have three streams associated with them. They are:\n\n* `child.stdin`, the standard input stream\n* `child.stdout`, the standard output stream\n* `child.stderr`, the standard error stream\n\n#### Example: Running ls in a child process\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/child_process/child_process.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"3 - Stable","short_description":"\nNode.js provides a tri-directional\n[`popen(3)`](http://www.kernel.org/doc/man-pages/online/pages/man3/popen.3.html)\nfacility through the `child_process` module. It's possible to stream data\nthrough the child's `stdin`, `stdout`, and `stderr` in a fully non-blocking way.\n","line":24,"aliases":[],"children":[{"id":"child_process.connected","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"Returns `true` if a child process is connected.","short_description":"Returns `true` if a child process is connected.","line":77,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"connected","name_prefix":"child_process.","path":"child_process.connected","outFile":"child_process.html#child_process.connected"},{"id":"child_process.disconnect","type":"class method","signatures":[{"arguments":[]}],"description":"To close the IPC connection between parent and child, use this method. It\nallows the child to exit gracefully since there is no IPC channel keeping it alive.\nWhen calling this method, the `disconnect` event is emitted in both parent and child, and the\n`connected` flag is set to `false`. Note that you can also call\n[[child_process.disconnect `child_process.disconnect()`]] in the child process.","short_description":"To close the IPC connection between parent and child, use this method. It\nallows the child to exit gracefully since there is no IPC channel keeping it alive.\nWhen calling this method, the `disconnect` event is emitted in both parent and child, and the\n`connected` flag is set to `false`. Note that you can also call\n[[child_process.disconnect `child_process.disconnect()`]] in the child process.","line":493,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"disconnect","name_prefix":"child_process.","path":"child_process.disconnect","outFile":"child_process.html#child_process.disconnect"},{"id":"child_process.exec","type":"class method","signatures":[{"arguments":[{"name":"command","types":["String"],"description":"The Unix command to run\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"The options to pass to the command\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard `Error` object; `err.code` is the exit code of the child process and `err.signal` is set to the signal that terminated the process\n\n","types":["Error"]},{"name":"stdout","description":"The standard output stream\n\n","types":["stream.ReadableStream"]},{"name":"stderr","description":"The standard error stream\n\n\n\n","types":["stream.ReadableStream"]}],"callback":true,"types":["Function"],"description":"The function to run after the method completes\n\n"}],"returns":[{"type":"Object"}]}],"arguments":[{"name":"command","types":["String"],"description":"The Unix command to run\n\n"},{"name":"options","types":["Object"],"description":"The options to pass to the command\n\n"},{"name":"callback","types":["Function"],"description":"The function to run after the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard `Error` object; `err.code` is the exit code of the child process and `err.signal` is set to the signal that terminated the process\n\n"},{"name":"stdout","types":["stream.ReadableStream"],"description":"The standard output stream\n\n"},{"name":"stderr","types":["stream.ReadableStream"],"description":"The standard error stream\n\n\n\n"}],"related_to":"child_process.spawn","description":"Runs a Unix command in a shell and buffers the output.\n\nThere is a second optional argument to specify several options. The default\noptions are:\n\n    {\n      encoding: 'utf8',\n      timeout: 0,\n      maxBuffer: 200*1024,\n      killSignal: 'SIGTERM',\n      cwd: null,\n      env: null\n    }\n\nThese refer to:\n\n* `cwd`, a [[String string]], specifies the working directory from which the process is spawned\n* `stdio`, either an [[Array array]] or [[String string]], containing the child's stdio configuration\n* `customFds`, an [[Array array]], is **deprecated**. They were file descriptors for the child to use for stdio\n* `env`, an [[Object object]], specifies environment variables that will be visible to the new process\n* `detached`, a [[Boolean boolean]], identifying if the child will be a process group leader\n* `encoding` is the current encoding the output is defined with\n* `timeout` is an integer, which, if greater than `0`, kills the child process\nif it runs longer than `timeout` milliseconds\n* `maxBuffer` specifies the largest amount of data allowed on stdout or stderr;\nif this value is exceeded then the child process is killed.\n* `killSignal` defines [a kill\nsignal](http://kernel.org/doc/man-pages/online/pages/man7/signal.7.html) to kill\nthe child process with\n\nFor further information on these, see the explanation in [[child_process.exec `child_process.exec()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/child_process/child.exec.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n* `modulePath` {String} The module to run in the child\n* `args` {Array} List of string arguments\n* `options` {Object}\n `cwd` {String} Current working directory of the child process\n `customFds` {Array} **Deprecated** File descriptors for the child to use\n    for stdio.  (See below)\n `env` {Object} Environment key-value pairs\n `encoding` {String} (Default: 'utf8')\n `timeout` {Number} (Default: 0)\n `uid` {Number} Sets the user identity of the process. (See [setuid(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/setuid.2.html).)\n `gid` {Number} Sets the group identity of the process. (See [setgid(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/setgid.2.html).)\n* `callback` {Function} called with the output when process terminates\n `code` {Integer} Exit code\n `stdout` {Buffer}\n `stderr` {Buffer}\n* Return: ChildProcess object\n\nAn object containing the three standard streams, plus other parameters like the\nPID, signal code, and exit code","short_description":"Runs a Unix command in a shell and buffers the output.\n","line":311,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"exec","name_prefix":"child_process.","path":"child_process.exec","outFile":"child_process.html#child_process.exec"},{"id":"child_process.execFile","type":"class method","signatures":[{"arguments":[{"name":"file","types":["String"],"description":"The file location with the commands to run\n\n"},{"name":"args","types":["String"],"description":"The command line arguments to pass\n\n"},{"name":"options","types":["Object"],"description":"The options to pass to the `exec` call\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard `Error` object, except `err.code` is the exit code\n\n*of the child process, and `err.signal is set to the signal that terminated the\n\n*process\n\n","types":["Error"]},{"name":"stdout","description":"is the standard output stream\n\n","types":["stream.ReadableStream"]},{"name":"stderr","description":"is the standard error stream\n\n","types":["stream.ReadableStream"]}],"callback":true,"types":["Function"],"description":"The function to run after the method completes\n\n"}]}],"arguments":[{"name":"file","types":["String"],"description":"The file location with the commands to run\n\n"},{"name":"args","types":["String"],"description":"The command line arguments to pass\n\n"},{"name":"options","types":["Object"],"description":"The options to pass to the `exec` call\n\n"},{"name":"callback","types":["Function"],"description":"The function to run after the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard `Error` object, except `err.code` is the exit code\n\n*of the child process, and `err.signal is set to the signal that terminated the\n\n*process\n\n"},{"name":"stdout","types":["stream.ReadableStream"],"description":"is the standard output stream\n\n"},{"name":"stderr","types":["stream.ReadableStream"],"description":"is the standard error stream\n\n"}],"description":"A function similar to `child.exec()`, except instead of executing a subshell it\nexecutes the specified file directly. This makes it slightly leaner than\n`child.exec`. It has the same options and callback.","short_description":"A function similar to `child.exec()`, except instead of executing a subshell it\nexecutes the specified file directly. This makes it slightly leaner than\n`child.exec`. It has the same options and callback.","line":329,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"execFile","name_prefix":"child_process.","path":"child_process.execFile","outFile":"child_process.html#child_process.execFile"},{"id":"child_process.fork","type":"class method","signatures":[{"arguments":[{"name":"modulePath","types":["String"],"description":"The location of the module\n\n"},{"name":"arguments","types":["Array"],"description":"A list of string arguments to use\n\n"},{"name":"options","types":["Object"],"description":"Any additional options to pass\n\n  * `cwd` {String} Current working directory of the child process\n\n  * `customFds` {Array} **Deprecated** File descriptors for the child to use\n\n*    for stdio.  (See below)\n\n  * `env` {Object} Environment key-value pairs\n\n  * `encoding` {String} (Default: 'utf8')\n\n\n\n"}],"returns":[{"type":"Object"}]}],"arguments":[{"name":"modulePath","types":["String"],"description":"The location of the module\n\n"},{"name":"arguments","types":["Array"],"description":"A list of string arguments to use\n\n"},{"name":"options","types":["Object"],"description":"Any additional options to pass\n\n  * `cwd` {String} Current working directory of the child process\n\n  * `customFds` {Array} **Deprecated** File descriptors for the child to use\n\n*    for stdio.  (See below)\n\n  * `env` {Object} Environment key-value pairs\n\n  * `encoding` {String} (Default: 'utf8')\n\n\n\n"}],"related_to":"child_process.spawn","description":"This is a special case of the [[child_process.spawn `child_process.spawn()`]]\nfunctionality for spawning Node.js processes. In addition to having all the\nmethods in a normal child_process instance, the returned object has a\ncommunication channel built-in. See [[child_process.send `send()`]] for details.\n\nBy default the spawned Node.js process will have `stdout` and `stderr`\nassociated with the parent's. To change this behavior set the `silent` property\nin the `options` object to `true`.\n\nThe child process does not automatically exit once it's done; you'll need to\ncall [[process.exit `process.exit()`]] explicitly. This limitation may be lifted\nin the future.\n\nThese child nodes are still whole new instances of V8. Assume at least 30ms\nstartup and 10mb memory for each new node. That is, you can't create many\nthousands of them.","short_description":"This is a special case of the [[child_process.spawn `child_process.spawn()`]]\nfunctionality for spawning Node.js processes. In addition to having all the\nmethods in a normal child_process instance, the returned object has a\ncommunication channel built-in. See [[child_process.send `send()`]] for details.\n","line":360,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"fork","name_prefix":"child_process.","path":"child_process.fork","outFile":"child_process.html#child_process.fork"},{"id":"child_process.kill","type":"class method","signatures":[{"arguments":[{"name":"signal","default_value":"SIGTERM","optional":true,"types":["String"],"description":"The kill signal to send\n\n"}]}],"arguments":[{"name":"signal","types":["String"],"description":"The kill signal to send\n\n"}],"description":"Sends a signal to the child process. See\n[`signal(7)`](http://www.kernel.org/doc/man-pages/online/pages/man7/signal.7.html) for a list of available signals.\n\nNote that while the function is called `kill`, the signal delivered to the child\nprocess may not actually kill it. `kill` really just sends a signal to a\nprocess.\n\nFor more information, see\n[`kill(2)`](http://www.kernel.org/doc/man-pages/online/pages/man2/kill.2.html).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/child_process/child.kill.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Sends a signal to the child process. See\n[`signal(7)`](http://www.kernel.org/doc/man-pages/online/pages/man7/signal.7.html) for a list of available signals.\n","line":380,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"kill","name_prefix":"child_process.","path":"child_process.kill","outFile":"child_process.html#child_process.kill"},{"id":"child_process.pid","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The PID of the child process.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/child_process/child.pid.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"The PID of the child process.\n","line":105,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"pid","name_prefix":"child_process.","path":"child_process.pid","outFile":"child_process.html#child_process.pid"},{"id":"child_process.send","type":"class method","signatures":[{"arguments":[{"name":"message","types":["Object"],"description":"A parsed JSON object, or a primitive value\n\n"},{"name":"sendHandle","optional":true,"types":["net.Server","net.Socket"],"description":"A handle object\n\n"}]}],"arguments":[{"name":"message","types":["Object"],"description":"A parsed JSON object, or a primitive value\n\n"},{"name":"sendHandle","types":["net.Server","net.Socket"],"description":"A handle object\n\n"}],"description":"When using [[child_process.fork `fork()`]], you can write to the child using\nthis method. Messages are received by a `'message'` event on the child.\n\nFor example:\n\n    var cp = require('child_process');\n\n    var n = cp.fork(__dirname + '/sub.js');\n\n    n.on('message', function(m) {\n      console.log('PARENT got message:', m);\n    });\n\n    n.send({ hello: 'world' });\n\nThe child script, `'sub.js'` might look like this:\n\n    process.on('message', function(m) {\n      console.log('CHILD got message:', m);\n    });\n\n    process.send({ foo: 'bar' });\n\nIn the child, the `process` object will have a `send()` method, and `process`\nwill emit objects each time it receives a message on its channel.\n\nNote: There is a special case when sending a `{cmd: 'NODE_foo'}` message. All messages containing a `NODE_` prefix in its `cmd` property are not be emitted in the `message` event, since they are internal messages used by node core. Messages containing the prefix are emitted in the `internalMessage` event. **You should by all means avoid using this feature, it is subject to change without notice.**\n\nThe `sendHandle` option to `child_process.send()` is for sending a TCP server or\nsocket object to another process. The child receives the object as its\nsecond argument to the `message` event.\n\n#### Examples\n\nHere is an example of sending a server:\n\n    var child = require('child_process').fork('child.js');\n\n    // Open up the server object and send the handle.\n    var server = require('net').createServer();\n    server.on('connection', function (socket) {\n      socket.end('handled by parent');\n    });\n    server.listen(1337, function() {\n      child_process.send('server', server);\n    });\n\nAnd the child would the recive the server object as:\n\n    process.on('message', function(m, server) {\n      if (m === 'server') {\n        server.on('connection', function (socket) {\n          socket.end('handled by child');\n        });\n      }\n    });\n\nNote that the server is now shared between the parent and child. This means\nthat some connections are handled by the parent and some by the child.\n\n\nHere is an example of sending a socket. It spawns two children, and handles\nconnections with the remote address `74.125.127.100` as VIP, by sending the\nsocket to a \"special\" child process. Other sockets will go to a \"normal\" process.\n\n    var normal = require('child_process').fork('child.js', ['normal']);\n    var special = require('child_process').fork('child.js', ['special']);\n\n    // Open up the server and send sockets to child\n    var server = require('net').createServer();\n    server.on('connection', function (socket) {\n\n      // if this is a VIP\n      if (socket.remoteAddress === '74.125.127.100') {\n        special.send('socket', socket);\n        return;\n      }\n      // just the usual dudes\n      normal.send('socket', socket);\n    });\n    server.listen(1337);\n\nThe `child.js` could look like this:\n\n    process.on('message', function(m, socket) {\n      if (m === 'socket') {\n        socket.end('You were handled as a ' + process.argv[2] + ' person');\n      }\n    });\n\nNote that once a single socket has been sent to a child, the parent can no\nlonger keep track of when the socket is destroyed. To indicate this condition,\nthe `.connections` property becomes `null`. It is also recommended not to use\n`.maxConnections` in this condition.","short_description":"When using [[child_process.fork `fork()`]], you can write to the child using\nthis method. Messages are received by a `'message'` event on the child.\n","line":482,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"send","name_prefix":"child_process.","path":"child_process.send","outFile":"child_process.html#child_process.send"},{"id":"child_process.spawn","type":"class method","signatures":[{"arguments":[{"name":"command","types":["String"],"description":"The Unix command to spawn\n\n"},{"name":"args","optional":true,"types":["String","Array"],"description":"The command line arguments to pass\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Any additional options you want to transfer\n\n\n\n"}]}],"arguments":[{"name":"command","types":["String"],"description":"The Unix command to spawn\n\n"},{"name":"args","types":["String","Array"],"description":"The command line arguments to pass\n\n"},{"name":"options","types":["Object"],"description":"Any additional options you want to transfer\n\n\n\n"}],"related_to":"child_process.exec","description":"Launches a new process for the given Unix `command`. You can pass command line\narguments through `args`.\n\n`options` specifies additional options, which are:\n\nThey refer to:\n\n* `cwd`, a [[String string]], specifies the working directory from which the process is spawned\n* `stdio`, either an [[Array array]] or [[String string]], containing the child's stdio configuration\n* `customFds`, an [[Array array]], is **deprecated**. They were file descriptors for the child to use for stdio\n* `env`, an [[Object object]], specifies environment variables that will be visible to the new process\n* `detached`, a [[Boolean boolean]], identifying if the child will be a process group leader\n\nThis object defaults to:\n\n    {\n      cwd: undefined,\n      env: process.env\n    }\n\nNote that if `spawn()` receives an empty `options` object, it spawns the process\nwith an empty environment rather than using [[process.env `process.env`]]. This\nis due to backwards compatibility issues with a deprecated API.\n\n##### About `stdio`\n\nThe 'stdio' option to `child_process.spawn()` is an array where each\nindex corresponds to a file descriptor in the child.  The value is one of the following:\n\n1. `'pipe'` - Create a pipe between the child process and the parent process.\n   The parent end of the pipe is exposed to the parent as a property on the\n   `child_process` object--as `ChildProcess.stdio[fd]`. Pipes created for\n   fds 0 - 2 are also available as `ChildProcess.stdin`, `ChildProcess.stdout`\n   and `ChildProcess.stderr`, respectively.\n2. `'ipc'` - Create an IPC channel for passing messages or file descriptors\n   between parent and child. A ChildProcess may have at most *one* IPC stdio\n   file descriptor. Setting this option enables the [[child_process.send `child_process.send()`]] method.\n   If the child writes JSON messages to this file descriptor, then this will\n   trigger the child process' [[eventemitter.on `'on'`]] event.  If the child is a\n   Node.js program, then the presence of an IPC channel will enable\n   [[child_process.send `send()` and `'on'`.\n3. `'ignore'` - Do not set this file descriptor in the child. Note that Node\n   will always open fd 0 - 2 for the processes it spawns. When any of these is\n   ignored, node will open `/dev/null` and attach it to the child's fd.\n4. [[Stream `Stream`]] object - Share a readable or writable stream that refers to a tty,\n   file, socket, or a pipe with the child process. The stream's underlying\n   file descriptor is duplicated in the child process to the fd that\n   corresponds to the index in the `stdio` array.\n5. Positive integer - The integer value is interpreted as a file descriptor\n   that is is currently open in the parent process. It is shared with the child\n   process, similar to how `Stream` objects can be shared.\n6. `null` or `undefined` - Use default value. For stdio fds 0, 1 and 2 (in other\n   words, stdin, stdout, and stderr) a pipe is created. For fd 3 and up, the\n   default is `'ignore'`.\n\nAs a shorthand, the `stdio` argument may also be one of the following strings, rather than an array:\n\n* `ignore` - `['ignore', 'ignore', 'ignore']`\n* `pipe` - `['pipe', 'pipe', 'pipe']`\n* `inherit` - `[process.stdin, process.stdout, process.stderr]` or `[0,1,2]`\n\nFor example:\n\n    var spawn = require('child_process').spawn;\n\n    // Child will use parent's stdios\n    spawn('prg', [], { stdio: 'inherit' });\n\n    // Spawn child sharing only stderr\n    spawn('prg', [], { stdio: ['pipe', 'pipe', process.stderr] });\n\n    // Open an extra fd=4, to interact with programs present a\n    // startd-style interface.\n    spawn('prg', [], { stdio: ['pipe', null, null, null, 'pipe'] });\n\nIf the `detached` option is set, the child process will be made the leader of a\nnew process group.  This makes it possible for the child to continue running\nafter the parent exits.\n\nBy default, the parent will wait for the detached child to exit.  To prevent\nthe parent from waiting for a given `child`, use the `child.unref()` method,\nand the parent's event loop will not include the child in its reference count.\n\nExample of detaching a long-running process and redirecting its output to a\nfile:\n\n     var fs = require('fs'),\n         spawn = require('child_process').spawn,\n         out = fs.openSync('./out.log', 'a'),\n         err = fs.openSync('./out.log', 'a');\n\n     var child = spawn('prg', [], {\n       detached: true,\n       stdio: [ 'ignore', out, err ]\n     });\n\n     child.unref();\n\nWhen using the `detached` option to start a long-running process, the process\nwon't stay running in the background unless it is provided with a `stdio`\nconfiguration that is not connected to the parent.  If the parent's `stdio` is\ninherited, the child will remain attached to the controlling terminal.\n\n##### Undocumented Options\n\nThere are several internal options—in particular: `stdinStream`, `stdoutStream`,\nand `stderrStream`. They are for INTERNAL USE ONLY. As with all undocumented\nAPIs in Node.js, they shouldn't be used.\n\nThere is also a deprecated option called `customFds`, which allows one to\nspecify specific file descriptors for the `stdio` of the child process. This API\nwas not portable to all platforms and therefore removed. With `customFds`, it\nwas possible to hook up the new process' [stdin, stdout, stderr] to existing\nstream; `-1` meant that a new stream should be created. **Use this functionality\nat your own risk.**\n\n#### Example: Running `ls -lh /usr`, capturing `stdout`, `stderr`, and the exit\ncode\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/child_process/child.spawn_1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: A very elaborate way to run `'ps ax | grep ssh'`:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/child_process/child.spawn_2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: Checking for a failed `exec`:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/child_process/child.spawn_3.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Launches a new process for the given Unix `command`. You can pass command line\narguments through `args`.\n","line":243,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"spawn","name_prefix":"child_process.","path":"child_process.spawn","outFile":"child_process.html#child_process.spawn"},{"id":"child_process.stdin","type":"class property","signatures":[{"returns":[{"type":"stream.WritableStream"}]}],"description":"A [[stream.WritableStream `Writable Stream`]] that represents the child\nprocess's `stdin`. Closing this stream via [[stream.WritableStream.end\n`stream.WritableStream.end()`]] often causes the child process to terminate.","short_description":"A [[stream.WritableStream `Writable Stream`]] that represents the child\nprocess's `stdin`. Closing this stream via [[stream.WritableStream.end\n`stream.WritableStream.end()`]] often causes the child process to terminate.","line":86,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"stdin","name_prefix":"child_process.","path":"child_process.stdin","outFile":"child_process.html#child_process.stdin"},{"id":"child_process.stdout","type":"class property","signatures":[{"returns":[{"type":"stream.ReadableStream"}]}],"description":"A [[stream.ReadableStream `Readable Stream`]] that represents the child\nprocess's `stdout`.","short_description":"A [[stream.ReadableStream `Readable Stream`]] that represents the child\nprocess's `stdout`.","line":94,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"stdout","name_prefix":"child_process.","path":"child_process.stdout","outFile":"child_process.html#child_process.stdout"},{"id":"child_process@close","type":"namespace","description":"This event is emitted when the stdio streams of a child process have all\nterminated. This is distinct from `'exit'`, since multiple processes\nmight share the same stdio streams.","short_description":"This event is emitted when the stdio streams of a child process have all\nterminated. This is distinct from `'exit'`, since multiple processes\nmight share the same stdio streams.","line":50,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"close","name_prefix":"child_process@","path":"child_process.event.close","outFile":"child_process.html#child_process.event.close"},{"id":"child_process@disconnect","type":"namespace","description":"This event is emitted after using the [[child_process.disconnect `disconnect()`]] method in\nthe parent or in the child. After disconnecting, it is no longer possible to send messages.\nAn alternative way to check if you can send messages is to see if the\n[[child_process.connected `child_process.connected`]] property is `true`.","short_description":"This event is emitted after using the [[child_process.disconnect `disconnect()`]] method in\nthe parent or in the child. After disconnecting, it is no longer possible to send messages.\nAn alternative way to check if you can send messages is to see if the\n[[child_process.connected `child_process.connected`]] property is `true`.","line":60,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"disconnect","name_prefix":"child_process@","path":"child_process.event.disconnect","outFile":"child_process.html#child_process.event.disconnect"},{"id":"child_process@exit","type":"event","signatures":[{"arguments":[{"name":"code","types":["Number"],"description":"The final exit code of the process (otherwise, `null`)\n\n"},{"name":"signal","types":["String"],"description":"The string name of the signal (otherwise, `null`)\n\n"}]}],"arguments":[{"name":"code","types":["Number"],"description":"The final exit code of the process (otherwise, `null`)\n\n"},{"name":"signal","types":["String"],"description":"The string name of the signal (otherwise, `null`)\n\n"}],"description":"This event is emitted after the child process ends. If the process terminated\nnormally, `code` is the final exit code of the process; otherwise, it's `null`. If\nthe process terminated due to receipt of a signal, `signal` is the string name\nof the signal; otherwise, it's `null`.\n\nNote that the child process stdio streams might still be open.\n\nFor more information, see\n[waitpid(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/wait.2.html).","short_description":"This event is emitted after the child process ends. If the process terminated\nnormally, `code` is the final exit code of the process; otherwise, it's `null`. If\nthe process terminated due to receipt of a signal, `signal` is the string name\nof the signal; otherwise, it's `null`.\n","line":41,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"exit","name_prefix":"child_process@","path":"child_process.event.exit","outFile":"child_process.html#child_process.event.exit"},{"id":"child_process@message","type":"event","signatures":[{"arguments":[{"name":"message","types":["Object"],"description":"A parsed JSON object, or a primitive value\n\n"},{"name":"sendHandle","types":["net.Server","net.Socket"],"description":"A handle object\n\n"}]}],"arguments":[{"name":"message","types":["Object"],"description":"A parsed JSON object, or a primitive value\n\n"},{"name":"sendHandle","types":["net.Server","net.Socket"],"description":"A handle object\n\n"}],"description":"Messages sent by [[child_process.send `send()`]] are obtained using this\n`message` event.","short_description":"Messages sent by [[child_process.send `send()`]] are obtained using this\n`message` event.","line":70,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","name":"message","name_prefix":"child_process@","path":"child_process.event.message","outFile":"child_process.html#child_process.event.message"}],"file":"0.8.14/nodejs_ref_guide/child_process.markdown","subclasses":[],"name":"child_process","path":"child_process","outFile":"child_process.html"},{"id":"cluster","type":"class","description":"\nA single instance of Node runs in a single thread. To take advantage of\nmulti-core systems the user will sometimes want to launch a cluster of Node\nprocesses to handle the load.\n\nTo use this module, add `require('cluster')` to your code.\n\nNote: This feature was introduced recently, and may change in future versions. Please try it out and provide feedback.\n\n##### How It Works\n\nWorker processes are spawned using the [[child_process.fork `child_process.fork()`]] method,\nso that they can communicate with the parent via IPC and pass server\nhandles back and forth.\n\nWhen you call `server.listen(...)` in a worker, it serializes the\narguments and passes the request to the master process.  If the master\nprocess already has a listening server matching the worker's\nrequirements, it passes the handle to the worker.  If it does not\nalready have a listening server matching that requirement, it creates one,\nand passes the handle to the child.\n\nThis causes potentially surprising behavior in three edge cases:\n\n1. `server.listen({fd: 7})`: Because the message is passed to the master,\n   file descriptor 7 **in the parent** will be listened on, and the\n   handle passed to the worker, rather than listening to the worker's\n   idea of what the number 7 file descriptor references.\n2. `server.listen(handle)`: Listening on handles explicitly will cause\n   the worker to use the supplied handle, rather than talk to the master\n   process.  If the worker already has the handle, then it's presumed\n   that you know what you are doing.\n3. `server.listen(0)`: Normally, this causes servers to listen on a\n   random port.  However, in a cluster, each worker will receive the\n   same \"random\" port each time they do `listen(0)`.  In essence, the\n   port is random the first time, but predictable thereafter.  If you\n   want to listen on a unique port, generate a port number based on the\n   cluster worker ID.\n\nWhen multiple processes are all `accept()`ing on the same underlying\nresource, the operating system load-balances across them very\nefficiently.  There is no routing logic in Node.js, or in your program,\nand no shared state between the workers.  Therefore, it is important to\ndesign your program such that it does not rely too heavily on in-memory\ndata objects for things like sessions and login.\n\nBecause workers are all separate processes, they can be killed or\nre-spawned depending on your program's needs, without affecting other\nworkers.  As long as there are some workers still alive, the server will\ncontinue to accept connections.  Node does not automatically manage the\nnumber of workers for you, however.  It is your responsibility to manage\nthe worker pool for your application's needs.\n\n#### Example: Launching one cluster working for each CPU\n\nThe cluster module allows you to easily create a network of processes that all\nshare server ports.\n\nCreate a file called _server.js_ and paste the following code:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/cluster/server.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nBy launching _server.js_ with the Node.js REPL, you can see that the workers are\nsharing the HTTP port 8000:\n\n    % node server.js\n    Worker 2438 online\n    Worker 2437 online\n\n\n#### Example: Message passing between clusters and the master process\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/cluster/cluster.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"1 - Experimental","short_description":"\nA single instance of Node runs in a single thread. To take advantage of\nmulti-core systems the user will sometimes want to launch a cluster of Node\nprocesses to handle the load.\n","line":80,"aliases":[],"children":[{"id":"cluster.disconnect","type":"class method","signatures":[{"arguments":[{"name":"callback","optional":true,"types":["Function"],"description":"Called when all workers are disconnected and handlers are\n\n*closed\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"Called when all workers are disconnected and handlers are\n\n*closed\n\n"}],"description":"When calling this method, all workers will commit a graceful suicide. After they\nare disconnected, all internal handlers will be closed, allowing the master\nprocess to die graceful if no other event is waiting.","short_description":"When calling this method, all workers will commit a graceful suicide. After they\nare disconnected, all internal handlers will be closed, allowing the master\nprocess to die graceful if no other event is waiting.","line":272,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"disconnect","name_prefix":"cluster.","path":"cluster.disconnect","outFile":"cluster.html#cluster.disconnect"},{"id":"cluster.fork","type":"class method","signatures":[{"arguments":[{"name":"env","optional":true,"types":["Object"],"description":"Additional key/value pairs to add to child process environment.\n\n"}],"returns":[{"type":"cluster.worker"}]}],"arguments":[{"name":"env","types":["Object"],"description":"Additional key/value pairs to add to child process environment.\n\n"}],"description":"Spawns a new worker process. This can only be called from the master process.","short_description":"Spawns a new worker process. This can only be called from the master process.","line":104,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"fork","name_prefix":"cluster.","path":"cluster.fork","outFile":"cluster.html#cluster.fork"},{"id":"cluster.isMaster","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"Flag to determine if the current process is a master process in a cluster. A\nprocess is a master if `process.env.NODE_WORKER_ID` is undefined.","short_description":"Flag to determine if the current process is a master process in a cluster. A\nprocess is a master if `process.env.NODE_WORKER_ID` is undefined.","line":120,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"isMaster","name_prefix":"cluster.","path":"cluster.isMaster","outFile":"cluster.html#cluster.isMaster"},{"id":"cluster.isWorker","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"Flag to determine if the current process is a worker process in a cluster. A\nprocess is a worker if `process.env.NODE_WORKER_ID` is defined.","short_description":"Flag to determine if the current process is a worker process in a cluster. A\nprocess is a worker if `process.env.NODE_WORKER_ID` is defined.","line":112,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"isWorker","name_prefix":"cluster.","path":"cluster.isWorker","outFile":"cluster.html#cluster.isWorker"},{"id":"cluster.setupMaster","type":"class method","signatures":[{"arguments":[{"name":"settings","optional":true,"types":["Object"],"description":"Various settings to configure. The properties on this\n\n*parameter are:\n\n  * `exec`, the [[String `String`]] file path to worker file. The default is\n\n*`__filename`.\n\n  * `args`, an  [[Array `Array`]] of string arguments passed to worker. The\n\n*default is `process.argv.slice(2)`.\n\n  * `silent`, [[Boolean `Boolean`]] specifying whether or not to send output to\n\n*parent's stdio. The default is `false`.\n\n"}]}],"arguments":[{"name":"settings","types":["Object"],"description":"Various settings to configure. The properties on this\n\n*parameter are:\n\n  * `exec`, the [[String `String`]] file path to worker file. The default is\n\n*`__filename`.\n\n  * `args`, an  [[Array `Array`]] of string arguments passed to worker. The\n\n*default is `process.argv.slice(2)`.\n\n  * `silent`, [[Boolean `Boolean`]] specifying whether or not to send output to\n\n*parent's stdio. The default is `false`.\n\n"}],"description":"`setupMaster` is used to change the default `'fork'` behavior. The new settings\nare effective immediately and permanently, and they cannot be changed later on.\n\n#### Example\n\n    var cluster = require(\"cluster\");\n    cluster.setupMaster({\n      exec : \"worker.js\",\n      args : [\"--use\", \"https\"],\n      silent : true\n    });\n    cluster.fork();","short_description":"`setupMaster` is used to change the default `'fork'` behavior. The new settings\nare effective immediately and permanently, and they cannot be changed later on.\n","line":261,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"setupMaster","name_prefix":"cluster.","path":"cluster.setupMaster","outFile":"cluster.html#cluster.setupMaster"},{"id":"cluster.worker","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"A reference to the current worker object. This is not available in the master process.\n\n    var cluster = require('cluster');\n\n    if (cluster.isMaster) {\n      console.log('I am master');\n      cluster.fork();\n      cluster.fork();\n    } else if (cluster.isWorker) {\n      console.log('I am worker #' + cluster.worker.id);\n    }","short_description":"A reference to the current worker object. This is not available in the master process.\n","line":289,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"worker","name_prefix":"cluster.","path":"cluster.worker","outFile":"cluster.html#cluster.worker"},{"id":"cluster.workers","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"A hash that stores the active worker objects, keyed by `id` field. It is only available in the master\nprocess.\n\nThis makes it easy to loop through all the workers, like this:\n\n    // Go through all workers\n    function eachWorker(callback) {\n      for (var uniqueID in cluster.workers) {\n        callback(cluster.workers[uniqueID]);\n      }\n    }\n    eachWorker(function (worker) {\n      worker.send('big announcement to all workers');\n    });\n\nShould you wish to reference a worker over a communication channel, using the\nworker's uniqueID is the easiest way to find the worker:\n\n    socket.on('data', function (uniqueID) {\n      var worker = cluster.workers[uniqueID];\n    });","short_description":"A hash that stores the active worker objects, keyed by `id` field. It is only available in the master\nprocess.\n","line":316,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"workers","name_prefix":"cluster.","path":"cluster.workers","outFile":"cluster.html#cluster.workers"},{"id":"cluster@death","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster"],"description":"The dying worker in the cluster\n\n"}]}],"arguments":[{"name":"worker","types":["cluster"],"description":"The dying worker in the cluster\n\n"}],"description":"When any of the workers die, the cluster module emits this event. This can be\nused to restart the worker by calling [[cluster.fork `cluster.fork()`]] again.\n\nDifferent techniques can be used to restart the worker, depending on the\napplication.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/cluster/cluster.death.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"When any of the workers die, the cluster module emits this event. This can be\nused to restart the worker by calling [[cluster.fork `cluster.fork()`]] again.\n","line":96,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"death","name_prefix":"cluster@","path":"cluster.event.death","outFile":"cluster.html#cluster.event.death"},{"id":"cluster@disconnect","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that disconnected\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that disconnected\n\n"}],"description":"When a worker's IPC channel has disconnected, this event is emitted. This\nhappens when the worker dies, usually after calling [[worker.destroy]].\n\nWhen calling `disconnect()`, there may be a delay between the `disconnect` and\n`death` events.  This event can be used to detect if the process is stuck in a\ncleanup or if there are long-living connections.\n\n#### Example\n\n    cluster.on('disconnect', function(worker) {\n      console.log('The worker #' + worker.uniqueID + ' has disconnected');\n    });","short_description":"When a worker's IPC channel has disconnected, this event is emitted. This\nhappens when the worker dies, usually after calling [[worker.destroy]].\n","line":207,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"disconnect","name_prefix":"cluster@","path":"cluster.event.disconnect","outFile":"cluster.html#cluster.event.disconnect"},{"id":"cluster@exit","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker object\n\n"},{"name":"code","types":["Number"],"description":"The exit code, if it exited normally\n\n"},{"name":"signal","types":["String"],"description":"The name of the signal (eg. `'SIGHUP'`) that caused the process to be killed.\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker object\n\n"},{"name":"code","types":["Number"],"description":"The exit code, if it exited normally\n\n"},{"name":"signal","types":["String"],"description":"The name of the signal (eg. `'SIGHUP'`) that caused the process to be killed.\n\n"}],"description":"When any of the workers die, the cluster module emits the 'exit' event.\nThis can be used to restart the worker by calling `fork()` again.\n\n    cluster.on('exit', function(worker, code, signal) {\n      var exitCode = worker.process.exitCode;\n      console.log('worker ' + worker.process.pid + ' died ('+exitCode+'). restarting...');\n      cluster.fork();\n    });","short_description":"When any of the workers die, the cluster module emits the 'exit' event.\nThis can be used to restart the worker by calling `fork()` again.\n","line":225,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"exit","name_prefix":"cluster@","path":"cluster.event.exit","outFile":"cluster.html#cluster.event.exit"},{"id":"cluster@fork","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that was forked\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that was forked\n\n"}],"description":"When a new worker is forked the cluster module will emit a 'fork' event. This\ncan be used to log worker activity, and create you own timeout.\n\n#### Example\n\n    var timeouts = [];\n    var errorMsg = function () {\n      console.error(\"Something must be wrong with the connection ...\");\n    });\n\n    cluster.on('fork', function (worker) {\n      timeouts[worker.uniqueID] = setTimeout(errorMsg, 2000);\n    });\n    cluster.on('listening', function (worker) {\n      clearTimeout(timeouts[worker.uniqueID]);\n    });\n    cluster.on('death', function (worker) {\n      clearTimeout(timeouts[worker.uniqueID]);\n      errorMsg();\n    });","short_description":"When a new worker is forked the cluster module will emit a 'fork' event. This\ncan be used to log worker activity, and create you own timeout.\n","line":147,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"fork","name_prefix":"cluster@","path":"cluster.event.fork","outFile":"cluster.html#cluster.event.fork"},{"id":"cluster@listening","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker to listen for\n\n"},{"name":"address","types":["Object"],"description":"Contains the `address` and `port` information where the worker is listening\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker to listen for\n\n"},{"name":"address","types":["Object"],"description":"Contains the `address` and `port` information where the worker is listening\n\n"}],"description":"When calling `listen()` from a worker, a 'listening' event is automatically assigned\nto the server instance. When the server is listening, a message is sent to the master\nwhere the 'listening' event is emitted.\n\n#### Example\n\nThe event handler is executed with two arguments, the `worker` contains the\nworker object and the `address` object contains the following connection properties:\n`address`, `port` and `addressType`. This is very useful if the worker is\nlistening on more than one address.\n\n    cluster.on('listening', function (worker, address) {\n      console.log(\"A worker is now connected to \" + address.address + \":\" + address.port);\n    });","short_description":"When calling `listen()` from a worker, a 'listening' event is automatically assigned\nto the server instance. When the server is listening, a message is sent to the master\nwhere the 'listening' event is emitted.\n","line":188,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"listening","name_prefix":"cluster@","path":"cluster.event.listening","outFile":"cluster.html#cluster.event.listening"},{"id":"cluster@online","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that becomes online\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that becomes online\n\n"}],"description":"After forking a new worker, the worker should respond with a online message.\nWhen the master receives a online message it emits this event.\n\nThe difference between `'fork'` and `'online'` is that fork is emitted when the\nmaster tries to fork a worker, and `'online'` is emitted when the worker is\nbeing executed.\n\n#### Example\n\n    cluster.on('online', function (worker) {\n      console.log(\"Yay, the worker responded after it was forked\");\n    });","short_description":"After forking a new worker, the worker should respond with a online message.\nWhen the master receives a online message it emits this event.\n","line":166,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"online","name_prefix":"cluster@","path":"cluster.event.online","outFile":"cluster.html#cluster.event.online"},{"id":"cluster@setup","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that executed\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that executed\n\n"}],"description":"When the [[cluster.setupMaster `setupMaster()`]] function has been executed this\nevent emits. If [[cluster.setupMaster `setupMaster()`]] was not executed before [[cluster.fork `fork()`]], this function\ncalls `setupMaster()` with no arguments.","short_description":"When the [[cluster.setupMaster `setupMaster()`]] function has been executed this\nevent emits. If [[cluster.setupMaster `setupMaster()`]] was not executed before [[cluster.fork `fork()`]], this function\ncalls `setupMaster()` with no arguments.","line":235,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"setup","name_prefix":"cluster@","path":"cluster.event.setup","outFile":"cluster.html#cluster.event.setup"},{"id":"worker","type":"class","superclass":"cluster","description":"A `Worker` object contains all public information and methods about a worker. In\nthe master, it can be obtained using `cluster.workers`. In a worker it can be\nobtained using `cluster.worker`.","short_description":"A `Worker` object contains all public information and methods about a worker. In\nthe master, it can be obtained using `cluster.workers`. In a worker it can be\nobtained using `cluster.worker`.","line":325,"aliases":[],"children":[{"id":"worker.destroy","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Void"}]}],"description":"This function kills the worker, and informs the master to not spawn a new worker.\nTo know the difference between suicide and accidentally death, a suicide boolean\nis set to `true`.\n\n    cluster.on('death', function (worker) {\n      if (worker.suicide === true) {\n        console.log('Oh, it was just suicide\\' – no need to worry').\n      }\n    });\n\n    // destroy worker\n    worker.destroy();","short_description":"This function kills the worker, and informs the master to not spawn a new worker.\nTo know the difference between suicide and accidentally death, a suicide boolean\nis set to `true`.\n","line":396,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"destroy","name_prefix":"worker.","path":"worker.destroy","outFile":"cluster.html#worker.destroy"},{"id":"worker.disconnect","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Void"}]}],"description":"When calling this function the worker will no longer accept new connections, but\nthey will be handled by any other listening worker. Existing connection will be\nallowed to exit as usual. When no more connections exist, the IPC channel to the\nworker will close allowing it to die graceful. When the IPC channel is closed\nthe `disconnect` event will emit, this is then followed by the `death` event,\nthere is emitted when the worker finally die.\n\nBecause there might be long living connections, it is useful to implement a\ntimeout. This example ask the worker to disconnect and after two seconds it will\ndestroy the server. An alternative would be to execute `worker.destroy()` after\n2 seconds, but that would normally not allow the worker to do any cleanup if\nneeded.\n\n#### Example\n\n    if (cluster.isMaster) {\n      var worker = cluster.fork();\n      var timeout;\n\n      worker.on('listening', function () {\n        worker.disconnect();\n        timeout = setTimeout(function () {\n          worker.send('force kill');\n        }, 2000);\n      });\n\n      worker.on('disconnect', function () {\n        clearTimeout(timeout);\n      });\n\n    } else if (cluster.isWorker) {\n      var net = require('net');\n      var server = net.createServer(function (socket) {\n        // connection never end\n      });\n\n      server.listen(8000);\n\n      server.on('close', function () {\n        // cleanup\n      });\n\n      process.on('message', function (msg) {\n        if (msg === 'force kill') {\n          server.destroy();\n        }\n      });\n    }","short_description":"When calling this function the worker will no longer accept new connections, but\nthey will be handled by any other listening worker. Existing connection will be\nallowed to exit as usual. When no more connections exist, the IPC channel to the\nworker will close allowing it to die graceful. When the IPC channel is closed\nthe `disconnect` event will emit, this is then followed by the `death` event,\nthere is emitted when the worker finally die.\n","line":450,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"disconnect","name_prefix":"worker.","path":"worker.disconnect","outFile":"cluster.html#worker.disconnect"},{"id":"worker.id","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"Each new worker is given its own unique id, stored here.\n\nWhile a worker is alive, this is the key that indexes it in `cluster.workers`.","short_description":"Each new worker is given its own unique id, stored here.\n","line":334,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"id","name_prefix":"worker.","path":"worker.id","outFile":"cluster.html#worker.id"},{"id":"worker.process","type":"class property","signatures":[{"returns":[{"type":"child_process"}]}],"description":"Since all workers are created using [[child_process.fork\n`child_process.fork()`]], the returned object from that function is stored in\n`process`.\n\nFor more information, see the [[`child_process` module](child_process.html).","short_description":"Since all workers are created using [[child_process.fork\n`child_process.fork()`]], the returned object from that function is stored in\n`process`.\n","line":345,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"process","name_prefix":"worker.","path":"worker.process","outFile":"cluster.html#worker.process"},{"id":"worker.send","type":"class method","signatures":[{"arguments":[{"name":"message","types":["Object"],"description":"A message to send\n\n"}],"returns":[{"type":"Void"}]}],"arguments":[{"name":"message","types":["Object"],"description":"A message to send\n\n"}],"description":"This function is equal to the send methods provided by `child_process.fork()`.\nIn the master, you should use this function to\nsend a message to a specific worker.  However, in a worker you can also use\n`process.send(message)`, since this is the same function.\n\n#### Example: Echoing Back Messages from the Master\n\n    if (cluster.isMaster) {\n      var worker = cluster.fork();\n      worker.send('hi there');\n\n    } else if (cluster.isWorker) {\n      process.on('message', function (msg) {\n        process.send(msg);\n      });\n    }","short_description":"This function is equal to the send methods provided by `child_process.fork()`.\nIn the master, you should use this function to\nsend a message to a specific worker.  However, in a worker you can also use\n`process.send(message)`, since this is the same function.\n","line":377,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"send","name_prefix":"worker.","path":"worker.send","outFile":"cluster.html#worker.send"},{"id":"worker.suicide","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"This property is a boolean. It is set when a worker dies after calling\n`destroy()` or immediately after calling the `disconnect()` method. Until then,\nit is `undefined`.","short_description":"This property is a boolean. It is set when a worker dies after calling\n`destroy()` or immediately after calling the `disconnect()` method. Until then,\nit is `undefined`.","line":354,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"suicide","name_prefix":"worker.","path":"worker.suicide","outFile":"cluster.html#worker.suicide"},{"id":"worker@disconnect","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The disconnected worker\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The disconnected worker\n\n"}],"description":"Same as the [[cluster@disconnect `cluster.on('disconnect')`]] event, but emits only when the state\nchange on the specified worker.\n\n    cluster.fork().on('disconnect', function (worker) {\n      // Worker has disconnected\n    };","short_description":"Same as the [[cluster@disconnect `cluster.on('disconnect')`]] event, but emits only when the state\nchange on the specified worker.\n","line":543,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"disconnect","name_prefix":"worker@","path":"worker.event.disconnect","outFile":"cluster.html#worker.event.disconnect"},{"id":"worker@exit","type":"event","signatures":[{"arguments":[{"name":"code","types":["Number"],"description":"The exit code, if exited normally\n\n"},{"name":"signal","types":["String"],"description":"The name of the signal, (_e.g._ `'SIGHUP'`) that caused\n\n*  the process to be killed.\n\n"}]}],"arguments":[{"name":"code","types":["Number"],"description":"The exit code, if exited normally\n\n"},{"name":"signal","types":["String"],"description":"The name of the signal, (_e.g._ `'SIGHUP'`) that caused\n\n*  the process to be killed.\n\n"}],"description":"Emitted by the individual worker instance, when the underlying child process\nis terminated.  For more information, see [[child_process@exit child_process' `'exit'` event].\n\n    var worker = cluster.fork();\n    worker.on('exit', function(code, signal) {\n      if( signal ) {\n        console.log(\"worker was killed by signal: \"+signal);\n      } else if( code !== 0 ) {\n        console.log(\"worker exited with error code: \"+code);\n      } else {\n        console.log(\"worker success!\");\n      }\n    };","short_description":"Emitted by the individual worker instance, when the underlying child process\nis terminated.  For more information, see [[child_process@exit child_process' `'exit'` event].\n","line":565,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"exit","name_prefix":"worker@","path":"worker.event.exit","outFile":"cluster.html#worker.event.exit"},{"id":"worker@listening@listening","type":"event","signatures":[{"arguments":[{"name":"address","types":["Object"],"description":"Contains the `address` and `port` information where the worker is listening\n\n"}]}],"arguments":[{"name":"address","types":["Object"],"description":"Contains the `address` and `port` information where the worker is listening\n\n"}],"description":"Same as the [[cluster@listening]] event, but emits only when the state change on the specified worker.\n\n#### Example\n\n    cluster.fork().on('listening', function (address) {\n      // Worker is listening\n    };","short_description":"Same as the [[cluster@listening]] event, but emits only when the state change on the specified worker.\n","line":530,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"listening@listening","name_prefix":"worker@","path":"worker.event.listening@listening","outFile":"cluster.html#worker.event.listeningeventlistening"},{"id":"worker@message","type":"event","signatures":[{"arguments":[{"name":"message","types":["Object"],"description":"The message to send\n\n"}]}],"arguments":[{"name":"message","types":["Object"],"description":"The message to send\n\n"}],"description":"This event is the same as the one provided by `child_process.fork()`. In the\nmaster you should use this event, however in a worker you can also use\n`process.on('message')`\n\n#### Example\n\nHere is a cluster that keeps count of the number of requests in the master\nprocess using the message system:\n\n    var cluster = require('cluster');\n    var http = require('http');\n\n    if (cluster.isMaster) {\n\n      // Keep track of http requests\n      var numReqs = 0;\n      setInterval(function() {\n        console.log(\"numReqs =\", numReqs);\n      }, 1000);\n\n      // Count requestes\n      var messageHandler = function (msg) {\n        if (msg.cmd && msg.cmd == 'notifyRequest') {\n          numReqs += 1;\n        }\n      };\n\n      // Start workers and listen for messages containing notifyRequest\n      var numCPUs = require('os').cpus().length;\n      for (var i = 0; i < numCPUs; i++) {\n        cluster.fork();\n      }\n\n    } else {\n\n      // Worker processes have a http server.\n      http.Server(function(req, res) {\n        res.writeHead(200);\n        res.end(\"hello world\\n\");\n\n        // notify master about the request\n        process.send({ cmd: 'notifyRequest' });\n      }).listen(8000);\n    }","short_description":"This event is the same as the one provided by `child_process.fork()`. In the\nmaster you should use this event, however in a worker you can also use\n`process.on('message')`\n","line":501,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"message","name_prefix":"worker@","path":"worker.event.message","outFile":"cluster.html#worker.event.message"},{"id":"worker@online","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that came online\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that came online\n\n"}],"description":"Same as a cluster's [[cluster@online `'online'`]] event, but emits only when the\nstate changes on the specified worker.\n\n#### Example\n\n    cluster.fork().on('online', function (worker) {\n      // Worker is online\n    };","short_description":"Same as a cluster's [[cluster@online `'online'`]] event, but emits only when the\nstate changes on the specified worker.\n","line":516,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"online","name_prefix":"worker@","path":"worker.event.online","outFile":"cluster.html#worker.event.online"}],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","subclasses":[],"name":"worker","path":"worker","outFile":"cluster.html"}],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","subclasses":["worker"],"name":"cluster","path":"cluster","outFile":"cluster.html"},{"id":"console","type":"class","metadata":{"type":"global"},"description":"\nThese methods are useful for printing to stdout and stderr. They are similar to\nthe `console` object functions provided by most web browsers. The `console`\nobject is global, so you don't need to `require` anything.\n\nIt's important to note that printing to stdout and stderr is synchronous, and\ntherefore, blocking.","stability":"3 - Stable","short_description":"\nThese methods are useful for printing to stdout and stderr. They are similar to\nthe `console` object functions provided by most web browsers. The `console`\nobject is global, so you don't need to `require` anything.\n","line":16,"aliases":[],"children":[{"id":"console.assert","type":"class method","signatures":[{"arguments":[{"name":"expression"},{"name":"message","optional":true}]}],"alias_of":"assert.ok","description":"","short_description":"","line":23,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"assert","name_prefix":"console.","path":"console.assert","outFile":"stdio.html#console.assert"},{"id":"console.dir","type":"class method","signatures":[{"arguments":[{"name":"obj","types":["Object"],"description":"An object to inspect\n\n\n\n"}]}],"arguments":[{"name":"obj","types":["Object"],"description":"An object to inspect\n\n\n\n"}],"alias_of":"util.inspect","description":"Uses [[util.inspect `util.inspect()`]] on `obj` and prints the resulting string\nto stdout.","short_description":"Uses [[util.inspect `util.inspect()`]] on `obj` and prints the resulting string\nto stdout.","line":34,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"dir","name_prefix":"console.","path":"console.dir","outFile":"stdio.html#console.dir"},{"id":"console.error","type":"class method","signatures":[{"arguments":[{"name":"data","ellipsis":true,"optional":true,"types":["Object"],"description":"A message to send\n\n\n\n"}]}],"arguments":[{"name":"data","types":["Object"],"description":"A message to send\n\n\n\n"}],"related_to":"console.log","description":"This performs the same role as `console.log()`, but prints to stderr instead.","short_description":"This performs the same role as `console.log()`, but prints to stderr instead.","line":55,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"error","name_prefix":"console.","path":"console.error","outFile":"stdio.html#console.error"},{"id":"console.info","type":"class method","signatures":[{"arguments":[{"name":"data","ellipsis":true,"optional":true}]}],"alias_of":"console.log","description":"This is just an alias to [[console.log `console.log()`]].","short_description":"This is just an alias to [[console.log `console.log()`]].","line":64,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"info","name_prefix":"console.","path":"console.info","outFile":"stdio.html#console.info"},{"id":"console.log","type":"class method","signatures":[{"arguments":[{"name":"data","ellipsis":true,"optional":true,"types":["String"],"description":"The string to print, and any additional formatting arguments\n\n\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"The string to print, and any additional formatting arguments\n\n\n\n"}],"alias_of":"util.format","description":"Prints to stdout with a newline. This function can take multiple arguments in\n[a `printf()`-like](http://en.wikipedia.org/wiki/Printf_format_string#Format_placeholders) way.\n\nEach placeholder is replaced with the converted value from its corresponding\nargument. Supported placeholders are:\n\n* `%s` - String.\n* `%d` - Number (both integer and float).\n* `%j` - JSON.\n* `%%` - single percent sign (`'%'`). This does not consume an argument.\n\nIf formatting elements are not found in the first string then [[util.inspect\n`util.inspect()`]] is used on each argument.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/console/console.log.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Prints to stdout with a newline. This function can take multiple arguments in\n[a `printf()`-like](http://en.wikipedia.org/wiki/Printf_format_string#Format_placeholders) way.\n","line":89,"aliases":["console.info"],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"log","name_prefix":"console.","path":"console.log","outFile":"stdio.html#console.log"},{"id":"console.time","type":"class method","signatures":[{"arguments":[{"name":"label","types":["String"],"description":"An identifying string\n\n\n\n"}]}],"arguments":[{"name":"label","types":["String"],"description":"An identifying string\n\n\n\n"}],"related_to":"console.timeEnd","description":"Marks a time by printing it out to the console. This is used in conjunction with\n`console.timeEnd()`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/console/console.time.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Marks a time by printing it out to the console. This is used in conjunction with\n`console.timeEnd()`.\n","line":104,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"time","name_prefix":"console.","path":"console.time","outFile":"stdio.html#console.time"},{"id":"console.timeEnd","type":"class method","signatures":[{"arguments":[{"name":"label","types":["String"],"description":"An identifying string\n\n\n\n"}]}],"arguments":[{"name":"label","types":["String"],"description":"An identifying string\n\n\n\n"}],"related_to":"console.time","description":"Finish the previous timer and prints output.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/console/console.time.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nconsole.trace(label)\n\nPrints a stack trace to stderr of the current position.","short_description":"Finish the previous timer and prints output.\n","line":120,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"timeEnd","name_prefix":"console.","path":"console.timeEnd","outFile":"stdio.html#console.timeEnd"},{"id":"console.warn","type":"class method","signatures":[{"arguments":[{"name":"data","ellipsis":true,"optional":true,"types":["String"],"description":"A message to send\n\n\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"A message to send\n\n\n\n"}],"related_to":"console.log","description":"This performs the same role as `console.log()`, but prints to stderr instead.","short_description":"This performs the same role as `console.log()`, but prints to stderr instead.","line":44,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","name":"warn","name_prefix":"console.","path":"console.warn","outFile":"stdio.html#console.warn"}],"file":"0.8.14/nodejs_ref_guide/stdio.markdown","subclasses":[],"name":"console","path":"console","outFile":"stdio.html"},{"id":"crypto","type":"class","description":"\nThe `crypto` module offers a way of encapsulating secure credentials to be used\nas part of a secure HTTPS net or HTTP connection. To access this module, add\n`require('crypto')` to your code.\n\nThe module also offers a set of wrappers for OpenSSL's methods, which actually\ncontains these objects:\n\n* [[crypto.cipher Cipher]]\n* [[crypto.decipher Decipher]]\n* [[crypto.diffieHellman Diffie-Hellman]]\n* [[crypto.hash Hash]]\n* [[crypto.hmac HMAC]]\n* [[crypto.signer Signer]]\n* [[crypto.verifier Verifier]]\n\nThis documentation is organized to describe those objects within their own\nsections.\n\nNote: All `algorithm` parameter implementations below are dependent on the OpenSSL version installed on the platform. Some common examples of these algoritihms are `'sha1'`, `'md5'`, `'sha256'`, and `'sha512'`. On recent Node.js releases, `openssl list-message-digest-algorithms` displays the available digest algorithms.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Proposed API Changes in Future Versions of Node\n\nThe Crypto module was added to Node before there was the concept of a\nunified Stream API, and before there were Buffer objects for handling\nbinary data.\n\nAs such, the streaming classes don't have the typical methods found on\nother Node classes, and many methods accept and return Binary-encoded\nstrings by default rather than Buffers.\n\nA future version of node will make Buffers the default data type.\nThis will be a breaking change for some use cases, but not all.\n\nFor example, if you currently use the default arguments to the Sign\nclass, and then pass the results to the Verify class, without ever\ninspecting the data, then it will continue to work as before.  Where\nyou now get a binary string and then present the binary string to the\nVerify object, you'll get a Buffer, and present the Buffer to the\nVerify object.\n\nHowever, if you are doing things with the string data that will not\nwork properly on Buffers (such as, concatenating them, storing in\ndatabases, etc.), or you are passing binary strings to the crypto\nfunctions without an encoding argument, then you will need to start\nproviding encoding arguments to specify which encoding you'd like to\nuse.\n\nAlso, a Streaming API will be provided, but this will be done in such\na way as to preserve the legacy API surface.","stability":"2 - Unstable","short_description":"\nThe `crypto` module offers a way of encapsulating secure credentials to be used\nas part of a secure HTTPS net or HTTP connection. To access this module, add\n`require('crypto')` to your code.\n","line":61,"aliases":[],"children":[{"id":"crypto.cipher","type":"class","superclass":"crypto","description":"A class for encrypting data. It's a representation of the [OpenSSL\nimplementation of cipher](http://www.openssl.org/docs/apps/ciphers.html). It can\nbe created as a returned value from [[crypto.createCipher\n`crypto.createCipher()`]] or [[crypto.createCipheriv\n`crypto.createCipheriv()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/cipher.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"A class for encrypting data. It's a representation of the [OpenSSL\nimplementation of cipher](http://www.openssl.org/docs/apps/ciphers.html). It can\nbe created as a returned value from [[crypto.createCipher\n`crypto.createCipher()`]] or [[crypto.createCipheriv\n`crypto.createCipheriv()`]].\n","line":309,"aliases":[],"children":[{"id":"crypto.cipher.final","type":"class method","signatures":[{"arguments":[{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use for the output; defaults to\n\n*binary\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"output_encoding","types":["String"],"description":"The encoding to use for the output; defaults to\n\n*binary\n\n"}],"description":"Returns any remaining enciphered contents. `output_encoding` can be `'binary'`,\n`'base64'`, or `'hex'`.\n\nNote: The `cipher` object can't be used after the `final()` method has been called.","short_description":"Returns any remaining enciphered contents. `output_encoding` can be `'binary'`,\n`'base64'`, or `'hex'`.\n","line":321,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"final","name_prefix":"crypto.cipher.","path":"crypto.cipher.final","outFile":"crypto.html#crypto.cipher.final"},{"id":"crypto.cipher.setAutoPadding","type":"class method","signatures":[{"arguments":[{"name":"auto_padding","default_value":true,"types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}]}],"arguments":[{"name":"auto_padding","types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}],"description":"You can disable automatic padding of the input data to block size.\n\nIf `auto_padding` is false, the length of the entire input data must be a\nmultiple of the cipher's block size or `final` will fail.\n\nThis is useful for non-standard padding, _e.g._ using `0x0` instead of PKCS\npadding. You must call this before `cipher.final`.","short_description":"You can disable automatic padding of the input data to block size.\n","line":350,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setAutoPadding","name_prefix":"crypto.cipher.","path":"crypto.cipher.setAutoPadding","outFile":"crypto.html#crypto.cipher.setAutoPadding"},{"id":"crypto.cipher.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the input is encoded; can be `'utf8'`,\n\n*`'ascii'` or `'binary'`\n\n"},{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the output is encoded; can be\n\n*`'binary'`, `'base64'` or `'hex'`\n\n\n\n"}],"returns":[{"type":"crypto.cipher"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","types":["String"],"description":"Defines how the input is encoded; can be `'utf8'`,\n\n*`'ascii'` or `'binary'`\n\n"},{"name":"output_encoding","types":["String"],"description":"Defines how the output is encoded; can be\n\n*`'binary'`, `'base64'` or `'hex'`\n\n\n\n"}],"chainable":true,"description":"Updates the cipher with `data`. This returns the enciphered contents, and can be\ncalled many times with new data as it is streamed.","short_description":"Updates the cipher with `data`. This returns the enciphered contents, and can be\ncalled many times with new data as it is streamed.","line":336,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.cipher.","path":"crypto.cipher.update","outFile":"crypto.html#crypto.cipher.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"cipher","name_prefix":"crypto.","path":"crypto.cipher","outFile":"crypto.html"},{"id":"crypto.createCipher","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"password","types":["String"],"description":"The password to use\n\n"}],"returns":[{"type":"crypto.cipher"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"password","types":["String"],"description":"The password to use\n\n"}],"description":"Creates and returns a cipher object with the given algorithm and password.\n\nThe `password` is used to derive both the key and IV, which must be a\n`'binary'`-encoded string, or a [[Buffer\nbuffer]].","short_description":"Creates and returns a cipher object with the given algorithm and password.\n","line":74,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createCipher","name_prefix":"crypto.","path":"crypto.createCipher","outFile":"crypto.html#crypto.createCipher"},{"id":"crypto.createCipheriv","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use (same as the argument in [[crypto.createCipher `createCipher()`]])\n\n"},{"name":"key","types":["String"],"description":"A raw key used by the algorithm\n\n"},{"name":"iv","types":["String"],"description":"The [initialization vector](http://en.wikipedia.org/wiki/Initialization_vector)\n\n"}],"returns":[{"type":"crypto.cipher"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use (same as the argument in [[crypto.createCipher `createCipher()`]])\n\n"},{"name":"key","types":["String"],"description":"A raw key used by the algorithm\n\n"},{"name":"iv","types":["String"],"description":"The [initialization vector](http://en.wikipedia.org/wiki/Initialization_vector)\n\n"}],"description":"Creates and returns a cipher object, with the given algorithm, key, and IV.\n\n`key` and `iv` must be `'binary'`-encoded strings or a [[Buffer buffer]].","short_description":"Creates and returns a cipher object, with the given algorithm, key, and IV.\n","line":87,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createCipheriv","name_prefix":"crypto.","path":"crypto.createCipheriv","outFile":"crypto.html#crypto.createCipheriv"},{"id":"crypto.createCredentials","type":"class method","signatures":[{"arguments":[{"name":"details","optional":true,"types":["String"],"description":"A dictionary of fields to populate the credential with\n\n"}],"returns":[{"type":"Object"}]}],"arguments":[{"name":"details","types":["String"],"description":"A dictionary of fields to populate the credential with\n\n"}],"description":"Creates a credentials object, with  `details` being a dictionary with the\nfollowing keys:\n\n- `pfx`: A string or buffer holding the PFX or PKCS12 encoded private key,\ncertificate, and CA certificates\n- `key`: A string holding the PEM encoded private key file\n- `cert`: A string holding the PEM encoded certificate file\n- `passphrase`: A string of passphrases for the private key or pfx\n- `ca`: Either a string or list of strings of PEM encoded CA certificates\nto trust\n* `crl` : Either a string or list of strings of PEM encoded CRLs (Certificate Revocation List)\n- `ciphers`: A string describing the ciphers to use or exclude. Consult\n[OpenSSL.org](http://www.openssl.org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT)\nfor details on the format\n\nIf no `ca` details are given, then Node.js uses the default publicly trusted\nlist of CAs as given by\n[Mozilla](http://mxr.mozilla.org/mozilla/source/security/nss/lib/ckfw/builtins/certdata.txt).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createCredentials.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Creates a credentials object, with  `details` being a dictionary with the\nfollowing keys:\n","line":116,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createCredentials","name_prefix":"crypto.","path":"crypto.createCredentials","outFile":"crypto.html#crypto.createCredentials"},{"id":"crypto.createDecipher","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"password","types":["String"],"description":"The password to use\n\n"}],"returns":[{"type":"crypto.decipher"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"password","types":["String"],"description":"The password to use\n\n"}],"description":"Creates and returns a decipher object, with the given algorithm and key.","short_description":"Creates and returns a decipher object, with the given algorithm and key.","line":125,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createDecipher","name_prefix":"crypto.","path":"crypto.createDecipher","outFile":"crypto.html#crypto.createDecipher"},{"id":"crypto.createDecipheriv","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"key","types":["String"],"description":"A raw key used in the algorithm\n\n"},{"name":"iv","types":["String"],"description":"The [initialization\n\n*vector](http://en.wikipedia.org/wiki/Initialization_vector)\n\n"}],"returns":[{"type":"crypto.decipher"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"key","types":["String"],"description":"A raw key used in the algorithm\n\n"},{"name":"iv","types":["String"],"description":"The [initialization\n\n*vector](http://en.wikipedia.org/wiki/Initialization_vector)\n\n"}],"description":"Creates and returns a decipher object, with the given algorithm, key, and iv.","short_description":"Creates and returns a decipher object, with the given algorithm, key, and iv.","line":136,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createDecipheriv","name_prefix":"crypto.","path":"crypto.createDecipheriv","outFile":"crypto.html#crypto.createDecipheriv"},{"id":"crypto.createDiffieHellman","type":"class method","signatures":[{"arguments":[{"name":"prime_length","types":["Number"],"description":"The bit length to calculate with\n\n"}],"returns":[{"type":"crypto.diffieHellman"}]},{"arguments":[{"name":"prime","types":["Number"],"description":"The prime to calculate with\n\n"},{"name":"encoding","default_value":"binary","types":["Number"],"description":"The encoding to use; defaults to `'binary'`\n\n"}],"returns":[{"type":"crypto.diffieHellman"}]}],"arguments":[{"name":"prime_length","types":["Number"],"description":"The bit length to calculate with\n\n"},{"name":"prime","types":["Number"],"description":"The prime to calculate with\n\n"},{"name":"encoding","types":["Number"],"description":"The encoding to use; defaults to `'binary'`\n\n"}],"description":"Creates a Diffie-Hellman key exchange object and generates a prime of the given\nbit length. The generator used is `2`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createDiffieHellman.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Creates a Diffie-Hellman key exchange object and generates a prime of the given\nbit length. The generator used is `2`.\n","line":152,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createDiffieHellman","name_prefix":"crypto.","path":"crypto.createDiffieHellman","outFile":"crypto.html#crypto.createDiffieHellman"},{"id":"crypto.createHash","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The hash algorithm to use\n\n"}],"returns":[{"type":"crypto.hash"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The hash algorithm to use\n\n"}],"description":"Creates and returns a cryptographic hash object with the given algorithm. The\nobject can be used to generate hash digests.\n\n#### Examples\n\nTesting an MD5 Hash:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createHash.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nThis program takes the sha1 sum of a file:\n\n    var filename = \"my_secret_file.txt\";\n    var crypto = require('crypto');\n    var fs = require('fs');\n\n    var shasum = crypto.createHash('sha1');\n\n    var s = fs.ReadStream(filename);\n    s.on('data', function(d) {\n      shasum.update(d);\n    });\n\n    s.on('end', function() {\n      var d = shasum.digest('hex');\n      console.log(d + '  ' + filename);\n    });","short_description":"Creates and returns a cryptographic hash object with the given algorithm. The\nobject can be used to generate hash digests.\n","line":224,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createHash","name_prefix":"crypto.","path":"crypto.createHash","outFile":"crypto.html#crypto.createHash"},{"id":"crypto.createHmac","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"key","types":["String"],"description":"The HMAC key to be used\n\n"}],"returns":[{"type":"crypto.hmac"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"},{"name":"key","types":["String"],"description":"The HMAC key to be used\n\n"}],"description":"Creates and returns a cryptographic HMAC object with the given algorithm and\nkey. For more information on HMAC, see [this\narticle](http://en.wikipedia.org/wiki/HMAC).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createHmac.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Creates and returns a cryptographic HMAC object with the given algorithm and\nkey. For more information on HMAC, see [this\narticle](http://en.wikipedia.org/wiki/HMAC).\n","line":248,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createHmac","name_prefix":"crypto.","path":"crypto.createHmac","outFile":"crypto.html#crypto.createHmac"},{"id":"crypto.createSign","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"}],"returns":[{"type":"crypto.signer"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"}],"description":"Creates and returns a signing object string, with the given `algorithm`.","short_description":"Creates and returns a signing object string, with the given `algorithm`.","line":233,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createSign","name_prefix":"crypto.","path":"crypto.createSign","outFile":"crypto.html#crypto.createSign"},{"id":"crypto.createVerify","type":"class method","signatures":[{"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"}],"returns":[{"type":"crypto.verifier"}]}],"arguments":[{"name":"algorithm","types":["String"],"description":"The algorithm to use\n\n"}],"description":"Creates and returns a verification object, with the given algorithm.\n\nThis is the mirror of the [[crypto.signer `signer`]] object.","short_description":"Creates and returns a verification object, with the given algorithm.\n","line":294,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"createVerify","name_prefix":"crypto.","path":"crypto.createVerify","outFile":"crypto.html#crypto.createVerify"},{"id":"crypto.decipher","type":"class","superclass":"crypto","description":"A class for decrypting data. It's used to decipher previously created\n[[crypto.cipher `cipher`]] objects. It can be created as a returned value from\n[[crypto.createDecipher `crypto.createDeipher()`]] or [[crypto.createDecipheriv `crypto.createDecipheriv()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/cipher.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"A class for decrypting data. It's used to decipher previously created\n[[crypto.cipher `cipher`]] objects. It can be created as a returned value from\n[[crypto.createDecipher `crypto.createDeipher()`]] or [[crypto.createDecipheriv `crypto.createDecipheriv()`]].\n","line":363,"aliases":[],"children":[{"id":"crypto.decipher.final","type":"class method","signatures":[{"arguments":[{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use for the output; can be either\n\n*`'binary'`, `'ascii'`, or `'utf8'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"output_encoding","types":["String"],"description":"The encoding to use for the output; can be either\n\n*`'binary'`, `'ascii'`, or `'utf8'`\n\n"}],"description":"Returns any remaining plaintext which is deciphered.\n\nNote: The `decipher` object can't be used after the `final()` method been called.","short_description":"Returns any remaining plaintext which is deciphered.\n","line":388,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"final","name_prefix":"crypto.decipher.","path":"crypto.decipher.final","outFile":"crypto.html#crypto.decipher.final"},{"id":"crypto.decipher.setAutoPadding","type":"class method","signatures":[{"arguments":[{"name":"auto_padding","default_value":true,"types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}]}],"arguments":[{"name":"auto_padding","types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}],"description":"You can disable auto padding if the data has been encrypted without standard\nblock padding to prevent\n`decipher.final` from checking and removing it. Can only work if the input\ndata's length is a multiple of the\nciphers block size. You must call this before streaming data to\n`decipher.update`.","short_description":"You can disable auto padding if the data has been encrypted without standard\nblock padding to prevent\n`decipher.final` from checking and removing it. Can only work if the input\ndata's length is a multiple of the\nciphers block size. You must call this before streaming data to\n`decipher.update`.","line":401,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setAutoPadding","name_prefix":"crypto.decipher.","path":"crypto.decipher.setAutoPadding","outFile":"crypto.html#crypto.decipher.setAutoPadding"},{"id":"crypto.decipher.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the input is encoded\n\n"},{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the output is encoded\n\n\n\n"}],"returns":[{"type":"crypto.decipher"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","types":["String"],"description":"Defines how the input is encoded\n\n"},{"name":"output_encoding","types":["String"],"description":"Defines how the output is encoded\n\n\n\n"}],"chainable":true,"description":"Updates the decipher with `data`.\n\nThe `input_encoding` can be `'binary'`, `'base64'` or `'hex'`.\nThe `output_encoding` can be `'binary'`, `'ascii'` or `'utf8'`.","short_description":"Updates the decipher with `data`.\n","line":377,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.decipher.","path":"crypto.decipher.update","outFile":"crypto.html#crypto.decipher.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"decipher","name_prefix":"crypto.","path":"crypto.decipher","outFile":"crypto.html"},{"id":"crypto.diffieHellman","type":"class","superclass":"crypto","description":"This is a class for creating Diffie-Hellman key exchanges. It's a representation\nof the [OpenSSL implementation of\ndiffie-Hellman](http://www.openssl.org/docs/crypto/dh.html#). It can be created\nas a returned value from [[crypto.createDiffieHellman\n`crypto.createDiffieHellman()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createDiffieHellman.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"This is a class for creating Diffie-Hellman key exchanges. It's a representation\nof the [OpenSSL implementation of\ndiffie-Hellman](http://www.openssl.org/docs/crypto/dh.html#). It can be created\nas a returned value from [[crypto.createDiffieHellman\n`crypto.createDiffieHellman()`]].\n","line":416,"aliases":[],"children":[{"id":"crypto.diffieHellman.computeSecret","type":"class method","signatures":[{"arguments":[{"name":"other_public_key","types":["String"],"description":"The other party's public key\n\n"},{"name":"input_encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding used to interprate the public key; can\n\n*be `'binary'`, `'base64'`, or `'hex'`. \n\n"},{"name":"output_encoding","default_value":"input_encoding","optional":true,"types":["String"],"description":"The encoding of the returned computation; defaults\n\n*to the `input_encoding`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"other_public_key","types":["String"],"description":"The other party's public key\n\n"},{"name":"input_encoding","types":["String"],"description":"The encoding used to interprate the public key; can\n\n*be `'binary'`, `'base64'`, or `'hex'`. \n\n"},{"name":"output_encoding","types":["String"],"description":"The encoding of the returned computation; defaults\n\n*to the `input_encoding`\n\n"}],"description":"Computes the shared secret and returns the computed shared secret.","short_description":"Computes the shared secret and returns the computed shared secret.","line":428,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"computeSecret","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.computeSecret","outFile":"crypto.html#crypto.diffieHellman.computeSecret"},{"id":"crypto.diffieHellman.generateKeys","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Generates private and public Diffie-Hellman key values, and returns the public\nkey in the specified encoding. This key should be transferred to the other\nparty.","short_description":"Generates private and public Diffie-Hellman key values, and returns the public\nkey in the specified encoding. This key should be transferred to the other\nparty.","line":483,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"generateKeys","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.generateKeys","outFile":"crypto.html#crypto.diffieHellman.generateKeys"},{"id":"crypto.diffieHellman.getGenerator","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman prime in the specified encoding.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/diffieHellman.getGenerator.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns the Diffie-Hellman prime in the specified encoding.\n","line":441,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getGenerator","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getGenerator","outFile":"crypto.html#crypto.diffieHellman.getGenerator"},{"id":"crypto.diffieHellman.getPrime","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman prime in the specified encoding.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/diffieHellman.getPrime.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns the Diffie-Hellman prime in the specified encoding.\n","line":454,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getPrime","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getPrime","outFile":"crypto.html#crypto.diffieHellman.getPrime"},{"id":"crypto.diffieHellman.getPrivateKey","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman private key in the specified encoding.","short_description":"Returns the Diffie-Hellman private key in the specified encoding.","line":463,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getPrivateKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getPrivateKey","outFile":"crypto.html#crypto.diffieHellman.getPrivateKey"},{"id":"crypto.diffieHellman.getPublicKey","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman public key in the specified encoding.","short_description":"Returns the Diffie-Hellman public key in the specified encoding.","line":472,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getPublicKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getPublicKey","outFile":"crypto.html#crypto.diffieHellman.getPublicKey"},{"id":"crypto.diffieHellman.setPrivateKey","type":"class method","signatures":[{"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}]}],"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Sets the Diffie-Hellman private key.","short_description":"Sets the Diffie-Hellman private key.","line":493,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setPrivateKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.setPrivateKey","outFile":"crypto.html#crypto.diffieHellman.setPrivateKey"},{"id":"crypto.diffieHellman.setPublicKey","type":"class method","signatures":[{"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}]}],"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Sets the Diffie-Hellman public key.","short_description":"Sets the Diffie-Hellman public key.","line":503,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setPublicKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.setPublicKey","outFile":"crypto.html#crypto.diffieHellman.setPublicKey"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"diffieHellman","name_prefix":"crypto.","path":"crypto.diffieHellman","outFile":"crypto.html"},{"id":"crypto.getDiffieHellman","type":"class method","signatures":[{"arguments":[{"name":"group_name","types":["String"],"description":"One of the following group names:  \n\n  * `'modp1'`, as defined in [RFC 2412](http://www.rfc-editor.org/rfc/rfc2412.txt)\n\n  * `'modp2'`, as defined in [RFC 2412](http://www.rfc-editor.org/rfc/rfc2412.txt)\n\n  * `'modp5'`, as defined in [RFC 2412](http://www.rfc-editor.org/rfc/rfc2412.txt)\n\n  * `'modp14'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp15'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp16'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp17'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp18'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n"}],"returns":[{"type":"crypto.diffieHellman"}]}],"arguments":[{"name":"group_name","types":["String"],"description":"One of the following group names:  \n\n  * `'modp1'`, as defined in [RFC 2412](http://www.rfc-editor.org/rfc/rfc2412.txt)\n\n  * `'modp2'`, as defined in [RFC 2412](http://www.rfc-editor.org/rfc/rfc2412.txt)\n\n  * `'modp5'`, as defined in [RFC 2412](http://www.rfc-editor.org/rfc/rfc2412.txt)\n\n  * `'modp14'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp15'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp16'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp17'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n  * `'modp18'`, as defined in [RFC 3526](http://www.rfc-editor.org/rfc/rfc3526.txt)\n\n"}],"description":"Creates a predefined Diffie-Hellman key exchange object.\n\nThe returned object mimics the interface of objects created by\n[[crypto.createDiffieHellman `createDiffieHellman()`]], but will not allow you\nto change the keys (for example, with [[crypto.diffieHellman.setPublicKey `diffieHellman.setPublicKey()`]]).\n\nThe advantage of using this routine is that the parties don't have to generate\nnor exchange group modulus beforehand, saving both processor and communication\ntime.\n\n#### Example: Obtaining a shared secret:\n\n    var crypto = require('crypto');\n    var alice = crypto.getDiffieHellman('modp5');\n    var bob = crypto.getDiffieHellman('modp5');\n\n    alice.generateKeys();\n    bob.generateKeys();\n\n    var alice_secret = alice.computeSecret(bob.getPublicKey(), 'binary', 'hex');\n    var bob_secret = bob.computeSecret(alice.getPublicKey(), 'binary', 'hex');\n\n    /* alice_secret and bob_secret should be the same */\n    console.log(alice_secret == bob_secret);","short_description":"Creates a predefined Diffie-Hellman key exchange object.\n","line":191,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getDiffieHellman","name_prefix":"crypto.","path":"crypto.getDiffieHellman","outFile":"crypto.html#crypto.getDiffieHellman"},{"id":"crypto.hash","type":"class","superclass":"crypto","description":"The class for creating hash digests of data. It's class a representation of the\n[OpenSSL implementation of hash algorithms](http://www.openssl.org/docs/crypto/crypto.html#item_AUTHENTICATION).\nIt can be created as a returned value from [[crypto.createHash `crypto.createHash()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createHash.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"The class for creating hash digests of data. It's class a representation of the\n[OpenSSL implementation of hash algorithms](http://www.openssl.org/docs/crypto/crypto.html#item_AUTHENTICATION).\nIt can be created as a returned value from [[crypto.createHash `crypto.createHash()`]].\n","line":516,"aliases":[],"children":[{"id":"crypto.hash.digest","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Calculates the digest of all of the passed data to be hashed.\n\nNote: The `hash` object can't be used after the `digest()` method been called.","short_description":"Calculates the digest of all of the passed data to be hashed.\n","line":527,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"digest","name_prefix":"crypto.hash.","path":"crypto.hash.digest","outFile":"crypto.html#crypto.hash.digest"},{"id":"crypto.hash.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","optional":true,"types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n\n\n"}],"chainable":true,"description":"Updates the hash content with the given `data`. This can be called many times\nwith new data as it is streamed.","short_description":"Updates the hash content with the given `data`. This can be called many times\nwith new data as it is streamed.","line":539,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.hash.","path":"crypto.hash.update","outFile":"crypto.html#crypto.hash.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"hash","name_prefix":"crypto.","path":"crypto.hash","outFile":"crypto.html"},{"id":"crypto.hmac","type":"class","superclass":"crypto","description":"A class for creating cryptographic hmac content. It's a representation of the\n[OpenSSL implementation of hmac](http://www.openssl.org/docs/crypto/hmac.html#)\nalgorithms. It can be created as a returned value from [[crypto.createHmac\n`crypto.createHmac()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createHmac.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"A class for creating cryptographic hmac content. It's a representation of the\n[OpenSSL implementation of hmac](http://www.openssl.org/docs/crypto/hmac.html#)\nalgorithms. It can be created as a returned value from [[crypto.createHmac\n`crypto.createHmac()`]].\n","line":553,"aliases":[],"children":[{"id":"crypto.hmac.digest","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use; can be `'hex'`, `'binary'` or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; can be `'hex'`, `'binary'` or\n\n*`'base64'`\n\n"}],"description":"Calculates the digest of all of the passed data to the hmac.\n\nNote: The `hmac` object can't be used after the `digest()` method been called.","short_description":"Calculates the digest of all of the passed data to the hmac.\n","line":564,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"digest","name_prefix":"crypto.hmac.","path":"crypto.hmac.digest","outFile":"crypto.html#crypto.hmac.digest"},{"id":"crypto.hmac.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"returns":[{"type":"crypto.hmac"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"chainable":true,"description":"Update the HMAC content with the given `data`. This can be called many times\nwith new data as it is streamed.","short_description":"Update the HMAC content with the given `data`. This can be called many times\nwith new data as it is streamed.","line":574,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.hmac.","path":"crypto.hmac.update","outFile":"crypto.html#crypto.hmac.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"hmac","name_prefix":"crypto.","path":"crypto.hmac","outFile":"crypto.html"},{"id":"crypto.pbkdf2","type":"class method","signatures":[{"arguments":[{"name":"password","types":["String"],"description":"The password to use\n\n"},{"name":"salt","types":["String"],"description":"The salt to use\n\n"},{"name":"iterations","types":["String"],"description":"The number of iterations to use\n\n"},{"name":"keylen","types":["String"],"description":"The final key length\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The error object\n\n","types":["Error"]},{"name":"derivedKey","description":"The resulting key\n\n","types":["String"]}],"callback":true,"types":["Function"],"description":"The callback to execute when finished\n\n"}]}],"arguments":[{"name":"password","types":["String"],"description":"The password to use\n\n"},{"name":"salt","types":["String"],"description":"The salt to use\n\n"},{"name":"iterations","types":["String"],"description":"The number of iterations to use\n\n"},{"name":"keylen","types":["String"],"description":"The final key length\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute when finished\n\n"},{"name":"err","types":["Error"],"description":"The error object\n\n"},{"name":"derivedKey","types":["String"],"description":"The resulting key\n\n"}],"description":"An asynchronous PBKDF2 function that applies pseudorandom function HMAC-SHA1 to\nderive a key of the given length from the given password, salt, and number of\niterations.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.pbkdf2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"An asynchronous PBKDF2 function that applies pseudorandom function HMAC-SHA1 to\nderive a key of the given length from the given password, salt, and number of\niterations.\n","line":268,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"pbkdf2","name_prefix":"crypto.","path":"crypto.pbkdf2","outFile":"crypto.html#crypto.pbkdf2"},{"id":"crypto.randomBytes","type":"class method","signatures":[{"arguments":[{"name":"size","types":["Number"],"description":"The size of the cryptographic data\n\n"},{"name":"callback","arguments":[{"name":"ex","description":"The error object\n\n","types":["Error"]},{"name":"buf","description":"The resulting crypto data\n\n","types":["String"]}],"callback":true,"optional":true,"types":["Function"],"description":"The callback to execute when finished\n\n"}],"returns":[{"type":"String"},{"type":"Void"}]}],"arguments":[{"name":"size","types":["Number"],"description":"The size of the cryptographic data\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute when finished\n\n"},{"name":"ex","types":["Error"],"description":"The error object\n\n"},{"name":"buf","types":["String"],"description":"The resulting crypto data\n\n"}],"description":"Generates cryptographically strong pseudo-random data, either asynchronously or\nsynchronously.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.randomBytes.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Generates cryptographically strong pseudo-random data, either asynchronously or\nsynchronously.\n","line":284,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"randomBytes","name_prefix":"crypto.","path":"crypto.randomBytes","outFile":"crypto.html#crypto.randomBytes"},{"id":"crypto.signer","type":"class","superclass":"crypto","description":"This class is used to generate certificates for OpenSSL. It can be created as a\nreturned value from [[crypto.createSign `crypto.createSign()`]].\n\n#### Example\n\n\n  var s1 = crypto.createSign('RSA-SHA1')\n             .update('Test123')\n             .sign(keyPem, 'base64');\n  var verified = crypto.createVerify('RSA-SHA1')\n                   .update('Test')\n                   .update('123')\n                   .verify(certPem, s1, 'base64');\n  assert.strictEqual(verified, true, 'sign and verify (base 64)');","short_description":"This class is used to generate certificates for OpenSSL. It can be created as a\nreturned value from [[crypto.createSign `crypto.createSign()`]].\n","line":594,"aliases":[],"children":[{"id":"crypto.signer.sign","type":"class method","signatures":[{"arguments":[{"name":"private_key","types":["String"],"description":"A string containing the PEM encoded private key for\n\n*signing\n\n"},{"name":"output_format","default_value":"binary","optional":true,"types":["String"],"description":"The output encoding format; can be `'binary'`, `'hex'`\n\n*or `'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"private_key","types":["String"],"description":"A string containing the PEM encoded private key for\n\n*signing\n\n"},{"name":"output_format","types":["String"],"description":"The output encoding format; can be `'binary'`, `'hex'`\n\n*or `'base64'`\n\n"}],"description":"Calculates the signature on all the updated data passed through the signer.\n\nNote: The `signer` object can not be used after the `sign()` method has been called.\n\n#### Returns\n\n The signature in a format defined by `output_format`.","short_description":"Calculates the signature on all the updated data passed through the signer.\n","line":611,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"sign","name_prefix":"crypto.signer.","path":"crypto.signer.sign","outFile":"crypto.html#crypto.signer.sign"},{"id":"crypto.signer.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"returns":[{"type":"crypto.signer"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"chainable":true,"description":"Updates the signer object with data. This can be called many times with new data\nas it is streamed.","short_description":"Updates the signer object with data. This can be called many times with new data\nas it is streamed.","line":621,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.signer.","path":"crypto.signer.update","outFile":"crypto.html#crypto.signer.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"signer","name_prefix":"crypto.","path":"crypto.signer","outFile":"crypto.html"},{"id":"crypto.verifier","type":"class","superclass":"crypto","description":"This class is used to verify signed certificates for OpenSSL. It can be created\nas a returned value from [[crypto.createVerify `crypto.createVerify()`]].\n\n#### Example\n\n\n  var s1 = crypto.createSign('RSA-SHA1')\n             .update('Test123')\n             .sign(keyPem, 'base64');\n  var verified = crypto.createVerify('RSA-SHA1')\n                   .update('Test')\n                   .update('123')\n                   .verify(certPem, s1, 'base64');\n  assert.strictEqual(verified, true, 'sign and verify (base 64)');","short_description":"This class is used to verify signed certificates for OpenSSL. It can be created\nas a returned value from [[crypto.createVerify `crypto.createVerify()`]].\n","line":641,"aliases":[],"children":[{"id":"crypto.verifier.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"returns":[{"type":"crypto.verifier"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"chainable":true,"description":"Updates the verifier object with data. This can be called many times with new\ndata as it is streamed.","short_description":"Updates the verifier object with data. This can be called many times with new\ndata as it is streamed.","line":666,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.verifier.","path":"crypto.verifier.update","outFile":"crypto.html#crypto.verifier.update"},{"id":"crypto.verifier.verify","type":"class method","signatures":[{"arguments":[{"name":"object","types":["String"],"description":"A string containing a PEM encoded object, which can be one of\n\n*the following: an RSA public key, a DSA public key or an X.509 certificate\n\n"},{"name":"signature","types":["String"],"description":"The previously calculated signature for the data\n\n"},{"name":"signature_format","default_value":"binary","optional":true,"types":["String"],"description":"The format of the signature; can be `'binary'`,\n\n*`'hex'`, or `'base64'`\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"object","types":["String"],"description":"A string containing a PEM encoded object, which can be one of\n\n*the following: an RSA public key, a DSA public key or an X.509 certificate\n\n"},{"name":"signature","types":["String"],"description":"The previously calculated signature for the data\n\n"},{"name":"signature_format","types":["String"],"description":"The format of the signature; can be `'binary'`,\n\n*`'hex'`, or `'base64'`\n\n"}],"description":"Returns `true` or `false` depending on the validity of the signature for the\ndata and public key.\n\nNote: The `verifier` object can't be used after the `verify()` method has been called.","short_description":"Returns `true` or `false` depending on the validity of the signature for the\ndata and public key.\n","line":656,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"verify","name_prefix":"crypto.verifier.","path":"crypto.verifier.verify","outFile":"crypto.html#crypto.verifier.verify"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"verifier","name_prefix":"crypto.","path":"crypto.verifier","outFile":"crypto.html"},{"id":"crypto.cipher","type":"class","superclass":"crypto","description":"A class for encrypting data. It's a representation of the [OpenSSL\nimplementation of cipher](http://www.openssl.org/docs/apps/ciphers.html). It can\nbe created as a returned value from [[crypto.createCipher\n`crypto.createCipher()`]] or [[crypto.createCipheriv\n`crypto.createCipheriv()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/cipher.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"A class for encrypting data. It's a representation of the [OpenSSL\nimplementation of cipher](http://www.openssl.org/docs/apps/ciphers.html). It can\nbe created as a returned value from [[crypto.createCipher\n`crypto.createCipher()`]] or [[crypto.createCipheriv\n`crypto.createCipheriv()`]].\n","line":309,"aliases":[],"children":[{"id":"crypto.cipher.final","type":"class method","signatures":[{"arguments":[{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use for the output; defaults to\n\n*binary\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"output_encoding","types":["String"],"description":"The encoding to use for the output; defaults to\n\n*binary\n\n"}],"description":"Returns any remaining enciphered contents. `output_encoding` can be `'binary'`,\n`'base64'`, or `'hex'`.\n\nNote: The `cipher` object can't be used after the `final()` method has been called.","short_description":"Returns any remaining enciphered contents. `output_encoding` can be `'binary'`,\n`'base64'`, or `'hex'`.\n","line":321,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"final","name_prefix":"crypto.cipher.","path":"crypto.cipher.final","outFile":"crypto.html#crypto.cipher.final"},{"id":"crypto.cipher.setAutoPadding","type":"class method","signatures":[{"arguments":[{"name":"auto_padding","default_value":true,"types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}]}],"arguments":[{"name":"auto_padding","types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}],"description":"You can disable automatic padding of the input data to block size.\n\nIf `auto_padding` is false, the length of the entire input data must be a\nmultiple of the cipher's block size or `final` will fail.\n\nThis is useful for non-standard padding, _e.g._ using `0x0` instead of PKCS\npadding. You must call this before `cipher.final`.","short_description":"You can disable automatic padding of the input data to block size.\n","line":350,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setAutoPadding","name_prefix":"crypto.cipher.","path":"crypto.cipher.setAutoPadding","outFile":"crypto.html#crypto.cipher.setAutoPadding"},{"id":"crypto.cipher.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the input is encoded; can be `'utf8'`,\n\n*`'ascii'` or `'binary'`\n\n"},{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the output is encoded; can be\n\n*`'binary'`, `'base64'` or `'hex'`\n\n\n\n"}],"returns":[{"type":"crypto.cipher"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","types":["String"],"description":"Defines how the input is encoded; can be `'utf8'`,\n\n*`'ascii'` or `'binary'`\n\n"},{"name":"output_encoding","types":["String"],"description":"Defines how the output is encoded; can be\n\n*`'binary'`, `'base64'` or `'hex'`\n\n\n\n"}],"chainable":true,"description":"Updates the cipher with `data`. This returns the enciphered contents, and can be\ncalled many times with new data as it is streamed.","short_description":"Updates the cipher with `data`. This returns the enciphered contents, and can be\ncalled many times with new data as it is streamed.","line":336,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.cipher.","path":"crypto.cipher.update","outFile":"crypto.html#crypto.cipher.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"cipher","name_prefix":"crypto.","path":"crypto.cipher","outFile":"crypto.html"},{"id":"crypto.decipher","type":"class","superclass":"crypto","description":"A class for decrypting data. It's used to decipher previously created\n[[crypto.cipher `cipher`]] objects. It can be created as a returned value from\n[[crypto.createDecipher `crypto.createDeipher()`]] or [[crypto.createDecipheriv `crypto.createDecipheriv()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/cipher.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"A class for decrypting data. It's used to decipher previously created\n[[crypto.cipher `cipher`]] objects. It can be created as a returned value from\n[[crypto.createDecipher `crypto.createDeipher()`]] or [[crypto.createDecipheriv `crypto.createDecipheriv()`]].\n","line":363,"aliases":[],"children":[{"id":"crypto.decipher.final","type":"class method","signatures":[{"arguments":[{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use for the output; can be either\n\n*`'binary'`, `'ascii'`, or `'utf8'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"output_encoding","types":["String"],"description":"The encoding to use for the output; can be either\n\n*`'binary'`, `'ascii'`, or `'utf8'`\n\n"}],"description":"Returns any remaining plaintext which is deciphered.\n\nNote: The `decipher` object can't be used after the `final()` method been called.","short_description":"Returns any remaining plaintext which is deciphered.\n","line":388,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"final","name_prefix":"crypto.decipher.","path":"crypto.decipher.final","outFile":"crypto.html#crypto.decipher.final"},{"id":"crypto.decipher.setAutoPadding","type":"class method","signatures":[{"arguments":[{"name":"auto_padding","default_value":true,"types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}]}],"arguments":[{"name":"auto_padding","types":["Boolean"],"description":"Specifies wheter automatic padding is on, or not\n\n"}],"description":"You can disable auto padding if the data has been encrypted without standard\nblock padding to prevent\n`decipher.final` from checking and removing it. Can only work if the input\ndata's length is a multiple of the\nciphers block size. You must call this before streaming data to\n`decipher.update`.","short_description":"You can disable auto padding if the data has been encrypted without standard\nblock padding to prevent\n`decipher.final` from checking and removing it. Can only work if the input\ndata's length is a multiple of the\nciphers block size. You must call this before streaming data to\n`decipher.update`.","line":401,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setAutoPadding","name_prefix":"crypto.decipher.","path":"crypto.decipher.setAutoPadding","outFile":"crypto.html#crypto.decipher.setAutoPadding"},{"id":"crypto.decipher.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the input is encoded\n\n"},{"name":"output_encoding","default_value":"binary","optional":true,"types":["String"],"description":"Defines how the output is encoded\n\n\n\n"}],"returns":[{"type":"crypto.decipher"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","types":["String"],"description":"Defines how the input is encoded\n\n"},{"name":"output_encoding","types":["String"],"description":"Defines how the output is encoded\n\n\n\n"}],"chainable":true,"description":"Updates the decipher with `data`.\n\nThe `input_encoding` can be `'binary'`, `'base64'` or `'hex'`.\nThe `output_encoding` can be `'binary'`, `'ascii'` or `'utf8'`.","short_description":"Updates the decipher with `data`.\n","line":377,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.decipher.","path":"crypto.decipher.update","outFile":"crypto.html#crypto.decipher.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"decipher","name_prefix":"crypto.","path":"crypto.decipher","outFile":"crypto.html"},{"id":"crypto.diffieHellman","type":"class","superclass":"crypto","description":"This is a class for creating Diffie-Hellman key exchanges. It's a representation\nof the [OpenSSL implementation of\ndiffie-Hellman](http://www.openssl.org/docs/crypto/dh.html#). It can be created\nas a returned value from [[crypto.createDiffieHellman\n`crypto.createDiffieHellman()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createDiffieHellman.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"This is a class for creating Diffie-Hellman key exchanges. It's a representation\nof the [OpenSSL implementation of\ndiffie-Hellman](http://www.openssl.org/docs/crypto/dh.html#). It can be created\nas a returned value from [[crypto.createDiffieHellman\n`crypto.createDiffieHellman()`]].\n","line":416,"aliases":[],"children":[{"id":"crypto.diffieHellman.computeSecret","type":"class method","signatures":[{"arguments":[{"name":"other_public_key","types":["String"],"description":"The other party's public key\n\n"},{"name":"input_encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding used to interprate the public key; can\n\n*be `'binary'`, `'base64'`, or `'hex'`. \n\n"},{"name":"output_encoding","default_value":"input_encoding","optional":true,"types":["String"],"description":"The encoding of the returned computation; defaults\n\n*to the `input_encoding`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"other_public_key","types":["String"],"description":"The other party's public key\n\n"},{"name":"input_encoding","types":["String"],"description":"The encoding used to interprate the public key; can\n\n*be `'binary'`, `'base64'`, or `'hex'`. \n\n"},{"name":"output_encoding","types":["String"],"description":"The encoding of the returned computation; defaults\n\n*to the `input_encoding`\n\n"}],"description":"Computes the shared secret and returns the computed shared secret.","short_description":"Computes the shared secret and returns the computed shared secret.","line":428,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"computeSecret","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.computeSecret","outFile":"crypto.html#crypto.diffieHellman.computeSecret"},{"id":"crypto.diffieHellman.generateKeys","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Generates private and public Diffie-Hellman key values, and returns the public\nkey in the specified encoding. This key should be transferred to the other\nparty.","short_description":"Generates private and public Diffie-Hellman key values, and returns the public\nkey in the specified encoding. This key should be transferred to the other\nparty.","line":483,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"generateKeys","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.generateKeys","outFile":"crypto.html#crypto.diffieHellman.generateKeys"},{"id":"crypto.diffieHellman.getGenerator","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman prime in the specified encoding.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/diffieHellman.getGenerator.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns the Diffie-Hellman prime in the specified encoding.\n","line":441,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getGenerator","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getGenerator","outFile":"crypto.html#crypto.diffieHellman.getGenerator"},{"id":"crypto.diffieHellman.getPrime","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman prime in the specified encoding.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/diffieHellman.getPrime.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns the Diffie-Hellman prime in the specified encoding.\n","line":454,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getPrime","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getPrime","outFile":"crypto.html#crypto.diffieHellman.getPrime"},{"id":"crypto.diffieHellman.getPrivateKey","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman private key in the specified encoding.","short_description":"Returns the Diffie-Hellman private key in the specified encoding.","line":463,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getPrivateKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getPrivateKey","outFile":"crypto.html#crypto.diffieHellman.getPrivateKey"},{"id":"crypto.diffieHellman.getPublicKey","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Returns the Diffie-Hellman public key in the specified encoding.","short_description":"Returns the Diffie-Hellman public key in the specified encoding.","line":472,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"getPublicKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.getPublicKey","outFile":"crypto.html#crypto.diffieHellman.getPublicKey"},{"id":"crypto.diffieHellman.setPrivateKey","type":"class method","signatures":[{"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}]}],"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Sets the Diffie-Hellman private key.","short_description":"Sets the Diffie-Hellman private key.","line":493,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setPrivateKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.setPrivateKey","outFile":"crypto.html#crypto.diffieHellman.setPrivateKey"},{"id":"crypto.diffieHellman.setPublicKey","type":"class method","signatures":[{"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}]}],"arguments":[{"name":"public_key","types":["String"],"description":"The public key that's shared\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use;  can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Sets the Diffie-Hellman public key.","short_description":"Sets the Diffie-Hellman public key.","line":503,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"setPublicKey","name_prefix":"crypto.diffieHellman.","path":"crypto.diffieHellman.setPublicKey","outFile":"crypto.html#crypto.diffieHellman.setPublicKey"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"diffieHellman","name_prefix":"crypto.","path":"crypto.diffieHellman","outFile":"crypto.html"},{"id":"crypto.hash","type":"class","superclass":"crypto","description":"The class for creating hash digests of data. It's class a representation of the\n[OpenSSL implementation of hash algorithms](http://www.openssl.org/docs/crypto/crypto.html#item_AUTHENTICATION).\nIt can be created as a returned value from [[crypto.createHash `crypto.createHash()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createHash.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"The class for creating hash digests of data. It's class a representation of the\n[OpenSSL implementation of hash algorithms](http://www.openssl.org/docs/crypto/crypto.html#item_AUTHENTICATION).\nIt can be created as a returned value from [[crypto.createHash `crypto.createHash()`]].\n","line":516,"aliases":[],"children":[{"id":"crypto.hash.digest","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n"}],"description":"Calculates the digest of all of the passed data to be hashed.\n\nNote: The `hash` object can't be used after the `digest()` method been called.","short_description":"Calculates the digest of all of the passed data to be hashed.\n","line":527,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"digest","name_prefix":"crypto.hash.","path":"crypto.hash.digest","outFile":"crypto.html#crypto.hash.digest"},{"id":"crypto.hash.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","optional":true,"types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n"},{"name":"input_encoding","types":["String"],"description":"The encoding to use; can be `'binary'`, `'hex'`, or\n\n*`'base64'`\n\n\n\n"}],"chainable":true,"description":"Updates the hash content with the given `data`. This can be called many times\nwith new data as it is streamed.","short_description":"Updates the hash content with the given `data`. This can be called many times\nwith new data as it is streamed.","line":539,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.hash.","path":"crypto.hash.update","outFile":"crypto.html#crypto.hash.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"hash","name_prefix":"crypto.","path":"crypto.hash","outFile":"crypto.html"},{"id":"crypto.hmac","type":"class","superclass":"crypto","description":"A class for creating cryptographic hmac content. It's a representation of the\n[OpenSSL implementation of hmac](http://www.openssl.org/docs/crypto/hmac.html#)\nalgorithms. It can be created as a returned value from [[crypto.createHmac\n`crypto.createHmac()`]].\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/crypto/crypto.createHmac.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"A class for creating cryptographic hmac content. It's a representation of the\n[OpenSSL implementation of hmac](http://www.openssl.org/docs/crypto/hmac.html#)\nalgorithms. It can be created as a returned value from [[crypto.createHmac\n`crypto.createHmac()`]].\n","line":553,"aliases":[],"children":[{"id":"crypto.hmac.digest","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"binary","optional":true,"types":["String"],"description":"The encoding to use; can be `'hex'`, `'binary'` or\n\n*`'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; can be `'hex'`, `'binary'` or\n\n*`'base64'`\n\n"}],"description":"Calculates the digest of all of the passed data to the hmac.\n\nNote: The `hmac` object can't be used after the `digest()` method been called.","short_description":"Calculates the digest of all of the passed data to the hmac.\n","line":564,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"digest","name_prefix":"crypto.hmac.","path":"crypto.hmac.digest","outFile":"crypto.html#crypto.hmac.digest"},{"id":"crypto.hmac.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"returns":[{"type":"crypto.hmac"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"chainable":true,"description":"Update the HMAC content with the given `data`. This can be called many times\nwith new data as it is streamed.","short_description":"Update the HMAC content with the given `data`. This can be called many times\nwith new data as it is streamed.","line":574,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.hmac.","path":"crypto.hmac.update","outFile":"crypto.html#crypto.hmac.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"hmac","name_prefix":"crypto.","path":"crypto.hmac","outFile":"crypto.html"},{"id":"crypto.signer","type":"class","superclass":"crypto","description":"This class is used to generate certificates for OpenSSL. It can be created as a\nreturned value from [[crypto.createSign `crypto.createSign()`]].\n\n#### Example\n\n\n  var s1 = crypto.createSign('RSA-SHA1')\n             .update('Test123')\n             .sign(keyPem, 'base64');\n  var verified = crypto.createVerify('RSA-SHA1')\n                   .update('Test')\n                   .update('123')\n                   .verify(certPem, s1, 'base64');\n  assert.strictEqual(verified, true, 'sign and verify (base 64)');","short_description":"This class is used to generate certificates for OpenSSL. It can be created as a\nreturned value from [[crypto.createSign `crypto.createSign()`]].\n","line":594,"aliases":[],"children":[{"id":"crypto.signer.sign","type":"class method","signatures":[{"arguments":[{"name":"private_key","types":["String"],"description":"A string containing the PEM encoded private key for\n\n*signing\n\n"},{"name":"output_format","default_value":"binary","optional":true,"types":["String"],"description":"The output encoding format; can be `'binary'`, `'hex'`\n\n*or `'base64'`\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"private_key","types":["String"],"description":"A string containing the PEM encoded private key for\n\n*signing\n\n"},{"name":"output_format","types":["String"],"description":"The output encoding format; can be `'binary'`, `'hex'`\n\n*or `'base64'`\n\n"}],"description":"Calculates the signature on all the updated data passed through the signer.\n\nNote: The `signer` object can not be used after the `sign()` method has been called.\n\n#### Returns\n\n The signature in a format defined by `output_format`.","short_description":"Calculates the signature on all the updated data passed through the signer.\n","line":611,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"sign","name_prefix":"crypto.signer.","path":"crypto.signer.sign","outFile":"crypto.html#crypto.signer.sign"},{"id":"crypto.signer.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"returns":[{"type":"crypto.signer"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"chainable":true,"description":"Updates the signer object with data. This can be called many times with new data\nas it is streamed.","short_description":"Updates the signer object with data. This can be called many times with new data\nas it is streamed.","line":621,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.signer.","path":"crypto.signer.update","outFile":"crypto.html#crypto.signer.update"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"signer","name_prefix":"crypto.","path":"crypto.signer","outFile":"crypto.html"},{"id":"crypto.verifier","type":"class","superclass":"crypto","description":"This class is used to verify signed certificates for OpenSSL. It can be created\nas a returned value from [[crypto.createVerify `crypto.createVerify()`]].\n\n#### Example\n\n\n  var s1 = crypto.createSign('RSA-SHA1')\n             .update('Test123')\n             .sign(keyPem, 'base64');\n  var verified = crypto.createVerify('RSA-SHA1')\n                   .update('Test')\n                   .update('123')\n                   .verify(certPem, s1, 'base64');\n  assert.strictEqual(verified, true, 'sign and verify (base 64)');","short_description":"This class is used to verify signed certificates for OpenSSL. It can be created\nas a returned value from [[crypto.createVerify `crypto.createVerify()`]].\n","line":641,"aliases":[],"children":[{"id":"crypto.verifier.update","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"returns":[{"type":"crypto.verifier"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to use for an update\n\n\n\n"}],"chainable":true,"description":"Updates the verifier object with data. This can be called many times with new\ndata as it is streamed.","short_description":"Updates the verifier object with data. This can be called many times with new\ndata as it is streamed.","line":666,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"update","name_prefix":"crypto.verifier.","path":"crypto.verifier.update","outFile":"crypto.html#crypto.verifier.update"},{"id":"crypto.verifier.verify","type":"class method","signatures":[{"arguments":[{"name":"object","types":["String"],"description":"A string containing a PEM encoded object, which can be one of\n\n*the following: an RSA public key, a DSA public key or an X.509 certificate\n\n"},{"name":"signature","types":["String"],"description":"The previously calculated signature for the data\n\n"},{"name":"signature_format","default_value":"binary","optional":true,"types":["String"],"description":"The format of the signature; can be `'binary'`,\n\n*`'hex'`, or `'base64'`\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"object","types":["String"],"description":"A string containing a PEM encoded object, which can be one of\n\n*the following: an RSA public key, a DSA public key or an X.509 certificate\n\n"},{"name":"signature","types":["String"],"description":"The previously calculated signature for the data\n\n"},{"name":"signature_format","types":["String"],"description":"The format of the signature; can be `'binary'`,\n\n*`'hex'`, or `'base64'`\n\n"}],"description":"Returns `true` or `false` depending on the validity of the signature for the\ndata and public key.\n\nNote: The `verifier` object can't be used after the `verify()` method has been called.","short_description":"Returns `true` or `false` depending on the validity of the signature for the\ndata and public key.\n","line":656,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","name":"verify","name_prefix":"crypto.verifier.","path":"crypto.verifier.verify","outFile":"crypto.html#crypto.verifier.verify"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":[],"name":"verifier","name_prefix":"crypto.","path":"crypto.verifier","outFile":"crypto.html"}],"file":"0.8.14/nodejs_ref_guide/crypto.markdown","subclasses":["crypto.cipher","crypto.decipher","crypto.diffieHellman","crypto.hash","crypto.hmac","crypto.signer","crypto.verifier"],"name":"crypto","path":"crypto","outFile":"crypto.html"},{"id":"dgram","type":"class","description":"\nA datagram socket is a type of connectionless Internet socket, for the sending\nor receiving point for packet delivery services. Datagram sockets are available\nin Node.js by adding `require('dgram')` to your code.\n\n#### Some Notes About UDP Datagram Size\n\nThe maximum size of an `IPv4/v6` datagram depends on the `MTU` (_Maximum\nTransmission Unit_) and on the `Payload Length` field size.\n\nThe `Payload Length` field is `16 bits` wide, which means that a normal payload\ncan't be larger than 64K octets, including internet header and data: (65,507\nbytes = 65,535 − 8 bytes UDP header − 20 bytes IP header). This is generally\ntrue for loopback interfaces, but such long datagrams are impractical for most\nhosts and networks.\n\nThe `MTU` is the largest size a given link layer technology can support for\ndatagrams. For any link, IPv4 mandates a minimum `MTU` of `68` octets, while the\nrecommended `MTU` for IPv4 is `576` (typically recommended as the `MTU` for\ndial-up type applications), whether they arrive whole or in fragments.\n\nFor `IPv6`, the minimum `MTU` is `1280` octets; however, the mandatory minimum\nfragment reassembly buffer size is `1500` octets. The value of `68` octets is\nvery small, since most current link layer technologies have a minimum `MTU` of\n`1500` (like Ethernet).\n\nNote: It's impossible to know in advance the MTU of each link through which a packet might travel, and that generally sending a datagram greater than the (receiver) `MTU` won't work (the packet gets silently dropped, without informing the source that the data did not reach its intended recipient).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/dgram/dgram.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"3 - Stable","short_description":"\nA datagram socket is a type of connectionless Internet socket, for the sending\nor receiving point for packet delivery services. Datagram sockets are available\nin Node.js by adding `require('dgram')` to your code.\n","line":38,"aliases":[],"children":[{"id":"dgram.addMembership","type":"class method","signatures":[{"arguments":[{"name":"multicastAddress","types":["String"],"description":"The address to add\n\n"},{"name":"multicastInterface","optional":true,"types":["String"],"description":"The interface to use\n\n"}]}],"arguments":[{"name":"multicastAddress","types":["String"],"description":"The address to add\n\n"},{"name":"multicastInterface","types":["String"],"description":"The interface to use\n\n"}],"description":"Tells the kernel to join a multicast group with the `IP_ADD_MEMBERSHIP` socket\noption.\n\nIf `multicastInterface` is not specified, the OS will try to add membership to\nall valid interfaces.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/dgram/dgram.addMembership.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Tells the kernel to join a multicast group with the `IP_ADD_MEMBERSHIP` socket\noption.\n","line":178,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"addMembership","name_prefix":"dgram.","path":"dgram.addMembership","outFile":"dgram.html#dgram.addMembership"},{"id":"dgram.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns an object containing the address information for a socket.  For UDP\nsockets, this object contains the properties `address`, `family` and `port`.","short_description":"Returns an object containing the address information for a socket.  For UDP\nsockets, this object contains the properties `address`, `family` and `port`.","line":113,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"address","name_prefix":"dgram.","path":"dgram.address","outFile":"dgram.html#dgram.address"},{"id":"dgram.bind","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to bind to\n\n"},{"name":"address","optional":true,"types":["String"],"description":"The address to attach to\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to bind to\n\n"},{"name":"address","types":["String"],"description":"The address to attach to\n\n"}],"description":"For UDP sockets, listen for datagrams on a named `port` and optional `address`.\nIf `address` isn't specified, the OS tries to listen on all addresses.\n\n#### Example: A UDP server listening on port 41234:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/dgram/dgram.bind.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"For UDP sockets, listen for datagrams on a named `port` and optional `address`.\nIf `address` isn't specified, the OS tries to listen on all addresses.\n","line":98,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"bind","name_prefix":"dgram.","path":"dgram.bind","outFile":"dgram.html#dgram.bind"},{"id":"dgram.close","type":"class method","signatures":[{"arguments":[]}],"description":"Close the underlying socket and stop listening for data on it.","short_description":"Close the underlying socket and stop listening for data on it.","line":105,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"close","name_prefix":"dgram.","path":"dgram.close","outFile":"dgram.html#dgram.close"},{"id":"dgram.createSocket","type":"class method","signatures":[{"arguments":[{"name":"type","types":["String"],"description":"The type of socket to create; valid types are `udp4` and\n\n*`udp6`\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"A callback that's added as a listener for `message`\n\n*events\n\n"}],"returns":[{"type":"dgram"}]}],"arguments":[{"name":"type","types":["String"],"description":"The type of socket to create; valid types are `udp4` and\n\n*`udp6`\n\n"},{"name":"callback","types":["Function"],"description":"A callback that's added as a listener for `message`\n\n*events\n\n"}],"description":"Creates a datagram socket of the specified types.\n\nIf you want to receive datagrams, call `socket.bind()`. `socket.bind()` binds to\nthe \"all interfaces\" address on a random port (it does the right thing for both\n`udp4` and `udp6` sockets). You can then retrieve the address and port with\n`socket.address().address` and `socket.address().port`.","short_description":"Creates a datagram socket of the specified types.\n","line":54,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"createSocket","name_prefix":"dgram.","path":"dgram.createSocket","outFile":"dgram.html#dgram.createSocket"},{"id":"dgram.dropMembership","type":"class method","signatures":[{"arguments":[{"name":"multicastAddress","types":["String"],"description":"The address to drop\n\n"},{"name":"multicastInterface","optional":true,"types":["String"],"description":"The interface to use\n\n"}]}],"arguments":[{"name":"multicastAddress","types":["String"],"description":"The address to drop\n\n"},{"name":"multicastInterface","types":["String"],"description":"The interface to use\n\n"}],"description":"The opposite of `addMembership`—this tells the kernel to leave a multicast group\nwith `IP_DROP_MEMBERSHIP` socket option. This is automatically called by the\nkernel when the socket is closed or process terminates, so most apps will never\nneed to call this.\n\nIf `multicastInterface` is not specified, the OS will try to drop membership to\nall valid interfaces.","short_description":"The opposite of `addMembership`—this tells the kernel to leave a multicast group\nwith `IP_DROP_MEMBERSHIP` socket option. This is automatically called by the\nkernel when the socket is closed or process terminates, so most apps will never\nneed to call this.\n","line":193,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"dropMembership","name_prefix":"dgram.","path":"dgram.dropMembership","outFile":"dgram.html#dgram.dropMembership"},{"id":"dgram.send","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The data buffer to send\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start at\n\n"},{"name":"length","types":["Number"],"description":"Indicates how much of the buffer to use (its number of\n\n*bytes)\n\n"},{"name":"port","types":["Number"],"description":"The port to send to\n\n"},{"name":"address","types":["String"],"description":"The address to send to\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The standard `Error` object \n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"The callback to execute once the method completes that\n\n*may be used to detect any DNS errors and when `buf` may be reused\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The data buffer to send\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start at\n\n"},{"name":"length","types":["Number"],"description":"Indicates how much of the buffer to use (its number of\n\n*bytes)\n\n"},{"name":"port","types":["Number"],"description":"The port to send to\n\n"},{"name":"address","types":["String"],"description":"The address to send to\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute once the method completes that\n\n*may be used to detect any DNS errors and when `buf` may be reused\n\n"},{"name":"err","types":["Error"],"description":"The standard `Error` object \n\n"}],"description":"Sends some information to a specified `address:port`. For UDP sockets, the\ndestination port and IP address must be specified.\n\nA string may be supplied for the `address` parameter, and it will be resolved\nwith DNS. Note that DNS lookups delay the time that a send takes place, at least\nuntil the next tick.  The only way to know for sure that a send has taken place\nis to use the callback.\n\nIf the socket has not been previously bound with a call to [[dgram.bind\n`dgram.bind()`]], it's assigned a random port number and bound to the \"all\ninterfaces\" address (0.0.0.0 for `udp4` sockets, ::0 for `udp6` sockets).\n\n#### Example: Sending a UDP packet to a random port on `localhost`;\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/dgram/dgram.send.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Sends some information to a specified `address:port`. For UDP sockets, the\ndestination port and IP address must be specified.\n","line":84,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"send","name_prefix":"dgram.","path":"dgram.send","outFile":"dgram.html#dgram.send"},{"id":"dgram.setBroadcast","type":"class method","signatures":[{"arguments":[{"name":"flag","types":["Boolean"],"description":"The value of `SO_BROADCAST`\n\n"}]}],"arguments":[{"name":"flag","types":["Boolean"],"description":"The value of `SO_BROADCAST`\n\n"}],"description":"Sets or clears the `SO_BROADCAST` socket option.  When this option is set to\n`true`, UDP packets may be sent to a local interface's broadcast address.","short_description":"Sets or clears the `SO_BROADCAST` socket option.  When this option is set to\n`true`, UDP packets may be sent to a local interface's broadcast address.","line":122,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"setBroadcast","name_prefix":"dgram.","path":"dgram.setBroadcast","outFile":"dgram.html#dgram.setBroadcast"},{"id":"dgram.setMulticastLoopback","type":"class method","signatures":[{"arguments":[{"name":"flag","types":["Boolean"],"description":"The value of `IP_MULTICAST_LOOP`\n\n"}]}],"arguments":[{"name":"flag","types":["Boolean"],"description":"The value of `IP_MULTICAST_LOOP`\n\n"}],"description":"Sets or clears the `IP_MULTICAST_LOOP` socket option.  When this option is\n`true`, multicast packets will also be received on the local interface.","short_description":"Sets or clears the `IP_MULTICAST_LOOP` socket option.  When this option is\n`true`, multicast packets will also be received on the local interface.","line":161,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"setMulticastLoopback","name_prefix":"dgram.","path":"dgram.setMulticastLoopback","outFile":"dgram.html#dgram.setMulticastLoopback"},{"id":"dgram.setMulticastTTL","type":"class method","signatures":[{"arguments":[{"name":"ttl","types":["Number"],"description":"The value of `IP_MULTICAST_TTL` \n\n"}]}],"arguments":[{"name":"ttl","types":["Number"],"description":"The value of `IP_MULTICAST_TTL` \n\n"}],"description":"Sets the `IP_MULTICAST_TTL` socket option.  TTL stands for \"Time to Live,\" but\nin this context it specifies the number of IP hops that a packet is allowed to\ngo through, specifically for multicast traffic.  Each router or gateway that\nforwards a packet decrements the TTL. If the TTL is decremented to 0 by a\nrouter, it will not be forwarded.\n\nThe argument to `setMulticastTTL()` is a number of hops between 0 and 255.  The\ndefault on most systems is 64.","short_description":"Sets the `IP_MULTICAST_TTL` socket option.  TTL stands for \"Time to Live,\" but\nin this context it specifies the number of IP hops that a packet is allowed to\ngo through, specifically for multicast traffic.  Each router or gateway that\nforwards a packet decrements the TTL. If the TTL is decremented to 0 by a\nrouter, it will not be forwarded.\n","line":152,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"setMulticastTTL","name_prefix":"dgram.","path":"dgram.setMulticastTTL","outFile":"dgram.html#dgram.setMulticastTTL"},{"id":"dgram.setTTL","type":"class method","signatures":[{"arguments":[{"name":"ttl","types":["Number"],"description":"The value of `IP_TTL`\n\n"}]}],"arguments":[{"name":"ttl","types":["Number"],"description":"The value of `IP_TTL`\n\n"}],"description":"Sets the `IP_TTL` socket option. TTL stands for \"Time to Live,\" but in this\ncontext it specifies the number of IP hops that a packet is allowed to go\nthrough. Each router or gateway that forwards a packet decrements the TTL.  If\nthe TTL is decremented to 0 by a router, it will not be forwarded.  Changing TTL\nvalues is typically done for network probes or when multicasting.\n\nThe argument to `setTTL()` is a number of hops between 1 and 255.  The default\non most systems is 1.","short_description":"Sets the `IP_TTL` socket option. TTL stands for \"Time to Live,\" but in this\ncontext it specifies the number of IP hops that a packet is allowed to go\nthrough. Each router or gateway that forwards a packet decrements the TTL.  If\nthe TTL is decremented to 0 by a router, it will not be forwarded.  Changing TTL\nvalues is typically done for network probes or when multicasting.\n","line":137,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"setTTL","name_prefix":"dgram.","path":"dgram.setTTL","outFile":"dgram.html#dgram.setTTL"},{"id":"socket","type":"class","superclass":"dgram","description":"The dgram Socket class encapsulates the datagram functionality.  It should be\ncreated via `dgram.createSocket(type, [callback])`.","short_description":"The dgram Socket class encapsulates the datagram functionality.  It should be\ncreated via `dgram.createSocket(type, [callback])`.","line":201,"aliases":[],"children":[{"id":"socket@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when a socket is closed with [[dgram.close `dgram.close()`]].  No new\n`message` events are emitted on this socket.","short_description":"Emitted when a socket is closed with [[dgram.close `dgram.close()`]].  No new\n`message` events are emitted on this socket.","line":227,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"close","name_prefix":"socket@","path":"socket.event.close","outFile":"dgram.html#socket.event.close"},{"id":"socket@error","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The error that was encountered\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The error that was encountered\n\n"}],"description":"Emitted when an error occurs.","short_description":"Emitted when an error occurs.","line":235,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"error","name_prefix":"socket@","path":"socket.event.error","outFile":"dgram.html#socket.event.error"},{"id":"socket@listening","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when a socket starts listening for datagrams. This happens as soon as\nUDP sockets are created.","short_description":"Emitted when a socket starts listening for datagrams. This happens as soon as\nUDP sockets are created.","line":219,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"listening","name_prefix":"socket@","path":"socket.event.listening","outFile":"dgram.html#socket.event.listening"},{"id":"socket@message","type":"event","signatures":[{"arguments":[{"name":"msg","types":["Buffer"],"description":"A `Buffer` of information\n\n"},{"name":"rinfo","types":["Object"],"description":"An object with the sender's address information and the number\n\n*of bytes in the datagram. \n\n"}]}],"arguments":[{"name":"msg","types":["Buffer"],"description":"A `Buffer` of information\n\n"},{"name":"rinfo","types":["Object"],"description":"An object with the sender's address information and the number\n\n*of bytes in the datagram. \n\n"}],"description":"Emitted when a new datagram is available on a socket.","short_description":"Emitted when a new datagram is available on a socket.","line":211,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"message","name_prefix":"socket@","path":"socket.event.message","outFile":"dgram.html#socket.event.message"}],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","subclasses":[],"name":"socket","path":"socket","outFile":"dgram.html"}],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","subclasses":["socket"],"name":"dgram","path":"dgram","outFile":"dgram.html"},{"id":"dns","type":"class","description":"\nDNS is the backbone of all operations on the Internet. To access this module,\ninclude `require('dns')` in your code.\n\nWhenever a Node.js developer does something like `net.connect(80, 'google.com')`\nor `http.get({ host: 'google.com' })`, the [[dns.lookup `dns.lookup()`]] method\nis used.  All methods in the dns module use C-Ares—except for `dns.lookup()`\nwhich uses\n[`getaddrinfo(3)`](http://www.kernel.org/doc/man-pages/online/pages/man3/getaddrinfo.3.html) in a thread pool.\nC-Ares is much faster than `getaddrinfo`, but the system resolver is more constant with how other programs operate. Users who need\nto do a large number of look ups quickly should use the methods that go through\nC-Ares.\n\n#### Example: Resolving `'www.google.com'`, and then reverse resolving the IP\naddresses that are returned:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/dns/dns.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"3 - Stable","short_description":"\nDNS is the backbone of all operations on the Internet. To access this module,\ninclude `require('dns')` in your code.\n","line":24,"aliases":[],"children":[{"id":"dns.lookup","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"family","default_value":"null","optional":true,"types":["Number"],"description":"Indicates whether to use IPv4 (`4`) or IPv6 (`6`)\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The error object\n\n","types":["Error"]},{"name":"address","description":"A string representation of an IPv4 or IPv6 address\n\n","types":["String"]},{"name":"family","description":"Indicates whether to use IPv4 (`4`) or IPv6 (`6`)\n\n","types":["Number"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"family","types":["Number"],"description":"Indicates whether to use IPv4 (`4`) or IPv6 (`6`)\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The error object\n\n"},{"name":"address","types":["String"],"description":"A string representation of an IPv4 or IPv6 address\n\n"},{"name":"family","types":["Number"],"description":"Either the integer `4` or `6`, and donates the address family--not necessarily the value initially passed to `lookup`\n\n"}],"description":"Resolves a domain (e.g. `'google.com'`) into the first found A (IPv4) or AAAA\n(IPv6) record.\n\nOn error, keep in mind that `err.code` will be set to `'ENOENT'` not only when\nthe domain does not exist but also when the lookup fails in other ways\nsuch as no available file descriptors.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/dns/dns.lookup.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Resolves a domain (e.g. `'google.com'`) into the first found A (IPv4) or AAAA\n(IPv6) record.\n","line":46,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"lookup","name_prefix":"dns.","path":"dns.lookup","outFile":"dns.html#dns.lookup"},{"id":"dns.resolve","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"rrtype","default_value":"A","optional":true,"types":["String"],"description":"The record type to use\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"Determined by the record type and described in each\n\n*corresponding lookup method\n\n","types":["String"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"rrtype","types":["String"],"description":"The record type to use\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["String"],"description":"Determined by the record type and described in each\n\n*corresponding lookup method\n\n"}],"description":"Resolves a domain (e.g. `'google.com'`) into an array of the record types\nspecified by `rrtype`. Valid rrtypes are:\n\n* `A` (IPV4 addresses)\n* `AAAA` (IPV6 addresses)\n* `MX` (mail exchange records)\n* `TXT` (text records)\n* `SRV` (SRV records)\n* `PTR` (used for reverse IP lookups)\n* `NS` (name server records)\n* `CNAME` (canonical name records)\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/dns/dns.resolve.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Resolves a domain (e.g. `'google.com'`) into an array of the record types\nspecified by `rrtype`. Valid rrtypes are:\n","line":73,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolve","name_prefix":"dns.","path":"dns.resolve","outFile":"dns.html#dns.resolve"},{"id":"dns.resolve4","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"An array of IPv4 addresses (_e.g._ `['74.125.79.104',\n\n*'74.125.79.105', '74.125.79.106']`)\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["Array"],"description":"An array of IPv4 addresses (_e.g._ `['74.125.79.104',\n\n*'74.125.79.105', '74.125.79.106']`)\n\n"}],"description":"The same as [[dns.resolve `dns.resolve()`]], but only for IPv4 queries (`A`\nrecords).","short_description":"The same as [[dns.resolve `dns.resolve()`]], but only for IPv4 queries (`A`\nrecords).","line":87,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolve4","name_prefix":"dns.","path":"dns.resolve4","outFile":"dns.html#dns.resolve4"},{"id":"dns.resolve6","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"An array of IPv6 addresses\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["Array"],"description":"An array of IPv6 addresses\n\n"}],"description":"The same as [[dns.resolve4 `dns.resolve4()`]] except for IPv6 queries (an `AAAA`\nquery).","short_description":"The same as [[dns.resolve4 `dns.resolve4()`]] except for IPv6 queries (an `AAAA`\nquery).","line":100,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolve6","name_prefix":"dns.","path":"dns.resolve6","outFile":"dns.html#dns.resolve6"},{"id":"dns.resolveCname","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"An array of the canonical name records available for\n\n*`domain` (e.g. `['bar.example.com']`)\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["Array"],"description":"An array of the canonical name records available for\n\n*`domain` (e.g. `['bar.example.com']`)\n\n"}],"description":"The same as [[dns.resolve `dns.resolve()`]], but only for canonical name records\n(`CNAME` records).\n\nEach DNS query can return one of the following error codes:\n\n- `dns.TEMPFAIL`: timeout, SERVFAIL or similar.\n- `dns.PROTOCOL`: got garbled reply.\n- `dns.NXDOMAIN`: domain does not exists.\n- `dns.NODATA`: domain exists but no data of reqd type.\n- `dns.NOMEM`: out of memory while processing.\n- `dns.BADQUERY`: the query is malformed.","short_description":"The same as [[dns.resolve `dns.resolve()`]], but only for canonical name records\n(`CNAME` records).\n","line":220,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolveCname","name_prefix":"dns.","path":"dns.resolveCname","outFile":"dns.html#dns.resolveCname"},{"id":"dns.resolveMx","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"An array of MX records, each with a priority and an\n\n*exchange attribute (_e.g._ `[{'priority' : 10, 'exchange' :\n\n*'mx.example.com'},{...}]`)\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["Array"],"description":"An array of MX records, each with a priority and an\n\n*exchange attribute (_e.g._ `[{'priority' : 10, 'exchange' :\n\n*'mx.example.com'},{...}]`)\n\n"}],"description":"The same as [[dns.resolve `dns.resolve()`]], but only for mail exchange queries\n(`MX` records).","short_description":"The same as [[dns.resolve `dns.resolve()`]], but only for mail exchange queries\n(`MX` records).","line":115,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolveMx","name_prefix":"dns.","path":"dns.resolveMx","outFile":"dns.html#dns.resolveMx"},{"id":"dns.resolveNs","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"An array of the name server records available for `domain`,\n\n*_e.g_ `['ns1.example.com', 'ns2.example.com']`\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["Array"],"description":"An array of the name server records available for `domain`,\n\n*_e.g_ `['ns1.example.com', 'ns2.example.com']`\n\n"}],"description":"The same as [[dns.resolve `dns.resolve()`]], but only for name server records\n(`NS` records).","short_description":"The same as [[dns.resolve `dns.resolve()`]], but only for name server records\n(`NS` records).","line":198,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolveNs","name_prefix":"dns.","path":"dns.resolveNs","outFile":"dns.html#dns.resolveNs"},{"id":"dns.resolveSrv","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"An array of the SRV records available for `domain`.\n\n*Properties of SRV records are priority, weight, port, and name (_e.g._\n\n*`[{'priority' : 10, 'weight' : 5, 'port' : 21223, 'name' :\n\n*'service.example.com'}, {...}]`)\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["Array"],"description":"An array of the SRV records available for `domain`.\n\n*Properties of SRV records are priority, weight, port, and name (_e.g._\n\n*`[{'priority' : 10, 'weight' : 5, 'port' : 21223, 'name' :\n\n*'service.example.com'}, {...}]`)\n\n"}],"description":"The same as [[dns.resolve `dns.resolve()`]], but only for service records (`SRV`\nrecords).","short_description":"The same as [[dns.resolve `dns.resolve()`]], but only for service records (`SRV`\nrecords).","line":144,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolveSrv","name_prefix":"dns.","path":"dns.resolveSrv","outFile":"dns.html#dns.resolveSrv"},{"id":"dns.resolveTxt","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"addresses","description":"An array of text records available for `domain` (_e.g._\n\n*`['v=spf1 ip4 0.0.0.0 ~all']`)\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"domain","types":["String"],"description":"The domain to resolve\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"addresses","types":["Array"],"description":"An array of text records available for `domain` (_e.g._\n\n*`['v=spf1 ip4 0.0.0.0 ~all']`)\n\n"}],"description":"The same as [[dns.resolve `dns.resolve()`]], but only for text queries (`TXT`\nrecords).","short_description":"The same as [[dns.resolve `dns.resolve()`]], but only for text queries (`TXT`\nrecords).","line":129,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"resolveTxt","name_prefix":"dns.","path":"dns.resolveTxt","outFile":"dns.html#dns.resolveTxt"},{"id":"dns.reverse","type":"class method","signatures":[{"arguments":[{"name":"ip","types":["String"],"description":"The IP address to reverse\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The `Error` object\n\n","types":["Error"]},{"name":"domains","description":"An array of possible domain names\n\n","types":["Array"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"ip","types":["String"],"description":"The IP address to reverse\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"err","types":["Error"],"description":"The `Error` object\n\n"},{"name":"domains","types":["Array"],"description":"An array of possible domain names\n\n"}],"description":"Reverse resolves an IP address to an array of domain names.\n\n##### Error codes\n\nEach DNS query can return one of the following error codes:\n\n- `dns.NODATA`: DNS server returned answer with no data.\n- `dns.FORMERR`: DNS server claims query was misformatted.\n- `dns.SERVFAIL`: DNS server returned general failure.\n- `dns.NOTFOUND`: Domain name not found.\n- `dns.NOTIMP`: DNS server does not implement requested operation.\n- `dns.REFUSED`: DNS server refused query.\n- `dns.BADQUERY`: Misformatted DNS query.\n- `dns.BADNAME`: Misformatted domain name.\n- `dns.BADFAMILY`: Unsupported address family.\n- `dns.BADRESP`: Misformatted DNS reply.\n- `dns.CONNREFUSED`: Could not contact DNS servers.\n- `dns.TIMEOUT`: Timeout while contacting DNS servers.\n- `dns.EOF`: End of file.\n- `dns.FILE`: Error reading file.\n- `dns.NOMEM`: Out of memory.\n- `dns.DESTRUCTION`: Channel is being destroyed.\n- `dns.BADSTR`: Misformatted string.\n- `dns.BADFLAGS`: Illegal flags specified.\n- `dns.NONAME`: Given hostname is not numeric.\n- `dns.BADHINTS`: Illegal hints flags specified.\n- `dns.NOTINITIALIZED`: c-ares library initialization not yet performed.\n- `dns.LOADIPHLPAPI`: Error loading iphlpapi.dll.\n- `dns.ADDRGETNETWORKPARAMS`: Could not find GetNetworkParams function.\n- `dns.CANCELLED`: DNS query cancelled.","short_description":"Reverse resolves an IP address to an array of domain names.\n","line":184,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dns.markdown","name":"reverse","name_prefix":"dns.","path":"dns.reverse","outFile":"dns.html#dns.reverse"}],"file":"0.8.14/nodejs_ref_guide/dns.markdown","subclasses":[],"name":"dns","path":"dns","outFile":"dns.html"},{"id":"domain","type":"class","description":"\nDomains provide a way to handle multiple different IO operations as a\nsingle group. The Domain class encapsulates the functionality of routing errors\nand uncaught exceptions to the active Domain object.\n\nDomain is a child class of EventEmitter.  To handle the errors that it\ncatches, listen to its `error` event. If any of the event emitters or callbacks\nregistered to a\ndomain emit an `error` event, or throw an error, then the domain object\nwill be notified, rather than losing the context of the error in the\n`process.on('uncaughtException')` handler, or causing the program to\nexit with an error code.\n\nThis feature is new in Node.js version 0.8.  It is a first pass, and is\nexpected to change significantly in future versions.  Please use it and\nprovide feedback.\n\nDue to their experimental nature, the Domains features are disabled unless\nthe `domain` module is loaded at least once.  No domains are created or\nregistered by default.  This is by design, to prevent adverse effects on\ncurrent programs.  It is expected to be enabled by default in future\nNode.js versions.\n\n#### Additions to Error objects\n\nAny time an Error object is routed through a domain, a few extra fields\nare added to it.\n\n* `error.domain` The domain that first handled the error.\n* `error.domain_emitter` The event emitter that emitted an 'error' event\n  with the error object.\n* `error.domain_bound` The callback function which was bound to the\n  domain, and passed an error as its first argument.\n* `error.domain_thrown` A boolean indicating whether the error was\n  thrown, emitted, or passed to a bound callback function.\n\n#### Implicit Binding\n\nIf domains are in use, then all new EventEmitter objects (including\nStream objects, requests, responses, etc.) will be implicitly bound to\nthe active domain at the time of their creation.\n\nAdditionally, callbacks passed to lowlevel event loop requests (such as\nto fs.open, or other callback-taking methods) will automatically be\nbound to the active domain.  If they throw, then the domain will catch\nthe error.\n\nIn order to prevent excessive memory usage, Domain objects themselves\nare not implicitly added as children of the active domain.  If they\nwere, then it would be too easy to prevent request and response objects\nfrom being properly garbage collected.\n\nIf you *want* to nest Domain objects as children of a parent Domain,\nthen you must explicitly add them, and then dispose of them later.\n\nImplicit binding routes thrown errors and `'error'` events to the\nDomain's `error` event, but does not register the EventEmitter on the\nDomain, so `domain.dispose()` will not shut down the EventEmitter.\nImplicit binding only takes care of thrown errors and `'error'` events.\n\n#### Explicit Binding\n\nSometimes, the domain in use is not the one that ought to be used for a\nspecific event emitter.  Or, the event emitter could have been created\nin the context of one domain, but ought to instead be bound to some\nother domain.\n\nFor example, there could be one domain in use for an HTTP server, but\nperhaps we would like to have a separate domain to use for each request.\n\nThat is possible via explicit binding.\n\nFor example:\n\n```\n// create a top-level domain for the server\nvar serverDomain = domain.create();\n\nserverDomain.run(function() {\n  // server is created in the scope of serverDomain\n  http.createServer(function(req, res) {\n    // req and res are also created in the scope of serverDomain\n    // however, we'd prefer to have a separate domain for each request.\n    // create it first thing, and add req and res to it.\n    var reqd = domain.create();\n    reqd.add(req);\n    reqd.add(res);\n    reqd.on('error', function(er) {\n      console.error('Error', er, req.url);\n      try {\n        res.writeHead(500);\n        res.end('Error occurred, sorry.');\n        res.on('close', function() {\n          // forcibly shut down any other things added to this domain\n          reqd.dispose();\n        });\n      } catch (er) {\n        console.error('Error sending 500', er, req.url);\n        // tried our best.  clean up anything remaining.\n        reqd.dispose();\n      }\n    });\n  }).listen(1337);\n});\n```","stability":"1 - Experimental","short_description":"\nDomains provide a way to handle multiple different IO operations as a\nsingle group. The Domain class encapsulates the functionality of routing errors\nand uncaught exceptions to the active Domain object.\n","line":112,"aliases":[],"children":[{"id":"domain.add","type":"class method","signatures":[{"arguments":[{"name":"emitter","types":["eventemitter","timer"],"description":"An emitter or timer to be added to the domain\n\n"}]}],"arguments":[{"name":"emitter","types":["eventemitter","timer"],"description":"An emitter or timer to be added to the domain\n\n"}],"description":"Explicitly adds an emitter to the domain.  If any event handlers called by\nthe emitter throw an error, or if the emitter emits an `error` event, it\nwill be routed to the domain's `error` event, just like with implicit\nbinding.\n\nThis also works with timers that are returned from `setInterval` and\n`setTimeout`.  If their callback function throws, it will be caught by\nthe domain 'error' handler.\n\nIf the Timer or EventEmitter was already bound to a domain, it is removed\nfrom that one, and bound to this one instead.","short_description":"Explicitly adds an emitter to the domain.  If any event handlers called by\nthe emitter throw an error, or if the emitter emits an `error` event, it\nwill be routed to the domain's `error` event, just like with implicit\nbinding.\n","line":180,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"add","name_prefix":"domain.","path":"domain.add","outFile":"domain.html#domain.add"},{"id":"domain.bind","type":"class method","signatures":[{"arguments":[{"name":"callback","types":["Function"],"description":"The callback function\n\n"}],"returns":[{"type":"Function","description":"The bound function\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"The callback function\n\n"}],"returns":[{"type":"Function","description":"The bound function\n\n"}],"description":"The returned function will be a wrapper around the supplied callback\nfunction.  When the returned function is called, any errors that are\nthrown will be routed to the domain's `error` event.\n\n#### Example\n\n```\n    var d = domain.create();\n\n    function readSomeFile(filename, cb) {\n      fs.readFile(filename, 'utf8', d.bind(function(er, data) {\n        // if this throws, it will also be passed to the domain\n        return cb(er, data ? JSON.parse(data) : null);\n      }));\n    }\n\n    d.on('error', function(er) {\n      // an error occurred somewhere.\n      // if we throw it now, it will crash the program\n      // with the normal line number and stack message.\n    });\n```","short_description":"The returned function will be a wrapper around the supplied callback\nfunction.  When the returned function is called, any errors that are\nthrown will be routed to the domain's `error` event.\n","line":220,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"bind","name_prefix":"domain.","path":"domain.bind","outFile":"domain.html#domain.bind"},{"id":"domain.create","type":"class method","signatures":[{"arguments":[]}],"returns":[{"type":"domain","description":"A new Domain object\n\n"}],"description":"Returns a new Domain object.","short_description":"Returns a new Domain object.","line":120,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"create","name_prefix":"domain.","path":"domain.create","outFile":"domain.html#domain.create"},{"id":"domain.dispose","type":"class method","signatures":[{"arguments":[]}],"description":"The dispose method destroys a domain, and makes a best effort attempt to\nclean up any and all IO that is associated with the domain.  Streams are\naborted, ended, closed, and/or destroyed.  Timers are cleared.\nExplicitly bound callbacks are no longer called.  Any error events that\nare raised as a result of this are ignored.\n\nThe intention of calling `dispose` is generally to prevent cascading\nerrors when a critical part of the Domain context is found to be in an\nerror state.\n\nNote that IO might still be performed.  However, to the highest degree\npossible, once a domain is disposed, further errors from the emitters in\nthat set will be ignored.  So, even if some remaining actions are still\nin flight, Node.js will not communicate further about them.","short_description":"The dispose method destroys a domain, and makes a best effort attempt to\nclean up any and all IO that is associated with the domain.  Streams are\naborted, ended, closed, and/or destroyed.  Timers are cleared.\nExplicitly bound callbacks are no longer called.  Any error events that\nare raised as a result of this are ignored.\n","line":280,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"dispose","name_prefix":"domain.","path":"domain.dispose","outFile":"domain.html#domain.dispose"},{"id":"domain.intercept","type":"class method","signatures":[{"arguments":[{"name":"callback","types":["Function"],"description":"The callback function\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"The callback function\n\n"}],"returns":[{"type":"Function","description":"The intercepted function\n\n"}],"description":"This method is almost identical to `domain.bind(callback)`.  However, in\naddition to catching thrown errors, it will also intercept `Error`\nobjects sent as the first argument to the function.\n\nIn this way, the common `if (er) return callback(er);` pattern can be replaced\nwith a single error handler in a single place.\n\n#### Example\n\n```\n    var d = domain.create();\n\n    function readSomeFile(filename, cb) {\n      fs.readFile(filename, 'utf8', d.intercept(function(data) {\n        // note, the first argument is never passed to the\n        // callback since it is assumed to be the 'Error' argument\n        // and thus intercepted by the domain.\n\n        // if this throws, it will also be passed to the domain\n        // so the error-handling logic can be moved to the 'error'\n        // event on the domain instead of being repeated throughout\n        // the program.\n        return cb(null, JSON.parse(data));\n      }));\n    }\n\n    d.on('error', function(er) {\n      // an error occurred somewhere.\n      // if we throw it now, it will crash the program\n      // with the normal line number and stack message.\n    });\n```","short_description":"This method is almost identical to `domain.bind(callback)`.  However, in\naddition to catching thrown errors, it will also intercept `Error`\nobjects sent as the first argument to the function.\n","line":260,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"intercept","name_prefix":"domain.","path":"domain.intercept","outFile":"domain.html#domain.intercept"},{"id":"domain.members","type":"class property","signatures":[{"returns":[{"type":"Array"}]}],"description":"An array of timers and event emitters that have been explicitly added\nto the domain.","short_description":"An array of timers and event emitters that have been explicitly added\nto the domain.","line":162,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"members","name_prefix":"domain.","path":"domain.members","outFile":"domain.html#domain.members"},{"id":"domain.remove","type":"class method","signatures":[{"arguments":[{"name":"emitter","types":["eventemitter","timer"],"description":"An emitter or timer to be removed from the\n\n*domain\n\n"}]}],"arguments":[{"name":"emitter","types":["eventemitter","timer"],"description":"An emitter or timer to be removed from the\n\n*domain\n\n"}],"description":"The opposite of [[domain.add `domain.add()`]].  Removes domain handling from the\nspecified emitter.","short_description":"The opposite of [[domain.add `domain.add()`]].  Removes domain handling from the\nspecified emitter.","line":190,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"remove","name_prefix":"domain.","path":"domain.remove","outFile":"domain.html#domain.remove"},{"id":"domain.run","type":"class method","signatures":[{"arguments":[{"name":"fn","types":["Function"],"description":"A function to run\n\n"}]}],"arguments":[{"name":"fn","types":["Function"],"description":"A function to run\n\n"}],"description":"Run the supplied function in the context of the domain, implicitly\nbinding all event emitters, timers, and lowlevel requests that are\ncreated in that context.\n\nThis is the most basic way to use a domain.\n\n#### Example\n\n```\nvar d = domain.create();\nd.on('error', function(er) {\n  console.error('Caught error!', er);\n});\nd.run(function() {\n  process.nextTick(function() {\n    setTimeout(function() { // simulating some various async stuff\n      fs.open('non-existent file', 'r', function(er, fd) {\n        if (er) throw er;\n        // proceed...\n      });\n    }, 100);\n  });\n});\n```\n\nIn this example, the `d.on('error')` handler will be triggered, rather\nthan crashing the program.","short_description":"Run the supplied function in the context of the domain, implicitly\nbinding all event emitters, timers, and lowlevel requests that are\ncreated in that context.\n","line":154,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/domain.markdown","name":"run","name_prefix":"domain.","path":"domain.run","outFile":"domain.html#domain.run"}],"file":"0.8.14/nodejs_ref_guide/domain.markdown","subclasses":[],"name":"domain","path":"domain","outFile":"domain.html"},{"id":"eventemitter","type":"class","description":"\nMany objects in Node.js emit events. Some examples include:\n\n* [[net.Server `net.Server`]], which emits an event each time a peer connects to\nit\n* [[fs.ReadStream `fs.ReadStream`]], which emits an event when the file is\nopened.\n\nAll objects that emit events are instances of `events.EventEmitter`.\n\nTypically, event names are represented by a camel-cased string. However, there\naren't any strict restrictions on that, as any string is accepted.\n\nThese functions can then be attached to objects, to be executed when an event is\nemitted. Such functions are called _listeners_.\n\nTo inherit from `EventEmitter`, add `require('events').EventEmitter` to your\ncode.\n\nWhen an `EventEmitter` instance experiences an error, the typical action is to\nemit an `'error'` event. Error events are treated as a special case in Node.js.\nIf there is no listener for it, then the default action is to print a stack\ntrace and exit the program.\n\nAll EventEmitters automatically emit the event `'newListener'` when new\nlisteners are added.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/event_emitter/eventemitter.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","stability":"4 - API Frozen","short_description":"\nMany objects in Node.js emit events. Some examples include:\n","line":37,"aliases":[],"children":[{"id":"eventemitter.addListener","type":"class method","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The listener callback to execute\n\n\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"callback","types":["Function"],"description":"The listener callback to execute\n\n\n\n"}],"alias_of":"eventemitter.on","description":"Adds a listener to the end of the listeners array for the specified event.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/event_emitter/eventemitter.addlistener.js?linestart=0&lineend=0&showlines=fals e' defer='defer'></script>","short_description":"Adds a listener to the end of the listeners array for the specified event.\n","line":61,"aliases":["eventemitter.on"],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"addListener","name_prefix":"eventemitter.","path":"eventemitter.addListener","outFile":"events.html#eventemitter.addListener"},{"id":"eventemitter.emit","type":"class method","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"arg","ellipsis":true,"optional":true,"types":["Object"],"description":"Any optional arguments for the listeners\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"arg","types":["Object"],"description":"Any optional arguments for the listeners\n\n"}],"description":"Execute each of the subscribed listeners in order with the supplied arguments.","short_description":"Execute each of the subscribed listeners in order with the supplied arguments.","line":80,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"emit","name_prefix":"eventemitter.","path":"eventemitter.emit","outFile":"events.html#eventemitter.emit"},{"id":"eventemitter.listeners","type":"class method","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event type to listen for\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event type to listen for\n\n"}],"description":"Returns an array of listeners for the specified event.\n\nThis array **may** be a mutable reference to the same underlying list of\nlisteners that is used by the event subsystem.  However, certain\nactions (specifically, [[eventemitter.removeAllListeners `removeAllListeners()`]]) invalidates this\nreference.\n\nIf you would like to get a copy of the listeners at a specific point in\ntime that is guaranteed not to change, make a copy by doing something like\n`emitter.listeners(event).slice(0)`.\n\nIn a future release of node, this behavior **may** change to always\nreturn a copy, for consistency.  In your programs, please do not rely on\nbeing able to modify the EventEmitter listeners using array methods.\nAlways use the [[eventemitter.on `on()`]] method to add new listeners.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/event_emitter/eventemitter.listeners.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns an array of listeners for the specified event.\n","line":107,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"listeners","name_prefix":"eventemitter.","path":"eventemitter.listeners","outFile":"events.html#eventemitter.listeners"},{"id":"eventemitter.on","type":"class method","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The listener callback to execute\n\n\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"callback","types":["Function"],"description":"The listener callback to execute\n\n\n\n"}],"alias_of":"eventemitter.addListener","description":"Adds a listener to the end of the listeners array for the specified event.","short_description":"Adds a listener to the end of the listeners array for the specified event.","line":71,"aliases":["eventemitter.addListener"],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"on","name_prefix":"eventemitter.","path":"eventemitter.on","outFile":"events.html#eventemitter.on"},{"id":"eventemitter.once","type":"class method","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"listener","arguments":[],"callback":true,"types":["Function"],"description":"The listener callback to execute\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"listener","types":["Function"],"description":"The listener callback to execute\n\n"}],"description":"Adds a **one time** listener for the event. This listener is invoked only the\nnext time the event is fired, after which it is removed.\n\n#### Example\n\n    server.once('connection', function (stream) {\n      console.log('Ah, we have our first user!');\n    });","short_description":"Adds a **one time** listener for the event. This listener is invoked only the\nnext time the event is fired, after which it is removed.\n","line":123,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"once","name_prefix":"eventemitter.","path":"eventemitter.once","outFile":"events.html#eventemitter.once"},{"id":"eventemitter.removeAllListeners","type":"class method","signatures":[{"arguments":[{"name":"event","optional":true,"types":["String"],"description":"An optional event type to remove\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"An optional event type to remove\n\n"}],"description":"Removes all listeners, or those of the specified event.\n\nNote: This **invalidates** any arrays that have previously been returned by [[eventemitter.listeners `eventemitter.listeners`]].","short_description":"Removes all listeners, or those of the specified event.\n","line":133,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"removeAllListeners","name_prefix":"eventemitter.","path":"eventemitter.removeAllListeners","outFile":"events.html#eventemitter.removeAllListeners"},{"id":"eventemitter.removeListener","type":"class method","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"listener","arguments":[],"callback":true,"types":["Function"],"description":"The listener callback to execute\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event to listen for\n\n"},{"name":"listener","types":["Function"],"description":"The listener callback to execute\n\n"}],"description":"Remove a listener from the listener array for the specified event.\n\nWarning: This can change array indices in the listener array behind the\nlistener.\n\n#### Example\n\n    var callback = function(stream) {\n      console.log('someone connected!');\n    };\n    server.on('connection', callback);\n    // ...\n    server.removeListener('connection', callback);","short_description":"Remove a listener from the listener array for the specified event.\n","line":154,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"removeListener","name_prefix":"eventemitter.","path":"eventemitter.removeListener","outFile":"events.html#eventemitter.removeListener"},{"id":"eventemitter.setMaxListeners","type":"class method","signatures":[{"arguments":[{"name":"n","types":["Number"],"description":"The maximum number of listeners\n\n"}]}],"arguments":[{"name":"n","types":["Number"],"description":"The maximum number of listeners\n\n"}],"description":"By default, EventEmitters print a warning if more than 10 listeners are added\nfor a particular event. This is a useful default which helps finding memory\nleaks.\n\nObviously, not all Emitters should be limited to 10. This function allows that\nto be increased. Set it to `0` for unlimited listeners.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/event_emitter/eventemitter.setMaxListeners.js?linestart=0&lineend=0&showlines= false' defer='defer'></script>","short_description":"By default, EventEmitters print a warning if more than 10 listeners are added\nfor a particular event. This is a useful default which helps finding memory\nleaks.\n","line":170,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"setMaxListeners","name_prefix":"eventemitter.","path":"eventemitter.setMaxListeners","outFile":"events.html#eventemitter.setMaxListeners"},{"id":"eventemitter@newListener","type":"event","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event to emit\n\n"},{"name":"listener","arguments":[],"callback":true,"types":["Function"],"description":"The attaching listener\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event to emit\n\n"},{"name":"listener","types":["Function"],"description":"The attaching listener\n\n"}],"description":"This event is emitted any time someone adds a new listener, but *before* the\nlistener is attached.","short_description":"This event is emitted any time someone adds a new listener, but *before* the\nlistener is attached.","line":47,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/events.markdown","name":"newListener","name_prefix":"eventemitter@","path":"eventemitter.event.newListener","outFile":"events.html#eventemitter.event.newListener"}],"file":"0.8.14/nodejs_ref_guide/events.markdown","subclasses":[],"name":"eventemitter","path":"eventemitter","outFile":"events.html"},{"id":"fs","type":"class","description":"\nIn Node.js, file input and output is provided by simple wrappers around standard\n[POSIX functions](http://en.wikipedia.org/wiki/POSIX). All the read and write\nmethods methods have asynchronous and synchronous forms. To use this module,\ninclude `require('fs')` in your code.\n\nThe asynchronous form always take a completion callback as its last argument.\nThe arguments passed to the completion callback depend on the method, but the\nfirst argument is always reserved for an exception. If the operation was\ncompleted successfully, then the first argument will be `null` or `undefined`.\n\nWhen using the synchronous form, any exceptions are immediately thrown. You can\nuse `try/catch` to handle exceptions, or allow them to bubble up.\n\nIn busy processes, the programmer is **strongly encouraged** to use the\nasynchronous versions of these calls. The synchronous versions block the entire\nprocess until they complete—halting all connections. However, with the\nasynchronous methods, there is no guaranteed ordering.\n\nNote: When processing files, relative paths to filename can be used; however, this path is relative to [[process.cwd `process.cwd()`]].\n\n#### Example: An asynchronous file delete:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/fs/fs.ex.1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: A synchronous file delete:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/fs/fs.ex.2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: Handling timing issues with callback\n\nHere's an example of the **wrong** way to perform more than one asynchronous\noperation:\n\n    fs.rename('/tmp/hello', '/tmp/world', function (err) {\n      if (err) throw err;\n      console.log('renamed complete');\n    });\n    // ERROR: THIS IS NOT CORRECT!\n    fs.stat('/tmp/world', function (err, stats) {\n      if (err) throw err;\n      console.log('stats: ' + JSON.stringify(stats));\n    });\n\nIn the example above, it could be that `fs.stat` is executed before `fs.rename`.\nThe correct way to do this is to chain the callbacks, like this:\n\n    fs.rename('/tmp/hello', '/tmp/world', function (err) {\n      if (err) throw err;\n      fs.stat('/tmp/world', function (err, stats) {\n        if (err) throw err;\n        console.log('stats: ' + JSON.stringify(stats));\n      });\n    });","stability":"3 - Stable","short_description":"\nIn Node.js, file input and output is provided by simple wrappers around standard\n[POSIX functions](http://en.wikipedia.org/wiki/POSIX). All the read and write\nmethods methods have asynchronous and synchronous forms. To use this module,\ninclude `require('fs')` in your code.\n","line":62,"aliases":[],"children":[{"id":"fs.appendFile","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","default_value":"utf8","types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"},{"name":"callback","optional":true}]}],"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"}],"description":"Asynchronously append data to a file, creating the file if it does not yet exist.\n`data` can be a string or a buffer. The `encoding` argument is ignored if\n`data` is a buffer.\n\nExample:\n\n    fs.appendFile('message.txt', 'data to append', function (err) {\n      if (err) throw err;\n      console.log('The \"data to append\" was appended to file!');\n    });","short_description":"Asynchronously append data to a file, creating the file if it does not yet exist.\n`data` can be a string or a buffer. The `encoding` argument is ignored if\n`data` is a buffer.\n","line":1071,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"appendFile","name_prefix":"fs.","path":"fs.appendFile","outFile":"fs.html#fs.appendFile"},{"id":"fs.appendFileSync","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","default_value":"utf8","types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"}],"description":"The synchronous version of [[fs.appendFile `appendFile()`]].","short_description":"The synchronous version of [[fs.appendFile `appendFile()`]].","line":1081,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"appendFileSync","name_prefix":"fs.","path":"fs.appendFileSync","outFile":"fs.html#fs.appendFileSync"},{"id":"fs.chmod","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[chmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chmod.2.html).\nThis changes the permissions of the file specified whose, which is dereferenced\nif it is a symbolic link.","short_description":"An asynchronous\n[chmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chmod.2.html).\nThis changes the permissions of the file specified whose, which is dereferenced\nif it is a symbolic link.","line":251,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"chmod","name_prefix":"fs.","path":"fs.chmod","outFile":"fs.html#fs.chmod"},{"id":"fs.chmodSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"}],"description":"A synchronous\n[chmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chmod.2.html).\nThis changes the permissions of the file specified whose, which is dereferenced\nif it is a symbolic link.","short_description":"A synchronous\n[chmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chmod.2.html).\nThis changes the permissions of the file specified whose, which is dereferenced\nif it is a symbolic link.","line":267,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"chmodSync","name_prefix":"fs.","path":"fs.chmodSync","outFile":"fs.html#fs.chmodSync"},{"id":"fs.chown","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[chown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chown.2.html).\nThis changes the ownership of the file specified by `path`, which is\nde-referenced if it is a symbolic link.","short_description":"An asynchronous\n[chown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chown.2.html).\nThis changes the ownership of the file specified by `path`, which is\nde-referenced if it is a symbolic link.","line":144,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"chown","name_prefix":"fs.","path":"fs.chown","outFile":"fs.html#fs.chown"},{"id":"fs.chownSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"}],"description":"A synchronous\n[chown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chown.2.html).\nThis changes the ownership of the file specified by `path`, which is\ndereferenced if it is a symbolic link","short_description":"A synchronous\n[chown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/chown.2.html).\nThis changes the ownership of the file specified by `path`, which is\ndereferenced if it is a symbolic link","line":160,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"chownSync","name_prefix":"fs.","path":"fs.chownSync","outFile":"fs.html#fs.chownSync"},{"id":"fs.close","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous file close; for more information, see\n[close(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/close.2.html).","short_description":"An asynchronous file close; for more information, see\n[close(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/close.2.html).","line":689,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"close","name_prefix":"fs.","path":"fs.close","outFile":"fs.html#fs.close"},{"id":"fs.closeSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"}],"description":"A synchronous file close; for more information, see\n[close(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/close.2.html).","short_description":"A synchronous file close; for more information, see\n[close(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/close.2.html).","line":702,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"closeSync","name_prefix":"fs.","path":"fs.closeSync","outFile":"fs.html#fs.closeSync"},{"id":"fs.createReadStream","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to read from\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Any optional arguments indicating how to read the stream\n\n"}],"returns":[{"type":"fs.ReadStream"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to read from\n\n"},{"name":"options","types":["Object"],"description":"Any optional arguments indicating how to read the stream\n\n"}],"description":"Returns a new [[fs.ReadStream `fs.ReadStream`]] object.\n\n`options` is an object with the following defaults:\n\n    {\n      flags: 'r',\n      encoding: null,\n      fd: null,\n      mode: 0666,\n      bufferSize: 64 * 1024\n    }\n\n`options` can include `start` and `end` values to read a range of bytes from the\nfile instead of the entire file.  Both `start` and `end` are inclusive and start\nat 0. The `encoding` can be `'utf8'`, `'ascii'`, or `'base64'`.\n\n#### Example\n\nHere's an example to read the last 10 bytes of a file which is 100 bytes long:\n\n    fs.createReadStream('sample.txt', {start: 90, end: 99});","short_description":"Returns a new [[fs.ReadStream `fs.ReadStream`]] object.\n","line":1245,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"createReadStream","name_prefix":"fs.","path":"fs.createReadStream","outFile":"fs.html#fs.createReadStream"},{"id":"fs.createWriteStream","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to read from\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Any optional arguments indicating how to write the stream\n\n"}],"returns":[{"type":"fs.WriteStream"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to read from\n\n"},{"name":"options","types":["Object"],"description":"Any optional arguments indicating how to write the stream\n\n"}],"description":"Returns a new [[stream.WritableStream WriteStream]] object.\n\n`options` is an object with the following defaults:\n\n    { flags: 'w',\n      encoding: null,\n      mode: 0666 }\n\n`options` may also include a `start` option to allow writing data at some\nposition past the beginning of the file.\n\nModifying a file rather than replacing it may require a `flags` mode of `r+`\nrather than the default mode `w`.","short_description":"Returns a new [[stream.WritableStream WriteStream]] object.\n","line":1268,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"createWriteStream","name_prefix":"fs.","path":"fs.createWriteStream","outFile":"fs.html#fs.createWriteStream"},{"id":"fs.exists","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to check\n\n"},{"name":"callback","arguments":[{"name":"exists","description":"`true` if the `path` exists\n\n","types":["Boolean"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to check\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"exists","types":["Boolean"],"description":"`true` if the `path` exists\n\n"}],"description":"Tests whether or not the given path exists by checking with the file system.\nThen calls the `callback` argument with either true or false.\n\n#### Example\n\n    fs.exists('/etc/passwd', function (exists) {\n      util.debug(exists ? \"it's there\" : \"no passwd!\");\n    });","short_description":"Tests whether or not the given path exists by checking with the file system.\nThen calls the `callback` argument with either true or false.\n","line":1204,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"exists","name_prefix":"fs.","path":"fs.exists","outFile":"fs.html#fs.exists"},{"id":"fs.existsSync","type":"class method","signatures":[{"arguments":[{"name":"path"}]}],"description":"Synchronous version of [[fs.exists `exists()`]].","short_description":"Synchronous version of [[fs.exists `exists()`]].","line":1211,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"existsSync","name_prefix":"fs.","path":"fs.existsSync","outFile":"fs.html#fs.existsSync"},{"id":"fs.fchmod","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[fchmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchmod.2.html)\n. This changes the permissions of the file referred to by the open file\ndescriptor.","short_description":"An asynchronous\n[fchmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchmod.2.html)\n. This changes the permissions of the file referred to by the open file\ndescriptor.","line":286,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fchmod","name_prefix":"fs.","path":"fs.fchmod","outFile":"fs.html#fs.fchmod"},{"id":"fs.fchmodSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"}],"description":"A synchronous\n[fchmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchmod.2.html)\n. This changes the permissions of the file referred to by the open file\ndescriptor.","short_description":"A synchronous\n[fchmod(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchmod.2.html)\n. This changes the permissions of the file referred to by the open file\ndescriptor.","line":302,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fchmodSync","name_prefix":"fs.","path":"fs.fchmodSync","outFile":"fs.html#fs.fchmodSync"},{"id":"fs.fchown","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[fchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchown.2.html)\n. This changes the ownership of the file referred to by the open file descriptor\nfd.","short_description":"An asynchronous\n[fchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchown.2.html)\n. This changes the ownership of the file referred to by the open file descriptor\nfd.","line":179,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fchown","name_prefix":"fs.","path":"fs.fchown","outFile":"fs.html#fs.fchown"},{"id":"fs.fchownSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"}],"description":"A synchronous\n[fchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchown.2.html)\n. This changes the ownership of the file referred to by the open file descriptor\nfd.","short_description":"A synchronous\n[fchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fchown.2.html)\n. This changes the ownership of the file referred to by the open file descriptor\nfd.","line":196,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fchownSync","name_prefix":"fs.","path":"fs.fchownSync","outFile":"fs.html#fs.fchownSync"},{"id":"fs.fstat","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"stats","description":"An [[fs.Stats `fs.Stats`]] object.\n\n","types":["fs.Stats"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}],"returns":[{"type":"fs.Stats"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"stats","types":["fs.Stats"],"description":"An [[fs.Stats `fs.Stats`]] object.\n\n"}],"description":"An asynchronous\n[fstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","short_description":"An asynchronous\n[fstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","line":388,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fstat","name_prefix":"fs.","path":"fs.fstat","outFile":"fs.html#fs.fstat"},{"id":"fs.fstatSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"}],"returns":[{"type":"fs.Stats"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"}],"description":"A synchronous\n[fstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","short_description":"A synchronous\n[fstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","line":427,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fstatSync","name_prefix":"fs.","path":"fs.fstatSync","outFile":"fs.html#fs.fstatSync"},{"id":"fs.FSWatcher","type":"class","superclass":"fs","description":"Objects returned from [[fs.watch `fs.watch()`]] are of this type. You can\nmonitor any changes that occur on a watched file by listening for the events in\nthis object.","short_description":"Objects returned from [[fs.watch `fs.watch()`]] are of this type. You can\nmonitor any changes that occur on a watched file by listening for the events in\nthis object.","line":1436,"aliases":[],"children":[{"id":"fs.FSWatcher.close","type":"class method","signatures":[{"arguments":[]}],"description":"Stop watching for changes on the given `FSWatcher`.","short_description":"Stop watching for changes on the given `FSWatcher`.","line":1446,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"close","name_prefix":"fs.FSWatcher.","path":"fs.FSWatcher.close","outFile":"fs.html#fs.FSWatcher.close"},{"id":"fs.FSWatcher@change","type":"event","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event that occured, either `'rename'` or '`change'`\n\n"},{"name":"filename","types":["String"],"description":"The name of the file which triggered the event\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event that occured, either `'rename'` or '`change'`\n\n"},{"name":"filename","types":["String"],"description":"The name of the file which triggered the event\n\n"}],"description":"Emitted when something changes in a watched directory or file. See more details\nin [[fs.watch `fs.watch()`]].","short_description":"Emitted when something changes in a watched directory or file. See more details\nin [[fs.watch `fs.watch()`]].","line":1460,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"change","name_prefix":"fs.FSWatcher@","path":"fs.FSWatcher.event.change","outFile":"fs.html#fs.FSWatcher.event.change"},{"id":"fs.FSWatcher@error","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was caught\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was caught\n\n"}],"description":"Emitted when an error occurs.","short_description":"Emitted when an error occurs.","line":1470,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"error","name_prefix":"fs.FSWatcher@","path":"fs.FSWatcher.event.error","outFile":"fs.html#fs.FSWatcher.event.error"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"FSWatcher","name_prefix":"fs.","path":"fs.FSWatcher","outFile":"fs.html"},{"id":"fs.fsync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"callback","arguments":[{"name":"err"}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}],"description":"An asynchronous\n[fsync(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fsync.2.html).","short_description":"An asynchronous\n[fsync(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fsync.2.html).","line":880,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fsync","name_prefix":"fs.","path":"fs.fsync","outFile":"fs.html#fs.fsync"},{"id":"fs.fsyncSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"}],"description":"A synchronous\n[fsync(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fsync.2.html).","short_description":"A synchronous\n[fsync(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/fsync.2.html).","line":894,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"fsyncSync","name_prefix":"fs.","path":"fs.fsyncSync","outFile":"fs.html#fs.fsyncSync"},{"id":"fs.futimes","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}],"description":"An asynchronous\n[futimes(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/lutimes.3.html). Change the file timestamps of a file referenced by the supplied file\ndescriptor.","short_description":"An asynchronous\n[futimes(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/lutimes.3.html). Change the file timestamps of a file referenced by the supplied file\ndescriptor.","line":847,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"futimes","name_prefix":"fs.","path":"fs.futimes","outFile":"fs.html#fs.futimes"},{"id":"fs.futimesSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"}],"description":"A synchronous\n[futimes(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/lutimes.3.html). Change the file timestamps of a file referenced by the supplied file\ndescriptor.","short_description":"A synchronous\n[futimes(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/lutimes.3.html). Change the file timestamps of a file referenced by the supplied file\ndescriptor.","line":864,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"futimesSync","name_prefix":"fs.","path":"fs.futimesSync","outFile":"fs.html#fs.futimesSync"},{"id":"fs.lchmod","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous [lchmod(2)](http://www.daemon-systems.org/man/lchmod.2.html).\nThis is like [[fs.chmod `chmod()`]] except in the case where the named file is a\nsymbolic link, in which case `lchmod()` sets the permission bits of the link,\nwhile `chmod()` sets the bits of the file the link references.\n\nNote: This is only available on Mac OS X.","short_description":"An asynchronous [lchmod(2)](http://www.daemon-systems.org/man/lchmod.2.html).\nThis is like [[fs.chmod `chmod()`]] except in the case where the named file is a\nsymbolic link, in which case `lchmod()` sets the permission bits of the link,\nwhile `chmod()` sets the bits of the file the link references.\n","line":320,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"lchmod","name_prefix":"fs.","path":"fs.lchmod","outFile":"fs.html#fs.lchmod"},{"id":"fs.lchmodSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"mode","types":["Number"],"description":"The new permissions\n\n"}],"description":"A synchronous [lchmod(2)](http://www.daemon-systems.org/man/lchmod.2.html). This\nis like [[fs.chmodSync `chmodSync()`]]except in the case where the named file is\na symbolic link, in which case `lchmod()` sets the permission bits of the link,\nwhile `chmod()` sets the bits of the file the link references.","short_description":"A synchronous [lchmod(2)](http://www.daemon-systems.org/man/lchmod.2.html). This\nis like [[fs.chmodSync `chmodSync()`]]except in the case where the named file is\na symbolic link, in which case `lchmod()` sets the permission bits of the link,\nwhile `chmod()` sets the bits of the file the link references.","line":336,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"lchmodSync","name_prefix":"fs.","path":"fs.lchmodSync","outFile":"fs.html#fs.lchmodSync"},{"id":"fs.lchown","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[lchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/lchown.2.html)\n. This is like [[fs.chown `chown()`]], but doesn't dereference symbolic links.","short_description":"An asynchronous\n[lchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/lchown.2.html)\n. This is like [[fs.chown `chown()`]], but doesn't dereference symbolic links.","line":215,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"lchown","name_prefix":"fs.","path":"fs.lchown","outFile":"fs.html#fs.lchown"},{"id":"fs.lchownSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"uid","types":["Number"],"description":"The new owner id\n\n"},{"name":"gid","types":["Number"],"description":"The new group id\n\n"}],"description":"Synchronous\n[lchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/lchown.2.html)\n. This is like [[fs.chownSync `chownSync()`]], but doesn't dereference symbolic\nlinks","short_description":"Synchronous\n[lchown(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/lchown.2.html)\n. This is like [[fs.chownSync `chownSync()`]], but doesn't dereference symbolic\nlinks","line":232,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"lchownSync","name_prefix":"fs.","path":"fs.lchownSync","outFile":"fs.html#fs.lchownSync"},{"id":"fs.link","type":"class method","signatures":[{"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[link(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/link.2.html).","short_description":"An asynchronous\n[link(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/link.2.html).","line":444,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"link","name_prefix":"fs.","path":"fs.link","outFile":"fs.html#fs.link"},{"id":"fs.linkSync","type":"class method","signatures":[{"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"}]}],"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"}],"description":"A synchronous\n[link(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/link.2.html).","short_description":"A synchronous\n[link(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/link.2.html).","line":458,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"linkSync","name_prefix":"fs.","path":"fs.linkSync","outFile":"fs.html#fs.linkSync"},{"id":"fs.lstat","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"stats","description":"An [[fs.Stats `fs.Stats`] object.\n\n","types":["fs.Stats"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}],"returns":[{"type":"fs.Stats"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"stats","types":["fs.Stats"],"description":"An [[fs.Stats `fs.Stats`] object.\n\n"}],"description":"An asynchronous\n[lstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","short_description":"An asynchronous\n[lstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","line":371,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"lstat","name_prefix":"fs.","path":"fs.lstat","outFile":"fs.html#fs.lstat"},{"id":"fs.lstatSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"}],"returns":[{"type":"fs.Stats"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"}],"description":"A synchronous\n[lstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","short_description":"A synchronous\n[lstat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","line":414,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"lstatSync","name_prefix":"fs.","path":"fs.lstatSync","outFile":"fs.html#fs.lstatSync"},{"id":"fs.mkdir","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the new directory\n\n"},{"name":"mode","default_value":777,"optional":true,"types":["Number"],"description":"An optional permission to set\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the new directory\n\n"},{"name":"mode","types":["Number"],"description":"An optional permission to set\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[mkdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/mkdir.2.html).","short_description":"An asynchronous\n[mkdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/mkdir.2.html).","line":626,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"mkdir","name_prefix":"fs.","path":"fs.mkdir","outFile":"fs.html#fs.mkdir"},{"id":"fs.mkdirSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the new directory\n\n"},{"name":"mode","default_value":777,"optional":true,"types":["Number"],"description":"An optional permission to set\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the new directory\n\n"},{"name":"mode","types":["Number"],"description":"An optional permission to set\n\n"}],"description":"A synchronous\n[mkdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/mkdir.2.html).","short_description":"A synchronous\n[mkdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/mkdir.2.html).","line":640,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"mkdirSync","name_prefix":"fs.","path":"fs.mkdirSync","outFile":"fs.html#fs.mkdirSync"},{"id":"fs.open","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"flags","types":["String"],"description":"A string indicating how to open the file\n\n"},{"name":"mode","default_value":666,"optional":true,"types":["Number"],"description":"The optional permissions to give the file if it's created\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"fd","description":"An open file descriptor\n\n","types":["Number"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"flags","types":["String"],"description":"A string indicating how to open the file\n\n"},{"name":"mode","types":["Number"],"description":"The optional permissions to give the file if it's created\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"fd","types":["Number"],"description":"An open file descriptor\n\n"}],"description":"An asynchronous file open; for more information, see\n[open(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/open.2.html).\n\n`flags` can be one of the following:\n\n* `'r'`: Opens the file for reading. An exception occurs if the file does not\nexist.\n\n* `'r+'`: Opens the file for reading and writing. An exception occurs if the\nfile does not exist.\n\n* `'rs'`: Open file for reading in synchronous mode. Instructs the operating\n  system to bypass the local file system cache.\n\n  This is primarily useful for opening files on NFS mounts as it allows you to\n  skip the potentially stale local cache. It has a very real impact on I/O\n  performance so don't use this mode unless you need it.\n\n  Note that this doesn't turn `fs.open()` into a synchronous blocking call.\n  If that's what you want, then you should be using `fs.openSync()`\n\n* `'rs+'`: Open file for reading and writing, telling the OS to open it\n  synchronously. See notes for `'rs'` about using this with caution.\n\n* `'w'`: Opens the file for writing. The file is created (if it does not exist)\nor truncated (if it exists).\n\n* `'wx'`: Like `'w'`, but opens the file in exclusive mode\n\n* `'w+'`: Opens the file for reading and writing. The file is created (if it\ndoesn't exist) or truncated (if it exists).\n\n* `'wx+'`: Like `'w+'` but opens the file in exclusive mode\n\n* `'a'`: Opens the file for appending. The file is created if it doesn't exist.\n\n* `'a+'`: Opens the file for reading and appending. The file is created if it\ndoesn't exist.\n\n `'ax+'`: Like `'a+'` but opens the file in exclusive mode\n\nNote: Exclusive mode (`O_EXCL`) ensures that `path` is newly created. `fs.open()` fails if a file by that name already exists. On POSIX systems, symlinks are not followed. Exclusive mode may or may not work with network file systems.","short_description":"An asynchronous file open; for more information, see\n[open(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/open.2.html).\n","line":757,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"open","name_prefix":"fs.","path":"fs.open","outFile":"fs.html#fs.open"},{"id":"fs.openSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"flags","types":["String"],"description":"A string indicating how to open the file\n\n"},{"name":"mode","default_value":666,"optional":true,"types":["Number"],"description":"The optional permissions to give the file if it's created\n\n"}],"returns":[{"type":"Number"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"flags","types":["String"],"description":"A string indicating how to open the file\n\n"},{"name":"mode","types":["Number"],"description":"The optional permissions to give the file if it's created\n\n"}],"description":"A synchronous file open; for more information, see\n[open(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/open.2.html).\n\n`flags` can be one of the following:\n\n* `'r'`: Opens the file for reading. An exception occurs if the file does not\nexist.\n\n* `'r+'`: Opens the file for reading and writing. An exception occurs if the\nfile does not exist.\n\n* `'w'`: Opens the file for writing. The file is created (if it does not exist)\nor truncated (if it exists).\n\n* `'w+'`: Opens the file for reading and writing. The file is created (if it\ndoesn't exist) or truncated (if it exists).\n\n* `'a'`: Opens the file for appending. The file is created if it doesn't exist.\n\n* `'a+'`: Opens the file for reading and appending. The file is created if it\ndoesn't exist.\n\n#### Returns\n\nAn open file descriptor.","short_description":"A synchronous file open; for more information, see\n[open(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/open.2.html).\n","line":795,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"openSync","name_prefix":"fs.","path":"fs.openSync","outFile":"fs.html#fs.openSync"},{"id":"fs.read","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor to read from\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start reading at\n\n"},{"name":"length","types":["Number"],"description":"Indicates the number of bytes to read\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where the reading\n\n* should begin\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"bytesRead","description":"Specifies how many bytes were read from `buffer`\n\n","types":["Number"]},{"name":"buffer","description":"The buffer to write to\n\n","types":["Buffer"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor to read from\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start reading at\n\n"},{"name":"length","types":["Number"],"description":"Indicates the number of bytes to read\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where the reading\n\n* should begin\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"bytesRead","types":["Number"],"description":"Specifies how many bytes were read from `buffer`\n\n"},{"name":"buffer","types":["Buffer"],"description":"The rest of the buffer\n\n"}],"description":"Read data from the file specified by `fd` and writes it to `buffer`. If\n`position` is `null`, data will be read from the current file position.","short_description":"Read data from the file specified by `fd` and writes it to `buffer`. If\n`position` is `null`, data will be read from the current file position.","line":960,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"read","name_prefix":"fs.","path":"fs.read","outFile":"fs.html#fs.read"},{"id":"fs.readdir","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the directory\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"files","description":"An array of the names of the files in the directory (excluding\n\n*`'.'` and `'..'`)\n\n","types":["Array"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the directory\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"files","types":["Array"],"description":"An array of the names of the files in the directory (excluding\n\n*`'.'` and `'..'`)\n\n"}],"description":"An asynchronous\n[readdir(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/readdir.3.html).  It reads the contents of a directory.","short_description":"An asynchronous\n[readdir(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/readdir.3.html).  It reads the contents of a directory.","line":658,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"readdir","name_prefix":"fs.","path":"fs.readdir","outFile":"fs.html#fs.readdir"},{"id":"fs.readdirSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the directory\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the directory\n\n"}],"description":"A synchronous\n[readdir(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/readdir.3.html). Returns an array of filenames, excluding `'.'` and `'..'`.","short_description":"A synchronous\n[readdir(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/readdir.3.html). Returns an array of filenames, excluding `'.'` and `'..'`.","line":672,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"readdirSync","name_prefix":"fs.","path":"fs.readdirSync","outFile":"fs.html#fs.readdirSync"},{"id":"fs.readFile","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to read\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding to use\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"data","description":"The contents of the file\n\n","types":["Buffer"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n* completes\n\n"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to read\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n* completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"data","types":["Buffer"],"description":"The contents of the file\n\n"}],"description":"Asynchronously reads the entire contents of a file. If no encoding is specified,\nthen the raw buffer is returned.\n\n#### Example\n\n    fs.readFile('/etc/passwd', function (err, data) {\n      if (err) throw err;\n      console.log(data);\n    });","short_description":"Asynchronously reads the entire contents of a file. If no encoding is specified,\nthen the raw buffer is returned.\n","line":1003,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"readFile","name_prefix":"fs.","path":"fs.readFile","outFile":"fs.html#fs.readFile"},{"id":"fs.readFileSync","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to read\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding to use\n\n"}],"returns":[{"type":"String"},{"type":"Buffer"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to read\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"}],"description":"Synchronous version of [[fs.readFile `fs.readFile()`]]. Returns the contents of\nthe `filename`.\n\n#### Returns\n\nThe contents of the `filename`. If `encoding` is specified, then this function\nreturns a string. Otherwise it returns a [[Buffer buffer]].","short_description":"Synchronous version of [[fs.readFile `fs.readFile()`]]. Returns the contents of\nthe `filename`.\n","line":1022,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"readFileSync","name_prefix":"fs.","path":"fs.readFileSync","outFile":"fs.html#fs.readFileSync"},{"id":"fs.readlink","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The original path of a link\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"linkString","description":"T he symlink's string value\n\n","types":["String"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The original path of a link\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"linkString","types":["String"],"description":"T he symlink's string value\n\n"}],"description":"An asynchronous\n[readlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/readlink.2.html).","short_description":"An asynchronous\n[readlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/readlink.2.html).","line":506,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"readlink","name_prefix":"fs.","path":"fs.readlink","outFile":"fs.html#fs.readlink"},{"id":"fs.readlinkSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The original path of a link\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"path","types":["String"],"description":"The original path of a link\n\n"}],"description":"A synchronous\n[readlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/readlink.2.html).\n\n#### Returns\n\nThe symbolic link's string value.","short_description":"A synchronous\n[readlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/readlink.2.html).\n","line":523,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"readlinkSync","name_prefix":"fs.","path":"fs.readlinkSync","outFile":"fs.html#fs.readlinkSync"},{"id":"fs.ReadStream","type":"class","superclass":"fs","description":"This is a [[stream.ReadableStream `stream.ReadableStream`]], created from the\nfunction [[fs.createReadStream `fs.createReadStream()`]].","short_description":"This is a [[stream.ReadableStream `stream.ReadableStream`]], created from the\nfunction [[fs.createReadStream `fs.createReadStream()`]].","line":1411,"aliases":[],"children":[{"id":"fs.ReadStream@open","type":"event","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `ReadStream`\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `ReadStream`\n\n"}],"description":"Emitted when a file is opened.","short_description":"Emitted when a file is opened.","line":1423,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"open","name_prefix":"fs.ReadStream@","path":"fs.ReadStream.event.open","outFile":"fs.html#fs.ReadStream.event.open"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"ReadStream","name_prefix":"fs.","path":"fs.ReadStream","outFile":"fs.html"},{"id":"fs.readSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor to read from\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start writing at\n\n"},{"name":"length","types":["Number"],"description":"Indicates the number of bytes to read\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where the reading\n\n* should begin\n\n"}],"returns":[{"type":"Number","description":"The number of bytes read.\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor to read from\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start writing at\n\n"},{"name":"length","types":["Number"],"description":"Indicates the number of bytes to read\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where the reading\n\n* should begin\n\n"}],"returns":[{"type":"Number","description":"The number of bytes read.\n\n"}],"description":"The synchronous version of [[fs.read `fs.read()`]]. Reads data from\nthe file specified by `fd` and writes it to `buffer`. If `position` is `null`,\ndata will be read from the current file position.","short_description":"The synchronous version of [[fs.read `fs.read()`]]. Reads data from\nthe file specified by `fd` and writes it to `buffer`. If `position` is `null`,\ndata will be read from the current file position.","line":977,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"readSync","name_prefix":"fs.","path":"fs.readSync","outFile":"fs.html#fs.readSync"},{"id":"fs.realpath","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"A path to a file\n\n"},{"name":"cache","optional":true,"types":["Object"],"description":"A literal of mapped paths that can be used to force a specific path\n\n*resolution or avoid additional `fs.stat` calls for known real paths.\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"resolvedPath","description":"The resolved path string\n\n","types":["String"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"A path to a file\n\n"},{"name":"cache","types":["Object"],"description":"A literal of mapped paths that can be used to force a specific path\n\n*resolution or avoid additional `fs.stat` calls for known real paths.\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"resolvedPath","types":["String"],"description":"The resolved path string\n\n"}],"description":"An asynchronous\n[realpath(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/realpath.3.html).\nYou can use [[process.cwd `process.cwd()`]] to resolve relative paths.","short_description":"An asynchronous\n[realpath(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/realpath.3.html).\nYou can use [[process.cwd `process.cwd()`]] to resolve relative paths.","line":540,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"realpath","name_prefix":"fs.","path":"fs.realpath","outFile":"fs.html#fs.realpath"},{"id":"fs.realpathSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"A path to a file\n\n"}],"returns":[{"type":"String","description":"The resolved path\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"A path to a file\n\n"}],"returns":[{"type":"String","description":"The resolved path\n\n"}],"description":"A synchronous\n[realpath(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/realpath.3.html).","short_description":"A synchronous\n[realpath(3)](http://www.kernel.org/doc/man-pages/online/pages/man3/realpath.3.html).","line":551,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"realpathSync","name_prefix":"fs.","path":"fs.realpathSync","outFile":"fs.html#fs.realpathSync"},{"id":"fs.rename","type":"class method","signatures":[{"arguments":[{"name":"oldPath","types":["String"],"description":"The original filename and path\n\n"},{"name":"newPath","types":["String"],"description":"The new filename and path\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function completes\n\n"}]}],"arguments":[{"name":"oldPath","types":["String"],"description":"The original filename and path\n\n"},{"name":"newPath","types":["String"],"description":"The new filename and path\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[rename(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rename.2.html)\noperation. Turns `oldPath` into `newPath`.","short_description":"An asynchronous\n[rename(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rename.2.html)\noperation. Turns `oldPath` into `newPath`.","line":80,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"rename","name_prefix":"fs.","path":"fs.rename","outFile":"fs.html#fs.rename"},{"id":"fs.renameSync","type":"class method","signatures":[{"arguments":[{"name":"oldPath","types":["String"],"description":"The original filename and path\n\n"},{"name":"newPath","types":["String"],"description":"The new filename and path\n\n"}]}],"arguments":[{"name":"oldPath","types":["String"],"description":"The original filename and path\n\n"},{"name":"newPath","types":["String"],"description":"The new filename and path\n\n"}],"description":"A synchronous\n[rename(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rename.2.html)\noperation. Turns `oldPath` into `newPath`.","short_description":"A synchronous\n[rename(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rename.2.html)\noperation. Turns `oldPath` into `newPath`.","line":93,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"renameSync","name_prefix":"fs.","path":"fs.renameSync","outFile":"fs.html#fs.renameSync"},{"id":"fs.rmdir","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to a directory\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to a directory\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[rmdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rmdir.2.html).","short_description":"An asynchronous\n[rmdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rmdir.2.html).","line":598,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"rmdir","name_prefix":"fs.","path":"fs.rmdir","outFile":"fs.html#fs.rmdir"},{"id":"fs.rmdirSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to a directory\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to a directory\n\n"}],"description":"A synchronous\n[rmdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rmdir.2.html).","short_description":"A synchronous\n[rmdir(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/rmdir.2.html).","line":609,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"rmdirSync","name_prefix":"fs.","path":"fs.rmdirSync","outFile":"fs.html#fs.rmdirSync"},{"id":"fs.stat","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"stats","description":"An [[fs.Stats `fs.Stats`] object.\n\n","types":["fs.Stats"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}],"returns":[{"type":"fs.Stats"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"stats","types":["fs.Stats"],"description":"An [[fs.Stats `fs.Stats`] object.\n\n"}],"description":"An asynchronous\n[stat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","short_description":"An asynchronous\n[stat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","line":353,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"stat","name_prefix":"fs.","path":"fs.stat","outFile":"fs.html#fs.stat"},{"id":"fs.Stats","type":"class","superclass":"fs","description":"Objects returned from [[fs.stat `fs.stat()`]], [[fs.lstat `fs.lstat()`]], and\n[[fs.fstat `fs.fstat()`]] (and their synchronous counterparts) are of this type.\nThe object contains the following methods:\n\nFor a regular file, `util.inspect(fs.Stats)` returns an object similar to [the\nstructure returned by the Unix stat\ncommand](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html):\n\n    { dev: 2114,\n      ino: 48064969,\n      mode: 33188,\n      nlink: 1,\n      uid: 85,\n      gid: 100,\n      rdev: 0,\n      size: 527,\n      blksize: 4096,\n      blocks: 8,\n      atime: Mon, 10 Oct 2011 23:24:11 GMT,\n      mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n      ctime: Mon, 10 Oct 2011 23:24:11 GMT }\n\n\nPlease note that `atime`, `mtime`, and `ctime` are instances of the [[Date]]\nobject, and to compare the values of these objects you should use appropriate\nmethods. For most general uses, `Date.getTime()` returns the number of\nmilliseconds elapsed since _1 January 1970 00:00:00 UTC_, and this integer\nshould be sufficient for any comparison. However, there are additional methods\nwhich can be used for displaying fuzzy information.","short_description":"Objects returned from [[fs.stat `fs.stat()`]], [[fs.lstat `fs.lstat()`]], and\n[[fs.fstat `fs.fstat()`]] (and their synchronous counterparts) are of this type.\nThe object contains the following methods:\n","line":1305,"aliases":[],"children":[{"id":"fs.Stats.isBlockDevice","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [block\ndevice](http://en.wikipedia.org/wiki/Device_file#Block_devices).","short_description":"Indicates if the object is a [block\ndevice](http://en.wikipedia.org/wiki/Device_file#Block_devices).","line":1332,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isBlockDevice","name_prefix":"fs.Stats.","path":"fs.Stats.isBlockDevice","outFile":"fs.html#fs.Stats.isBlockDevice"},{"id":"fs.Stats.isCharacterDevice","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [character\ndevice](http://en.wikipedia.org/wiki/Device_file#Character_devices).","short_description":"Indicates if the object is a [character\ndevice](http://en.wikipedia.org/wiki/Device_file#Character_devices).","line":1341,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isCharacterDevice","name_prefix":"fs.Stats.","path":"fs.Stats.isCharacterDevice","outFile":"fs.html#fs.Stats.isCharacterDevice"},{"id":"fs.Stats.isDirectory","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a directory.","short_description":"Indicates if the object is a directory.","line":1323,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isDirectory","name_prefix":"fs.Stats.","path":"fs.Stats.isDirectory","outFile":"fs.html#fs.Stats.isDirectory"},{"id":"fs.Stats.isFIFO","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [named\npipe](http://en.wikipedia.org/wiki/Named_pipe).","short_description":"Indicates if the object is a [named\npipe](http://en.wikipedia.org/wiki/Named_pipe).","line":1359,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isFIFO","name_prefix":"fs.Stats.","path":"fs.Stats.isFIFO","outFile":"fs.html#fs.Stats.isFIFO"},{"id":"fs.Stats.isFile","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a file.","short_description":"Indicates if the object is a file.","line":1315,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isFile","name_prefix":"fs.Stats.","path":"fs.Stats.isFile","outFile":"fs.html#fs.Stats.isFile"},{"id":"fs.Stats.isSocket","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [socket\nfile](http://en.wikipedia.org/wiki/Unix_file_types#Socket).","short_description":"Indicates if the object is a [socket\nfile](http://en.wikipedia.org/wiki/Unix_file_types#Socket).","line":1369,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isSocket","name_prefix":"fs.Stats.","path":"fs.Stats.isSocket","outFile":"fs.html#fs.Stats.isSocket"},{"id":"fs.Stats.isSymbolicLink","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a symbolic link; this is only valid with `fs.lstat()`\nand `fs.lstatSynch()`.","short_description":"Indicates if the object is a symbolic link; this is only valid with `fs.lstat()`\nand `fs.lstatSynch()`.","line":1350,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isSymbolicLink","name_prefix":"fs.Stats.","path":"fs.Stats.isSymbolicLink","outFile":"fs.html#fs.Stats.isSymbolicLink"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"Stats","name_prefix":"fs.","path":"fs.Stats","outFile":"fs.html"},{"id":"fs.statSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"}],"returns":[{"type":"fs.Stats"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"}],"description":"A synchronous\n[stat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","short_description":"A synchronous\n[stat(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html).","line":401,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"statSync","name_prefix":"fs.","path":"fs.statSync","outFile":"fs.html#fs.statSync"},{"id":"fs.symlink","type":"class method","signatures":[{"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"},{"name":"type","default_value":"file","optional":true,"types":["String"],"description":"This can be either `'dir'`, `'file'`, or `'junction'`.  It is only used on\n\n*Windows (and ignored on other platforms)\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"},{"name":"type","types":["String"],"description":"This can be either `'dir'`, `'file'`, or `'junction'`.  It is only used on\n\n*Windows (and ignored on other platforms)\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[symlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/symlink.2.html).\n\nNote: Windows junction points require the destination path to be absolute.  When using `'junction'`, the `destination` argument will automatically be normalized to an absolute path.","short_description":"An asynchronous\n[symlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/symlink.2.html).\n","line":475,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"symlink","name_prefix":"fs.","path":"fs.symlink","outFile":"fs.html#fs.symlink"},{"id":"fs.symlinkSync","type":"class method","signatures":[{"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"},{"name":"type","default_value":"file","optional":true,"types":["String"],"description":"This can be either `'dir'` or `'file'`.  It is only used on\n\n*Windows (and ignored on other platforms)\n\n"}]}],"arguments":[{"name":"srcpath","types":["String"],"description":"The original path of a file\n\n"},{"name":"dstpath","types":["String"],"description":"The new file link path\n\n"},{"name":"type","types":["String"],"description":"This can be either `'dir'` or `'file'`.  It is only used on\n\n*Windows (and ignored on other platforms)\n\n"}],"description":"A synchronous\n[symlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/symlink.2.html).\n\nNote: Windows junction points require the destination path to be absolute.  When using `'junction'`, the `destination` argument will automatically be normalized to an absolute path.","short_description":"A synchronous\n[symlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/symlink.2.html).\n","line":489,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"symlinkSync","name_prefix":"fs.","path":"fs.symlinkSync","outFile":"fs.html#fs.symlinkSync"},{"id":"fs.truncate","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"len","types":["Number"],"description":"The final file length\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"len","types":["Number"],"description":"The final file length\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[ftruncate(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/truncate.2.html). It truncates a file to the specified length.","short_description":"An asynchronous\n[ftruncate(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/truncate.2.html). It truncates a file to the specified length.","line":110,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"truncate","name_prefix":"fs.","path":"fs.truncate","outFile":"fs.html#fs.truncate"},{"id":"fs.truncateSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"len","types":["Number"],"description":"The final file length \n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"len","types":["Number"],"description":"The final file length \n\n"}],"description":"A synchronous\n[ftruncate(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/truncate.2.html). It truncates a file to the specified length.","short_description":"A synchronous\n[ftruncate(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/truncate.2.html). It truncates a file to the specified length.","line":124,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"truncateSync","name_prefix":"fs.","path":"fs.truncateSync","outFile":"fs.html#fs.truncateSync"},{"id":"fs.unlink","type":"class method","signatures":[{"arguments":[{"name":"srcpath","types":["String"],"description":"The path to a file\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"srcpath","types":["String"],"description":"The path to a file\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"}],"description":"An asynchronous\n[unlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/unlink.2.html)\n.","short_description":"An asynchronous\n[unlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/unlink.2.html)\n.","line":568,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"unlink","name_prefix":"fs.","path":"fs.unlink","outFile":"fs.html#fs.unlink"},{"id":"fs.unlinkSync","type":"class method","signatures":[{"arguments":[{"name":"srcpath","types":["String"],"description":"The path to a file\n\n"}]}],"arguments":[{"name":"srcpath","types":["String"],"description":"The path to a file\n\n"}],"description":"A synchronous\n[unlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/unlink.2.html)\n.","short_description":"A synchronous\n[unlink(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/unlink.2.html)\n.","line":582,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"unlinkSync","name_prefix":"fs.","path":"fs.unlinkSync","outFile":"fs.html#fs.unlinkSync"},{"id":"fs.unwatchFile","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The filename to watch\n\n"},{"name":"listener","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"A listener to remove\n\n"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The filename to watch\n\n"},{"name":"listener","types":["Function"],"description":"A listener to remove\n\n"}],"description":"Stops watching for changes on `filename`.\n\nIf `listener` is specified, only that particular listener is removed.\nOtherwise, *all* listeners are removed and you have effectively stopped\nwatching `filename`.\n\n> Stability: 2 - Unstable.  Use fs.watch instead, if available.","short_description":"Stops watching for changes on `filename`.\n","line":1130,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"unwatchFile","name_prefix":"fs.","path":"fs.unwatchFile","outFile":"fs.html#fs.unwatchFile"},{"id":"fs.utimes","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}],"description":"An asynchronous\n[utime(2)](http://kernel.org/doc/man-pages/online/pages/man2/utime.2.html).\nChanges the timestamps of the file referenced by the supplied path.","short_description":"An asynchronous\n[utime(2)](http://kernel.org/doc/man-pages/online/pages/man2/utime.2.html).\nChanges the timestamps of the file referenced by the supplied path.","line":813,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"utimes","name_prefix":"fs.","path":"fs.utimes","outFile":"fs.html#fs.utimes"},{"id":"fs.utimesSync","type":"class method","signatures":[{"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"}]}],"arguments":[{"name":"path","types":["String"],"description":"The path to the file\n\n"},{"name":"atime","types":["Number"],"description":"The new access time\n\n"},{"name":"mtime","types":["Number"],"description":"The new modification time\n\n"}],"description":"A synchronous\n[utime(2)](http://kernel.org/doc/man-pages/online/pages/man2/utime.2.html).\nChange the timestamps of the file referenced by the supplied path.","short_description":"A synchronous\n[utime(2)](http://kernel.org/doc/man-pages/online/pages/man2/utime.2.html).\nChange the timestamps of the file referenced by the supplied path.","line":829,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"utimesSync","name_prefix":"fs.","path":"fs.utimesSync","outFile":"fs.html#fs.utimesSync"},{"id":"fs.watch","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The filename (or directory) to watch\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"An optional arguments indicating how to watch the files; defaults to `true`\n\n"},{"name":"callback","arguments":[{"name":"event","description":"Either `'rename'` or '`change'`\n\n","types":["String"]},{"name":"filename","description":"The filename (or directory) to watch\n\n","types":["String"]}],"callback":true,"optional":true,"types":["Function"],"description":"The callback to execute each time the file is accessed\n\n"}],"returns":[{"type":"fs.FSWatcher"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The filename (or directory) to watch\n\n"},{"name":"options","types":["Object"],"description":"An optional arguments indicating how to watch the files; defaults to `true`\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute each time the file is accessed\n\n"},{"name":"event","types":["String"],"description":"Either `'rename'` or '`change'`\n\n"},{"name":"filename","types":["String"],"description":"The name of the file which triggered the event\n\n"}],"description":"Watch for changes on `filename`.\n\n> Stability: 2 - Unstable.\n\n`options`, if provided, should be an object containing a boolean member\n`persistent`, which indicates whether the process should continue to run as long\nas files are being watched.\n\nThis feature depends on the underlying operating system providing a way\nto be notified of filesystem changes.\n\n* On Linux systems, this uses `inotify`.\n* On BSD systems (including OS X), this uses `kqueue`.\n* On SunOS systems (including Solaris and SmartOS), this uses `event ports`.\n* On Windows systems, this feature depends on `ReadDirectoryChangesW`.\n\nIf the underlying functionality is not available for some reason, then\n`fs.watch` will not be able to function.  For example, watching files or\ndirectories on network file systems (NFS, SMB, etc.) often doesn't work\nreliably or at all.\n\nYou can still use `fs.watchFile`, which uses stat polling, but it is slower and\nless reliable.\n\n#### Filename Argument\n\nWarning: Providing the `filename` argument in the callback is not supported on\nevery platform (currently it's only supported on Linux and Windows).  Even on\nsupported platforms, `filename` is **not** always guaranteed to be provided.\nTherefore, don't assume that `filename` argument is always provided in the\ncallback, and have some fallback logic if it is `null`, like in the provided\nexample.\n\n#### Example\n\n    fs.watch('somedir', function (event, filename) {\n        console.log('event is: ' + event);\n        if (filename) {\n            console.log('filename provided: ' + filename);\n        } else {\n        console.log('filename not provided');\n        }\n    });","short_description":"Watch for changes on `filename`.\n","line":1185,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"watch","name_prefix":"fs.","path":"fs.watch","outFile":"fs.html#fs.watch"},{"id":"fs.watchFile","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to watch\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Any optional arguments indicating how often to watch\n\n"},{"name":"callback","arguments":[{"name":"curr","description":"The current `stats` object\n\n","types":["fs.Stats"]},{"name":"prev","description":"The previous `stats` object\n\n","types":["fs.Stats"]}],"callback":true,"types":["Function"],"description":"The callback to execute each time the file is accessed\n\n"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to watch\n\n"},{"name":"options","types":["Object"],"description":"Any optional arguments indicating how often to watch\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute each time the file is accessed\n\n"},{"name":"curr","types":["fs.Stats"],"description":"The current `stats` object\n\n"},{"name":"prev","types":["fs.Stats"],"description":"The previous `stats` object\n\n"}],"description":"Watches for changes on `filename`.\n\n> Stability: 2 - Unstable.  Use fs.watch instead, if possible.\n\n`options`, if provided, should be an object containing two boolean members:\n`persistent` and `interval`:\n* `persistent` indicates whether the process should continue to run as long as\nfiles are being watched; defaults to `true`\n* `interval` indicates how often the target should be polled, in milliseconds; defaults to `5007`\n\nOn Linux systems with [inotify](http://en.wikipedia.org/wiki/Inotify),\n`interval` is ignored.\n\n#### Example\n\n    fs.watchFile('message.text', function (curr, prev) {\n      console.log('the current modification time is: ' + curr.mtime);\n      console.log('the previous modification time was: ' + prev.mtime);\n    });","short_description":"Watches for changes on `filename`.\n","line":1113,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"watchFile","name_prefix":"fs.","path":"fs.watchFile","outFile":"fs.html#fs.watchFile"},{"id":"fs.write","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start at\n\n"},{"name":"length","types":["Number"],"description":"Indicates how much of the buffer to use\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where this data\n\n*should be written\n\n"},{"name":"callback","arguments":[{"name":"err","description":"The possible exception\n\n","types":["Error"]},{"name":"written","description":"Specifies how many bytes were written from `buffer`\n\n","types":["Number"]},{"name":"buffer","description":"The buffer to write\n\n","types":["Buffer"]}],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start at\n\n"},{"name":"length","types":["Number"],"description":"Indicates how much of the buffer to use\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where this data\n\n*should be written\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"},{"name":"err","types":["Error"],"description":"The possible exception\n\n"},{"name":"written","types":["Number"],"description":"Specifies how many bytes were written from `buffer`\n\n"},{"name":"buffer","types":["Buffer"],"description":"The remaining contents of the buffer \n\n"}],"description":"Writes `buffer` to the file specified by `fd`. Note that it's unsafe to use\n`fs.write` multiple times on the same file without waiting for the callback. For\nthis scenario, [[fs.createWriteStream `fs.createWriteStream()`]] is strongly\nrecommended.\n\nFor more information, see\n[pwrite(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/pwrite.2.html)\n.","short_description":"Writes `buffer` to the file specified by `fd`. Note that it's unsafe to use\n`fs.write` multiple times on the same file without waiting for the callback. For\nthis scenario, [[fs.createWriteStream `fs.createWriteStream()`]] is strongly\nrecommended.\n","line":922,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"write","name_prefix":"fs.","path":"fs.write","outFile":"fs.html#fs.write"},{"id":"fs.writeFile","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute once the function\n\n*completes\n\n"}],"description":"Asynchronously writes data to a file, replacing the file if it already exists.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/fs/fs.writefile.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Asynchronously writes data to a file, replacing the file if it already exists.\n","line":1041,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"writeFile","name_prefix":"fs.","path":"fs.writeFile","outFile":"fs.html#fs.writeFile"},{"id":"fs.writeFileSync","type":"class method","signatures":[{"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"}]}],"arguments":[{"name":"filename","types":["String"],"description":"The name of the file to write to\n\n"},{"name":"data","types":["String","Buffer"],"description":"The data to write (this can be a string or a buffer)\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use (this is ignored if `data` is a buffer)\n\n"}],"description":"The synchronous version of [[fs.writeFile `fs.writeFile()`]].","short_description":"The synchronous version of [[fs.writeFile `fs.writeFile()`]].","line":1052,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"writeFileSync","name_prefix":"fs.","path":"fs.writeFileSync","outFile":"fs.html#fs.writeFileSync"},{"id":"fs.WriteStream","type":"class","superclass":"fs","description":"This is a [[stream.WritableStream WriteStream]], created from the function\n[[fs.createWriteStream `fs.createWriteStream()`]].","short_description":"This is a [[stream.WritableStream WriteStream]], created from the function\n[[fs.createWriteStream `fs.createWriteStream()`]].","line":1380,"aliases":[],"children":[{"id":"fs.WriteStream.bytesWritten","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of bytes written so far. This doesn't include data that is still\nqueued for writing.","short_description":"The number of bytes written so far. This doesn't include data that is still\nqueued for writing.","line":1400,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"bytesWritten","name_prefix":"fs.WriteStream.","path":"fs.WriteStream.bytesWritten","outFile":"fs.html#fs.WriteStream.bytesWritten"},{"id":"fs.WriteStream@open","type":"event","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `WriteStream`\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `WriteStream`\n\n"}],"description":"Emitted when a file is opened for writing.","short_description":"Emitted when a file is opened for writing.","line":1392,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"open","name_prefix":"fs.WriteStream@","path":"fs.WriteStream.event.open","outFile":"fs.html#fs.WriteStream.event.open"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"WriteStream","name_prefix":"fs.","path":"fs.WriteStream","outFile":"fs.html"},{"id":"fs.writeSync","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start at\n\n"},{"name":"length","types":["Number"],"description":"Indicates how much of the buffer to use\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where this data\n\n* should be written\n\n"}],"returns":[{"type":"Number","description":"Returns the number of bytes written.\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write\n\n"},{"name":"offset","types":["Number"],"description":"Indicates where in the buffer to start at\n\n"},{"name":"length","types":["Number"],"description":"Indicates how much of the buffer to use\n\n"},{"name":"position","types":["Number"],"description":"The offset from the beginning of the file where this data\n\n* should be written\n\n"}],"returns":[{"type":"Number","description":"Returns the number of bytes written.\n\n"}],"description":"A synchronous version of [[fs.write `fs.write()`]].","short_description":"A synchronous version of [[fs.write `fs.write()`]].","line":937,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"writeSync","name_prefix":"fs.","path":"fs.writeSync","outFile":"fs.html#fs.writeSync"},{"id":"fs.Stats","type":"class","superclass":"fs","description":"Objects returned from [[fs.stat `fs.stat()`]], [[fs.lstat `fs.lstat()`]], and\n[[fs.fstat `fs.fstat()`]] (and their synchronous counterparts) are of this type.\nThe object contains the following methods:\n\nFor a regular file, `util.inspect(fs.Stats)` returns an object similar to [the\nstructure returned by the Unix stat\ncommand](http://www.kernel.org/doc/man-pages/online/pages/man2/stat.2.html):\n\n    { dev: 2114,\n      ino: 48064969,\n      mode: 33188,\n      nlink: 1,\n      uid: 85,\n      gid: 100,\n      rdev: 0,\n      size: 527,\n      blksize: 4096,\n      blocks: 8,\n      atime: Mon, 10 Oct 2011 23:24:11 GMT,\n      mtime: Mon, 10 Oct 2011 23:24:11 GMT,\n      ctime: Mon, 10 Oct 2011 23:24:11 GMT }\n\n\nPlease note that `atime`, `mtime`, and `ctime` are instances of the [[Date]]\nobject, and to compare the values of these objects you should use appropriate\nmethods. For most general uses, `Date.getTime()` returns the number of\nmilliseconds elapsed since _1 January 1970 00:00:00 UTC_, and this integer\nshould be sufficient for any comparison. However, there are additional methods\nwhich can be used for displaying fuzzy information.","short_description":"Objects returned from [[fs.stat `fs.stat()`]], [[fs.lstat `fs.lstat()`]], and\n[[fs.fstat `fs.fstat()`]] (and their synchronous counterparts) are of this type.\nThe object contains the following methods:\n","line":1305,"aliases":[],"children":[{"id":"fs.Stats.isBlockDevice","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [block\ndevice](http://en.wikipedia.org/wiki/Device_file#Block_devices).","short_description":"Indicates if the object is a [block\ndevice](http://en.wikipedia.org/wiki/Device_file#Block_devices).","line":1332,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isBlockDevice","name_prefix":"fs.Stats.","path":"fs.Stats.isBlockDevice","outFile":"fs.html#fs.Stats.isBlockDevice"},{"id":"fs.Stats.isCharacterDevice","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [character\ndevice](http://en.wikipedia.org/wiki/Device_file#Character_devices).","short_description":"Indicates if the object is a [character\ndevice](http://en.wikipedia.org/wiki/Device_file#Character_devices).","line":1341,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isCharacterDevice","name_prefix":"fs.Stats.","path":"fs.Stats.isCharacterDevice","outFile":"fs.html#fs.Stats.isCharacterDevice"},{"id":"fs.Stats.isDirectory","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a directory.","short_description":"Indicates if the object is a directory.","line":1323,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isDirectory","name_prefix":"fs.Stats.","path":"fs.Stats.isDirectory","outFile":"fs.html#fs.Stats.isDirectory"},{"id":"fs.Stats.isFIFO","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [named\npipe](http://en.wikipedia.org/wiki/Named_pipe).","short_description":"Indicates if the object is a [named\npipe](http://en.wikipedia.org/wiki/Named_pipe).","line":1359,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isFIFO","name_prefix":"fs.Stats.","path":"fs.Stats.isFIFO","outFile":"fs.html#fs.Stats.isFIFO"},{"id":"fs.Stats.isFile","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a file.","short_description":"Indicates if the object is a file.","line":1315,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isFile","name_prefix":"fs.Stats.","path":"fs.Stats.isFile","outFile":"fs.html#fs.Stats.isFile"},{"id":"fs.Stats.isSocket","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a [socket\nfile](http://en.wikipedia.org/wiki/Unix_file_types#Socket).","short_description":"Indicates if the object is a [socket\nfile](http://en.wikipedia.org/wiki/Unix_file_types#Socket).","line":1369,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isSocket","name_prefix":"fs.Stats.","path":"fs.Stats.isSocket","outFile":"fs.html#fs.Stats.isSocket"},{"id":"fs.Stats.isSymbolicLink","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Boolean"}]}],"description":"Indicates if the object is a symbolic link; this is only valid with `fs.lstat()`\nand `fs.lstatSynch()`.","short_description":"Indicates if the object is a symbolic link; this is only valid with `fs.lstat()`\nand `fs.lstatSynch()`.","line":1350,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"isSymbolicLink","name_prefix":"fs.Stats.","path":"fs.Stats.isSymbolicLink","outFile":"fs.html#fs.Stats.isSymbolicLink"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"Stats","name_prefix":"fs.","path":"fs.Stats","outFile":"fs.html"},{"id":"fs.WriteStream","type":"class","superclass":"fs","description":"This is a [[stream.WritableStream WriteStream]], created from the function\n[[fs.createWriteStream `fs.createWriteStream()`]].","short_description":"This is a [[stream.WritableStream WriteStream]], created from the function\n[[fs.createWriteStream `fs.createWriteStream()`]].","line":1380,"aliases":[],"children":[{"id":"fs.WriteStream.bytesWritten","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of bytes written so far. This doesn't include data that is still\nqueued for writing.","short_description":"The number of bytes written so far. This doesn't include data that is still\nqueued for writing.","line":1400,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"bytesWritten","name_prefix":"fs.WriteStream.","path":"fs.WriteStream.bytesWritten","outFile":"fs.html#fs.WriteStream.bytesWritten"},{"id":"fs.WriteStream@open","type":"event","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `WriteStream`\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `WriteStream`\n\n"}],"description":"Emitted when a file is opened for writing.","short_description":"Emitted when a file is opened for writing.","line":1392,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"open","name_prefix":"fs.WriteStream@","path":"fs.WriteStream.event.open","outFile":"fs.html#fs.WriteStream.event.open"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"WriteStream","name_prefix":"fs.","path":"fs.WriteStream","outFile":"fs.html"},{"id":"fs.ReadStream","type":"class","superclass":"fs","description":"This is a [[stream.ReadableStream `stream.ReadableStream`]], created from the\nfunction [[fs.createReadStream `fs.createReadStream()`]].","short_description":"This is a [[stream.ReadableStream `stream.ReadableStream`]], created from the\nfunction [[fs.createReadStream `fs.createReadStream()`]].","line":1411,"aliases":[],"children":[{"id":"fs.ReadStream@open","type":"event","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `ReadStream`\n\n"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor used by the `ReadStream`\n\n"}],"description":"Emitted when a file is opened.","short_description":"Emitted when a file is opened.","line":1423,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"open","name_prefix":"fs.ReadStream@","path":"fs.ReadStream.event.open","outFile":"fs.html#fs.ReadStream.event.open"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"ReadStream","name_prefix":"fs.","path":"fs.ReadStream","outFile":"fs.html"},{"id":"fs.FSWatcher","type":"class","superclass":"fs","description":"Objects returned from [[fs.watch `fs.watch()`]] are of this type. You can\nmonitor any changes that occur on a watched file by listening for the events in\nthis object.","short_description":"Objects returned from [[fs.watch `fs.watch()`]] are of this type. You can\nmonitor any changes that occur on a watched file by listening for the events in\nthis object.","line":1436,"aliases":[],"children":[{"id":"fs.FSWatcher.close","type":"class method","signatures":[{"arguments":[]}],"description":"Stop watching for changes on the given `FSWatcher`.","short_description":"Stop watching for changes on the given `FSWatcher`.","line":1446,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"close","name_prefix":"fs.FSWatcher.","path":"fs.FSWatcher.close","outFile":"fs.html#fs.FSWatcher.close"},{"id":"fs.FSWatcher@change","type":"event","signatures":[{"arguments":[{"name":"event","types":["String"],"description":"The event that occured, either `'rename'` or '`change'`\n\n"},{"name":"filename","types":["String"],"description":"The name of the file which triggered the event\n\n"}]}],"arguments":[{"name":"event","types":["String"],"description":"The event that occured, either `'rename'` or '`change'`\n\n"},{"name":"filename","types":["String"],"description":"The name of the file which triggered the event\n\n"}],"description":"Emitted when something changes in a watched directory or file. See more details\nin [[fs.watch `fs.watch()`]].","short_description":"Emitted when something changes in a watched directory or file. See more details\nin [[fs.watch `fs.watch()`]].","line":1460,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"change","name_prefix":"fs.FSWatcher@","path":"fs.FSWatcher.event.change","outFile":"fs.html#fs.FSWatcher.event.change"},{"id":"fs.FSWatcher@error","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was caught\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was caught\n\n"}],"description":"Emitted when an error occurs.","short_description":"Emitted when an error occurs.","line":1470,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/fs.markdown","name":"error","name_prefix":"fs.FSWatcher@","path":"fs.FSWatcher.event.error","outFile":"fs.html#fs.FSWatcher.event.error"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":[],"name":"FSWatcher","name_prefix":"fs.","path":"fs.FSWatcher","outFile":"fs.html"}],"file":"0.8.14/nodejs_ref_guide/fs.markdown","subclasses":["fs.Stats","fs.WriteStream","fs.ReadStream","fs.FSWatcher"],"name":"fs","path":"fs","outFile":"fs.html"},{"id":"http","type":"class","description":"\nThe HTTP interfaces in Node.js are designed to support many features of the\nprotocol which have been traditionally difficult to use. In particular, large,\npossibly chunk-encoded, messages. The interface is careful to never buffer\nentire requests or responses—the user is always able to stream data. To use the\nHTTP server and client, add `require('http')` to your code.\n\nHTTP message headers are represented by an object like this:\n\n    { 'content-length': '123',\n      'content-type': 'text/plain',\n      'connection': 'keep-alive',\n      'accept': 'text/plain' }\n\nKeys are lowercased, and values are not modifiable.\n\nIn order to support the full spectrum of possible HTTP applications, Node's HTTP\nAPI is very low-level. It deals with stream handling and message parsing only.\nIt parses a message into headers and body but it does not parse the actual\nheaders or the body.\n\n\nFor more information, read [this article on how to create HTTP\nservers](../nodejs_dev_guide/creating_an_http_server.html).\n\n#### Example: The famous hello world\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.js?&linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"3 - Stable","short_description":"\nThe HTTP interfaces in Node.js are designed to support many features of the\nprotocol which have been traditionally difficult to use. In particular, large,\npossibly chunk-encoded, messages. The interface is careful to never buffer\nentire requests or responses—the user is always able to stream data. To use the\nHTTP server and client, add `require('http')` to your code.\n","line":36,"aliases":[],"children":[{"id":"http.Agent","type":"class","superclass":"http","description":"Starting with Node.js 0.5.3, there's a new implementation of the HTTP\nAgent which is used for pooling sockets used in HTTP client requests.\n\nPreviously, a single agent instance helped pool for a single host+port. The\ncurrent implementation now holds sockets for any number of hosts.\n\nThe current HTTP Agent also defaults client requests to using\n`Connection:keep-alive`. If no pending HTTP requests are waiting on a socket to\nbecome free ,the socket is closed. This means that Node's pool has the benefit\nof keep-alive when under load but still does not require developers to manually\nclose the HTTP clients using keep-alive.\n\nSockets are removed from the agent's pool when the socket emits either a\n`'close'` event or a special `'agentRemove'` event. This means that if you\nintend to keep one HTTP request open for a long time and don't want it to stay\nin the pool you can do something along the lines of:\n\n    http.get(options, function(res) {\n      // Do stuff\n    }).on(\"socket\", function (socket) {\n      socket.emit(\"agentRemove\");\n    });\n\nAlternatively, you could just opt out of pooling entirely using `agent:false`:\n\n\n    http.get({host:'localhost', port:80, path:'/', agent:false}, function (res)\n    {\n      // Do stuff\n    });","short_description":"Starting with Node.js 0.5.3, there's a new implementation of the HTTP\nAgent which is used for pooling sockets used in HTTP client requests.\n","line":250,"aliases":[],"children":[{"id":"http.Agent.maxSockets","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","short_description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","line":261,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"maxSockets","name_prefix":"http.Agent.","path":"http.Agent.maxSockets","outFile":"http.html#http.Agent.maxSockets"},{"id":"http.Agent.sockets","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","short_description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","line":271,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"sockets","name_prefix":"http.Agent.","path":"http.Agent.sockets","outFile":"http.html#http.Agent.sockets"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"Agent","name_prefix":"http.","path":"http.Agent","outFile":"http.html"},{"id":"http.ClientRequest","type":"class","superclass":"http","description":"This object is created internally and returned from [[http.request\n`http.request()`]].  It represents an _in-progress_ request whose header has\nalready been queued.  The header is still mutable using the `setHeader(name,\nvalue)`, `getHeader(name)`, and `removeHeader(name)` methods.  The actual header\nwill be sent along with the first data chunk or when closing the connection.\nThis is both a [[stream.WritableStream `Writable Stream`]] and an\n[[eventemitter `EventEmitter`]].\n\nTo get the response, add a listener for `'response'` to the request object.\n`'response'` will be emitted from the request object when the response headers\nhave been received.  The `'response'` event is executed with one argument which\nis an instance of `http.ClientResponse`.\n\nDuring the `'response'` event, one can add listeners to the response object,\nparticularly to listen for the `'data'` event. Note that the `'response'` event\nis called before any part of the response body is received, so there is no need\nto worry about racing to catch the first part of the body. As long as a listener\nfor `'data'` is added during the `'response'` event, the entire body will be\ncaught.\n\nNote: Node.js does not check whether `Content-Length`and the length of the body which has been transmitted are equal or not.\n\n\nThe request implements the [[stream.WritableStream Writable Stream]] interface.\n\n\n#### Example\n\n    // Good\n    request.on('response', function (response) {\n      response.on('data', function (chunk) {\n        console.log('BODY: ' + chunk);\n      });\n    });\n\n    // Bad - misses all or part of the body\n    request.on('response', function (response) {\n      setTimeout(function () {\n        response.on('data', function (chunk) {\n          console.log('BODY: ' + chunk);\n        });\n      }, 10);\n    });","short_description":"This object is created internally and returned from [[http.request\n`http.request()`]].  It represents an _in-progress_ request whose header has\nalready been queued.  The header is still mutable using the `setHeader(name,\nvalue)`, `getHeader(name)`, and `removeHeader(name)` methods.  The actual header\nwill be sent along with the first data chunk or when closing the connection.\nThis is both a [[stream.WritableStream `Writable Stream`]] and an\n[[eventemitter `EventEmitter`]].\n","line":890,"aliases":[],"children":[{"id":"http.ClientRequest.abort","type":"class method","signatures":[{"arguments":[]}],"description":"Aborts a request, since NOde.js version 0.3.8.","short_description":"Aborts a request, since NOde.js version 0.3.8.","line":1013,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"abort","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.abort","outFile":"http.html#http.ClientRequest.abort"},{"id":"http.ClientRequest.end","type":"class method","signatures":[{"arguments":[{"name":"data","optional":true,"types":["String"],"description":"The data to send at the end\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding to use for the data \n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to send at the end\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use for the data \n\n"}],"description":"Finishes sending the request. If any parts of the body are unsent, it will flush\nthem to the stream. If the request is chunked, this will send the terminating\n`'0\\r\\n\\r\\n'`.\n\nIf `data` is specified, it is equivalent to calling `request.write(data,\nencoding)` followed by `request.end()`.","short_description":"Finishes sending the request. If any parts of the body are unsent, it will flush\nthem to the stream. If the request is chunked, this will send the terminating\n`'0\\r\\n\\r\\n'`.\n","line":1002,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.end","outFile":"http.html#http.ClientRequest.end"},{"id":"http.ClientRequest.setNoDelay","type":"class method","signatures":[{"arguments":[{"name":"noDelay","default_value":true,"optional":true,"types":["Boolean"],"description":"If `true`, then the data is fired off immediately each time\n\n*the socket is written\n\n"}]}],"arguments":[{"name":"noDelay","types":["Boolean"],"description":"If `true`, then the data is fired off immediately each time\n\n*the socket is written\n\n"}],"description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setNoDelay `net.Socket.setNoDelay()`]] is called.","short_description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setNoDelay `net.Socket.setNoDelay()`]] is called.","line":1038,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setNoDelay","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.setNoDelay","outFile":"http.html#http.ClientRequest.setNoDelay"},{"id":"http.ClientRequest.setSocketKeepAlive","type":"class method","signatures":[{"arguments":[{"name":"enable","default_value":false,"optional":true,"types":["Boolean"],"description":"If `true`, then keep-alive funcitonality is set\n\n"},{"name":"initialDelay","optional":true,"types":["Number"],"description":"Sets the initial delay before the first keep-alive probe\n\n*is sent on an idle socket\n\n"}]}],"arguments":[{"name":"enable","types":["Boolean"],"description":"If `true`, then keep-alive funcitonality is set\n\n"},{"name":"initialDelay","types":["Number"],"description":"Sets the initial delay before the first keep-alive probe\n\n*is sent on an idle socket\n\n"}],"description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setKeepAlive `net.Socket.setKeepAlive()`]] is called.","short_description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setKeepAlive `net.Socket.setKeepAlive()`]] is called.","line":1052,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setSocketKeepAlive","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.setSocketKeepAlive","outFile":"http.html#http.ClientRequest.setSocketKeepAlive"},{"id":"http.ClientRequest.setTimeout","type":"class method","signatures":[{"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length, in milliseconds\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional function to execute once the timeout\n\n*completes\n\n"}]}],"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length, in milliseconds\n\n"},{"name":"callback","types":["Function"],"description":"An optional function to execute once the timeout\n\n*completes\n\n"}],"description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setTimeout `net.Socket.setTimeout()`]] is called.","short_description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setTimeout `net.Socket.setTimeout()`]] is called.","line":1026,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setTimeout","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.setTimeout","outFile":"http.html#http.ClientRequest.setTimeout"},{"id":"http.ClientRequest.write","type":"class method","signatures":[{"arguments":[{"name":"chunk","types":["Buffer","String"],"description":"The buffer or string to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding of the chunk (only needed if it's a string)\n\n"}]}],"arguments":[{"name":"chunk","types":["Buffer","String"],"description":"The buffer or string to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding of the chunk (only needed if it's a string)\n\n"}],"description":"Sends a chunk of the body.  By calling this method many times, the user can\nstream a request body to a server—in that case, it's suggested you use the\n`['Transfer-Encoding', 'chunked']` header line when creating the request.","short_description":"Sends a chunk of the body.  By calling this method many times, the user can\nstream a request body to a server—in that case, it's suggested you use the\n`['Transfer-Encoding', 'chunked']` header line when creating the request.","line":985,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"write","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.write","outFile":"http.html#http.ClientRequest.write"},{"id":"http.ClientRequest@connect","type":"event","signatures":[{"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"socket","types":["net.Socket"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"head","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}]}],"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"socket","types":["net.Socket"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"head","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}],"description":"Emitted each time a server responds to a request with a CONNECT method. If this\nevent isn't being listened for, clients receiving a CONNECT method will have\ntheir connections closed.\n\n#### Example: A client server pair that show you how to listen for the `connect` event.\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.clientrequest.connect.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted each time a server responds to a request with a CONNECT method. If this\nevent isn't being listened for, clients receiving a CONNECT method will have\ntheir connections closed.\n","line":941,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connect","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.connect","outFile":"http.html#http.ClientRequest.event.connect"},{"id":"http.ClientRequest@continue","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the server sends a `'100 Continue'` HTTP response, usually because\nthe request contained `'Expect: 100-continue'`. This is an instruction that the\nclient should send the request body.","short_description":"Emitted when the server sends a `'100 Continue'` HTTP response, usually because\nthe request contained `'Expect: 100-continue'`. This is an instruction that the\nclient should send the request body.","line":970,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"continue","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.continue","outFile":"http.html#http.ClientRequest.event.continue"},{"id":"http.ClientRequest@response","type":"event","signatures":[{"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}]}],"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}],"description":"Emitted when a response is received to this request. This event is emitted only\nonce.\n\nOptions include:\n\n- host: a domain name or IP address of the server to issue the request to\n- port: the port of remote server\n- socketPath: Unix Domain Socket (use either `host:port` or `socketPath`)","short_description":"Emitted when a response is received to this request. This event is emitted only\nonce.\n","line":909,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"response","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.response","outFile":"http.html#http.ClientRequest.event.response"},{"id":"http.ClientRequest@socket","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"}],"description":"Emitted after a socket is assigned to this request.","short_description":"Emitted after a socket is assigned to this request.","line":918,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"socket","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.socket","outFile":"http.html#http.ClientRequest.event.socket"},{"id":"http.ClientRequest@upgrade","type":"event","signatures":[{"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"The client's response\n\n"},{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"},{"name":"head","types":["Object"],"description":"The upgrade header\n\n"}]}],"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"The client's response\n\n"},{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"},{"name":"head","types":["Object"],"description":"The upgrade header\n\n"}],"description":"Emitted each time a server responds to a request with an upgrade. If this event\nisn't being listened for, clients receiving an upgrade header will have their\nconnections closed.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.clientrequest.upgrade.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted each time a server responds to a request with an upgrade. If this event\nisn't being listened for, clients receiving an upgrade header will have their\nconnections closed.\n","line":958,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"upgrade","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.upgrade","outFile":"http.html#http.ClientRequest.event.upgrade"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ClientRequest","name_prefix":"http.","path":"http.ClientRequest","outFile":"http.html"},{"id":"http.ClientResponse","type":"class","superclass":"http","description":"This object is created when making a request with [[http.request\n`http.request()`]]. It is passed to the `'response'` event of the request\nobject.\n\nThe response implements the [[stream.ReadableStream `Readable Stream`]]\ninterface.","short_description":"This object is created when making a request with [[http.request\n`http.request()`]]. It is passed to the `'response'` event of the request\nobject.\n","line":1066,"aliases":[],"children":[{"id":"http.ClientResponse.header","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"The response headers object.","short_description":"The response headers object.","line":1133,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"header","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.header","outFile":"http.html#http.ClientResponse.header"},{"id":"http.ClientResponse.httpVersion","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The HTTP version of the connected-to server. Usually either `'1.1'` or `'1.0'`.\n`response.httpVersionMajor` is the first integer and `response.httpVersionMinor`\nis the second.","short_description":"The HTTP version of the connected-to server. Usually either `'1.1'` or `'1.0'`.\n`response.httpVersionMajor` is the first integer and `response.httpVersionMinor`\nis the second.","line":1124,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"httpVersion","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.httpVersion","outFile":"http.html#http.ClientResponse.httpVersion"},{"id":"http.ClientResponse.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses the response from emitting events.  Useful to throttle back a download.","short_description":"Pauses the response from emitting events.  Useful to throttle back a download.","line":1165,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"pause","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.pause","outFile":"http.html#http.ClientResponse.pause"},{"id":"http.ClientResponse.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes a paused response.","short_description":"Resumes a paused response.","line":1172,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"resume","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.resume","outFile":"http.html#http.ClientResponse.resume"},{"id":"http.ClientResponse.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"null","optional":true,"types":["String"],"description":"The encoding to use. Defaults to `null`, which means that\n\n*the `'data'` event will emit a `Buffer` object.\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use. Defaults to `null`, which means that\n\n*the `'data'` event will emit a `Buffer` object.\n\n"}],"description":"Set the encoding for the response body, either `'utf8'`, `'ascii'`, or\n`'base64'`.","short_description":"Set the encoding for the response body, either `'utf8'`, `'ascii'`, or\n`'base64'`.","line":1156,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setEncoding","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.setEncoding","outFile":"http.html#http.ClientResponse.setEncoding"},{"id":"http.ClientResponse.statusCode","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The 3-digit HTTP response status code, like `200`, `404`, e.t.c.","short_description":"The 3-digit HTTP response status code, like `200`, `404`, e.t.c.","line":1112,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"statusCode","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.statusCode","outFile":"http.html#http.ClientResponse.statusCode"},{"id":"http.ClientResponse.trailers","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"The response trailers object. Only populated after the `end` event.","short_description":"The response trailers object. Only populated after the `end` event.","line":1143,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"trailers","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.trailers","outFile":"http.html#http.ClientResponse.trailers"},{"id":"http.ClientResponse@close","type":"event","signatures":[{"arguments":[{"name":"err","types":["Error"],"description":"The error object\n\n"}]}],"arguments":[{"name":"err","types":["Error"],"description":"The error object\n\n"}],"description":"Indicates that the underlaying connection was terminated before the `end` event\nwas emitted.\n\nFor more information, see [[http.ServerRequest]]'s `'close'` event.","short_description":"Indicates that the underlaying connection was terminated before the `end` event\nwas emitted.\n","line":1102,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.ClientResponse@","path":"http.ClientResponse.event.close","outFile":"http.html#http.ClientResponse.event.close"},{"id":"http.ClientResponse@data","type":"event","signatures":[{"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}]}],"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}],"description":"Emitted when a piece of the message body is received.","short_description":"Emitted when a piece of the message body is received.","line":1077,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"data","name_prefix":"http.ClientResponse@","path":"http.ClientResponse.event.data","outFile":"http.html#http.ClientResponse.event.data"},{"id":"http.ClientResponse@end","type":"event","signatures":[{"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}]}],"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}],"description":"Emitted exactly once for each message. After it's emitted, no other events are\nemitted on the response.","short_description":"Emitted exactly once for each message. After it's emitted, no other events are\nemitted on the response.","line":1089,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ClientResponse@","path":"http.ClientResponse.event.end","outFile":"http.html#http.ClientResponse.event.end"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ClientResponse","name_prefix":"http.","path":"http.ClientResponse","outFile":"http.html"},{"id":"http.createClient","type":"class method","signatures":[{"arguments":[{"name":"port","optional":true,"types":["Number"],"description":"The port to listen to\n\n"},{"name":"host","optional":true,"types":["String"],"description":"The hostname to listen to\n\n\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"host","types":["String"],"description":"The hostname to listen to\n\n\n\n"}],"deprecated":true,"description":"This function is **deprecated**; please use\n[[http.request http.request()]] instead.\n\nConstructs a new HTTP client. `port` and `host` refer to the server to be\nconnected to.","short_description":"This function is **deprecated**; please use\n[[http.request http.request()]] instead.\n","line":91,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"createClient","name_prefix":"http.","path":"http.createClient","outFile":"http.html#http.createClient"},{"id":"http.createServer","type":"class method","signatures":[{"arguments":[{"name":"callback","arguments":[{"name":"request","description":"Any options you want to pass to the server\n\n","types":["http.ClientRequest"]},{"name":"response","description":"An optional listener\n\n","types":["http.ClientResponse"]}],"callback":true,"types":["Function"],"description":"A callback that is automatically added to the `'request'` event\n\n"}],"returns":[{"type":"http.Server"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"A callback that is automatically added to the `'request'` event\n\n"},{"name":"request","types":["http.ClientRequest"],"description":"Any options you want to pass to the server\n\n"},{"name":"response","types":["http.ClientResponse"],"description":"An optional listener\n\n"}],"description":"Returns a new web server object.","short_description":"Returns a new web server object.","line":77,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"createServer","name_prefix":"http.","path":"http.createServer","outFile":"http.html#http.createServer"},{"id":"http.get","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Options to pass to the request\n\n"},{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The callback to execute once the method finishes \n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Options to pass to the request\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute once the method finishes \n\n"}],"description":"Since most requests are GET requests without bodies, Node.js provides this\nconvenience method. The only difference between this method and [[http.request\n`http.request()`]] is that it sets the method to GET and calls `req.end()`\nautomatically.\n\n#### Example\n\n    http.get(\"http://www.google.com/index.html\", function(res) {\n      console.log(\"Got response: \" + res.statusCode);\n    }).on('error', function(e) {\n      console.log(\"Got error: \" + e.message);\n    });","short_description":"Since most requests are GET requests without bodies, Node.js provides this\nconvenience method. The only difference between this method and [[http.request\n`http.request()`]] is that it sets the method to GET and calls `req.end()`\nautomatically.\n","line":57,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"get","name_prefix":"http.","path":"http.get","outFile":"http.html#http.get"},{"id":"http.globalAgent","type":"class property","signatures":[{"returns":[{"type":"http.Agent"}]}],"description":"This is the global instance of [[http.Agent `http.Agent`]] which is used as the\ndefault for all HTTP client requests.","short_description":"This is the global instance of [[http.Agent `http.Agent`]] which is used as the\ndefault for all HTTP client requests.","line":102,"aliases":[],"children":[{"id":"http.globalAgent.requests","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"An object which contains queues of requests that have not yet been assigned to\nsockets. **Don't modify this!**","short_description":"An object which contains queues of requests that have not yet been assigned to\nsockets. **Don't modify this!**","line":113,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"requests","name_prefix":"http.globalAgent.","path":"http.globalAgent.requests","outFile":"http.html#http.globalAgent.requests"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"globalAgent","name_prefix":"http.","path":"http.globalAgent","outFile":"http.html#http.globalAgent"},{"id":"http.request","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object","String"],"description":"Options to pass to the request; is a string, it's\n\n*parsed with [[url.parse `url.parse()`]]\n\n"},{"name":"callback","arguments":[{"name":"response","description":"The server's response, including headers and\n\n*status code\n\n","types":["http.ClientRequest"]}],"callback":true,"types":["Function"],"description":"The callback to execute once the method finishes\n\n"}],"returns":[{"type":"http.ClientRequest"}]}],"arguments":[{"name":"options","types":["Object","String"],"description":"Options to pass to the request; is a string, it's\n\n*parsed with [[url.parse `url.parse()`]]\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute once the method finishes\n\n"},{"name":"response","types":["http.ClientRequest"],"description":"The server's response, including headers and\n\n*status code\n\n"}],"description":"Node.js maintains several connections per server to make HTTP requests. This\nfunction allows one to transparently issue requests.\n\nThe `options` align with the return value of [[url.parse `url.parse()`]]:\n\n- `host`: a domain name or IP address of the server to issue the request to.\nDefaults to `'localhost'`.\n- `hostname`: To support `url.parse()`, `hostname` is preferred over `host`\n- `port`: the port of the remote server. Defaults to `80`.\n- `localAddress`: local interface to bind for network connections.\n- `socketPath`: the Unix Domain Socket (in other words, use either `host:port`\nor `socketPath`)\n- `method`: a string specifying the HTTP request method. Defaults to `'GET'`.\n- `path`: the request path. Defaults to `'/'`. This should include a query\nstring (if any) For example, `'/index.html?page=12'`\n- `headers`: an object containing request headers\n- `auth`: used for basic authentication. For example, `'user:password'` computes\nan Authorization header.\n- `agent`: this controls [[http.Agent `http.Agent`]] behavior. When an Agent is\nused, the request defaults to `Connection: keep-alive`. The possible values are:\n -- `undefined`: uses [[http.globalAgent the global agent]] for this host\n   and port (default).\n -- `Agent` object: explicitly use the passed in `Agent`\n -- `false`: opt out of connection pooling with an `Agent`, and default the\nrequest to `Connection: close`.\n\nThere are a few special headers that should be noted.\n\n* Sending a `'Connection: keep-alive'` notifies Node.js that the connection to\nthe server should be persisted until the next request.\n\n* Sending a `'Content-length'` header disables the default chunked encoding.\n\n* Sending an 'Expect' header immediately sends the request headers.\n  Usually, when sending `'Expect: 100-continue'`, you should both set a timeout\n  and listen for the `continue` event. For more information, see [RFC2616\nSection 8.2.3](http://tools.ietf.org/html/rfc2616#section-8.2.3).\n\n* Sending an Authorization header overrides using the `auth` option to compute\nbasic authentication.\n\n#### Example\n\n    var options = {\n      host: 'www.google.com',\n      port: 80,\n      path: '/upload',\n      method: 'POST'\n    };\n\n    var req = http.request(options, function(res) {\n      console.log('STATUS: ' + res.statusCode);\n      console.log('HEADERS: ' + JSON.stringify(res.headers));\n      res.setEncoding('utf8');\n      res.on('data', function (chunk) {\n        console.log('BODY: ' + chunk);\n      });\n    });\n\n    req.on('error', function(e) {\n      console.log('problem with request: ' + e.message);\n    });\n\n    // write data to request body\n    req.write('data\\n');\n    req.write('data\\n');\n    req.end();\n\nNote that in the example, `req.end()` was called. With `http.request()` one must\nalways call `req.end()` to signify that you're done with the request—even if\nthere is no data being written to the request body.\n\n#### Returns\n\nAn instance of the `http.ClientRequest` class. The `ClientRequest` instance is a\nwritable stream. If one needs to upload a file with a POST request, then write\nit to the `ClientRequest` object.\n\nIf any error is encountered during the request (be that with DNS resolution, TCP\nlevel errors, or actual HTTP parse errors) an `'error'` event is emitted on the\nreturned request object.","short_description":"Node.js maintains several connections per server to make HTTP requests. This\nfunction allows one to transparently issue requests.\n","line":209,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"request","name_prefix":"http.","path":"http.request","outFile":"http.html#http.request"},{"id":"http.Server","type":"class","superclass":"http","description":"A representation of the server within the `http` module. To create an HTTP\nserver, you'll need to first call [[http.createServer `http.createServer()`]],\nwith something like this:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nThis object is also an [[eventemitter `eventemitter`]].\n\nFor more information, read [this article on how to create HTTP\nservers](../nodejs_dev_guide/creating_an_http_server.html).","short_description":"A representation of the server within the `http` module. To create an HTTP\nserver, you'll need to first call [[http.createServer `http.createServer()`]],\nwith something like this:\n","line":288,"aliases":[],"children":[{"id":"http.Server.close","type":"class method","signatures":[{"arguments":[{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"A function to call once the server closes\n\n\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"A function to call once the server closes\n\n\n\n"}],"related_to":"net.Server.close","description":"Stops the server from accepting new connections.","short_description":"Stops the server from accepting new connections.","line":437,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.Server.","path":"http.Server.close","outFile":"http.html#http.Server.close"},{"id":"http.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","optional":true,"types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","default_value":511,"optional":true,"types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}],"description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n\n**If using the `backlog` signature**: `backlog` is the maximum length of the queue of pending connections.\nThe actual length will be determined by your OS through sysctl settings such as\n`tcp_max_syn_backlog` and `somaxconn` on linux. The default value of this\nparameter is 511 (not 512).\n\n**If using the `handle` signature: `handle` can be set to either a server or socket (anything\nwith an underlying `_handle` member), or a `{fd: <n>}` object. It is presumed\nthat the file descriptor or handle has already been bound to a port or domain\nsocket. Listening on a file descriptor is not supported on Windows.\n\nThis function is asynchronous. The `callback()` is added as a listener for the\n[[net.Server@listening `'listening'`]] event of `net.Server`.","short_description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n","line":428,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"listen","name_prefix":"http.Server.","path":"http.Server.listen","outFile":"http.html#http.Server.listen"},{"id":"http.Server.maxHeadersCount","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Limits the maximum incoming headers count. The default is 1000. If set to\n0, then no limit is applied.","short_description":"Limits the maximum incoming headers count. The default is 1000. If set to\n0, then no limit is applied.","line":445,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"maxHeadersCount","name_prefix":"http.Server.","path":"http.Server.maxHeadersCount","outFile":"http.html#http.Server.maxHeadersCount"},{"id":"http.Server@checkContinue","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}],"description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n\nHandling this event involves calling `response.writeContinue` if the client\nshould continue to send the request body, or generating an appropriate HTTP\nresponse (_e.g._ `400 Bad Request`) if the client should not continue to send\nthe request body.\n\nNote: When this event is emitted and handled, the `request` event is not emitted.","short_description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n","line":341,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"checkContinue","name_prefix":"http.Server@","path":"http.Server.event.checkContinue","outFile":"http.html#http.Server.event.checkContinue"},{"id":"http.Server@clientError","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}],"description":"If a client connection emits an `'error'` event, it's forwarded here.","short_description":"If a client connection emits an `'error'` event, it's forwarded here.","line":394,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"clientError","name_prefix":"http.Server@","path":"http.Server.event.clientError","outFile":"http.html#http.Server.event.clientError"},{"id":"http.Server@close","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when the server closes.","short_description":"Emitted when the server closes.","line":322,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.Server@","path":"http.Server.event.close","outFile":"http.html#http.Server.event.close"},{"id":"http.Server@connect","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`, that\n\n*are the arguments for the http request\n\n"},{"name":"socket","types":["net.Socket"],"description":"The network socket between the server and client.\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the tunneling stream; this may be empty.\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`, that\n\n*are the arguments for the http request\n\n"},{"name":"socket","types":["net.Socket"],"description":"The network socket between the server and client.\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the tunneling stream; this may be empty.\n\n"}],"description":"This event is emitted each time a client requests a http CONNECT method. If this\nevent isn't\nlistened for, then clients requesting a CONNECT method will have their\nconnections closed.\n\n* `request` is , as it is in the request\n  event.\n* `socket` is t\n* `head` is an instance of Buffer,\n\nAfter this event is emitted, the request's socket will not have a `data`\nevent listener, meaning you will need to bind to it in order to handle data\nsent to the server on that socket.","short_description":"This event is emitted each time a client requests a http CONNECT method. If this\nevent isn't\nlistened for, then clients requesting a CONNECT method will have their\nconnections closed.\n","line":365,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connect","name_prefix":"http.Server@","path":"http.Server.event.connect","outFile":"http.html#http.Server.event.connect"},{"id":"http.Server@connection","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","short_description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","line":312,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connection","name_prefix":"http.Server@","path":"http.Server.event.connection","outFile":"http.html#http.Server.event.connection"},{"id":"http.Server@request","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}],"description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","short_description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","line":299,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"request","name_prefix":"http.Server@","path":"http.Server.event.request","outFile":"http.html#http.Server.event.request"},{"id":"http.Server@upgrade","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}],"description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n\nAfter this event is emitted, the request's socket won't have a `data` event\nlistener, meaning you will need to bind to it in order to handle data sent to\nthe server on that socket.","short_description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n","line":384,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"upgrade","name_prefix":"http.Server@","path":"http.Server.event.upgrade","outFile":"http.html#http.Server.event.upgrade"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"Server","name_prefix":"http.","path":"http.Server","outFile":"http.html"},{"id":"http.ServerRequest","type":"class","superclass":"http","description":"This object is created internally by an HTTP server—not by the user—and passed\nas the first argument to a `'request'` listener.\n\nThe request implements the [[stream.ReadableStream Readable Stream]] interface;\nit is also an [[eventemitter `eventemitter`]] with the following events:","short_description":"This object is created internally by an HTTP server—not by the user—and passed\nas the first argument to a `'request'` listener.\n","line":458,"aliases":[],"children":[{"id":"http.ServerRequest.connection","type":"class property","signatures":[{"returns":[{"type":"net.Socket"}]}],"description":"The `net.Socket` object associated with the connection.\n\nWith HTTPS support, use `request.connection.verifyPeer()` and\n`request.connection.getPeerCertificate()` to obtain the client's authentication\ndetails.","short_description":"The `net.Socket` object associated with the connection.\n","line":628,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connection","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.connection","outFile":"http.html#http.ServerRequest.connection"},{"id":"http.ServerRequest.headers","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"readonly":true,"description":"Returns a mapping  of header names and values. Header names are lower-cased.\n\n#### Example\n\n    // Prints something like:\n    //\n    // { 'user-agent': 'curl/7.22.0',\n    //   host: '127.0.0.1:8000',\n    //   accept: '*/*' }\n    console.log(request.headers);","short_description":"Returns a mapping  of header names and values. Header names are lower-cased.\n","line":557,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"headers","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.headers","outFile":"http.html#http.ServerRequest.headers"},{"id":"http.ServerRequest.httpVersion","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"readonly":true,"description":"The HTTP protocol version as a string; for example: `'1.1'`, `'1.0'`.\n`request.httpVersionMajor` is the first integer and `request.httpVersionMinor`\nis the second.","short_description":"The HTTP protocol version as a string; for example: `'1.1'`, `'1.0'`.\n`request.httpVersionMajor` is the first integer and `request.httpVersionMinor`\nis the second.","line":580,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"httpVersion","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.httpVersion","outFile":"http.html#http.ServerRequest.httpVersion"},{"id":"http.ServerRequest.method","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The request method as a string, like `'GET'` or `'DELETE'`.","short_description":"The request method as a string, like `'GET'` or `'DELETE'`.","line":508,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"method","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.method","outFile":"http.html#http.ServerRequest.method"},{"id":"http.ServerRequest.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses request from emitting events.  Useful to throttle back an upload.","short_description":"Pauses request from emitting events.  Useful to throttle back an upload.","line":603,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"pause","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.pause","outFile":"http.html#http.ServerRequest.pause"},{"id":"http.ServerRequest.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes a paused request.","short_description":"Resumes a paused request.","line":613,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"resume","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.resume","outFile":"http.html#http.ServerRequest.resume"},{"id":"http.ServerRequest.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"null","optional":true,"types":["String"],"description":"The encoding to use, either `'utf8'` or `'binary'`\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use, either `'utf8'` or `'binary'`\n\n"}],"description":"Set the encoding for the request body. Defaults to `null`, which means that the\n`'data'` event emits a `Buffer` object.\n\n\nFor more information, see\n[[stream.ReadableStream.setEncoding `stream.ReadableStream.setEncoding()`]].","short_description":"Set the encoding for the request body. Defaults to `null`, which means that the\n`'data'` event emits a `Buffer` object.\n","line":594,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setEncoding","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.setEncoding","outFile":"http.html#http.ServerRequest.setEncoding"},{"id":"http.ServerRequest.trailers","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"Contains the HTTP trailers (if present). Only populated after the `'end'` event.","short_description":"Contains the HTTP trailers (if present). Only populated after the `'end'` event.","line":566,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"trailers","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.trailers","outFile":"http.html#http.ServerRequest.trailers"},{"id":"http.ServerRequest.url","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"Request URL string. This contains only the URL that is present in the actual\nHTTP request. Fo example, if the request is:\n\n    GET /status?name=ryan HTTP/1.1\\r\\n\n    Accept: text/plain\\r\\n\n    \\r\\n\n\nThen `request.url` becomes:\n\n    '/status?name=ryan'\n\n#### Example\n\nIf you would like to parse the URL into its parts, you can use\n`require('url').parse(request.url)`. For example:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.serverrequest_1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nIf you would like to extract the params from the query string, you can use\n[[querystring.parse `require('querystring').parse()`]], or pass `true` as the\nsecond argument to `require('url').parse`.  For example:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.serverrequest_2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Request URL string. This contains only the URL that is present in the actual\nHTTP request. Fo example, if the request is:\n","line":538,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"url","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.url","outFile":"http.html#http.ServerRequest.url"},{"id":"http.ServerRequest@close","type":"event","signatures":[{"arguments":[]}],"description":"Indicates that the underlaying connection was terminated before `response.end()`\nwas called or able to flush.\n\nJust like `'end'`, this event occurs only once per request, and no more `'data'`\nevents will fire afterwards.\n\nNote: `'close'` can fire after `'end'`, but not vice versa.\n\n\nread-only","short_description":"Indicates that the underlaying connection was terminated before `response.end()`\nwas called or able to flush.\n","line":497,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.ServerRequest@","path":"http.ServerRequest.event.close","outFile":"http.html#http.ServerRequest.event.close"},{"id":"http.ServerRequest@data","type":"event","signatures":[{"arguments":[{"name":"chunk","types":["String"],"description":"The data that's received (as a string)\n\n"}]}],"arguments":[{"name":"chunk","types":["String"],"description":"The data that's received (as a string)\n\n"}],"description":"Emitted when a piece of the message body is received. The chunk is a string if\nan encoding has been set with [[http.ServerRequest.setEncoding\n`request.setEncoding()`]], otherwise it's a [[Buffer]].\n\nNote that the **data will be lost** if there is no listener when a\n`ServerRequest` emits a `'data'` event.","short_description":"Emitted when a piece of the message body is received. The chunk is a string if\nan encoding has been set with [[http.ServerRequest.setEncoding\n`request.setEncoding()`]], otherwise it's a [[Buffer]].\n","line":472,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"data","name_prefix":"http.ServerRequest@","path":"http.ServerRequest.event.data","outFile":"http.html#http.ServerRequest.event.data"},{"id":"http.ServerRequest@end","type":"event","signatures":[{"arguments":[]}],"description":"Emitted exactly once for each request. After that, no more `'data'` events are\nemitted on the request.","short_description":"Emitted exactly once for each request. After that, no more `'data'` events are\nemitted on the request.","line":482,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ServerRequest@","path":"http.ServerRequest.event.end","outFile":"http.html#http.ServerRequest.event.end"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ServerRequest","name_prefix":"http.","path":"http.ServerRequest","outFile":"http.html"},{"id":"http.ServerResponse","type":"class","superclass":"http","description":"This object is created internally by a HTTP server—not by the user. It is passed\nas the second parameter to the `'request'` event. It is a\n[[stream.WritableStream `Writable Stream`]].","short_description":"This object is created internally by a HTTP server—not by the user. It is passed\nas the second parameter to the `'request'` event. It is a\n[[stream.WritableStream `Writable Stream`]].","line":640,"aliases":[],"children":[{"id":"http.ServerResponse.addTrailers","type":"class method","signatures":[{"arguments":[{"name":"headers","types":["String"],"description":"The trailing header to add\n\n"}]}],"arguments":[{"name":"headers","types":["String"],"description":"The trailing header to add\n\n"}],"description":"This method adds HTTP trailing headers (a header, but at the end of the message)\nto the response.\n\nTrailers are only emitted if chunked encoding is used for the response; if it is\nnot (_e.g._ if the request was `'HTTP/1.0'`), they are silently discarded.\n\n#### Example\n\nHTTP requires the `Trailer` header to be sent if you intend to emit trailers,\nwith a list of the header fields in its value. For example:\n\n    response.writeHead(200, { 'Content-Type': 'text/plain',\n                              'Trailer': 'Content-MD5' });\n    response.write(fileData);\n    response.addTrailers({'Content-MD5': \"7895bf4b8828b55ceaf47747b4bca667\"});\n    response.end();","short_description":"This method adds HTTP trailing headers (a header, but at the end of the message)\nto the response.\n","line":821,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"addTrailers","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.addTrailers","outFile":"http.html#http.ServerResponse.addTrailers"},{"id":"http.ServerResponse.end","type":"class method","signatures":[{"arguments":[{"name":"data","optional":true,"types":["String"],"description":"Some data to write before finishing\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding for the data\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"Some data to write before finishing\n\n"},{"name":"encoding","types":["String"],"description":"The encoding for the data\n\n"}],"description":"This method signals to the server that all of the response headers and body have\nbeen sent; that server should consider this message complete. `response.end()`\n**must** be called on each response.\n\nIf `data` is specified, it is equivalent to calling `response.write(data,\nencoding)` followed by `response.end()`.","short_description":"This method signals to the server that all of the response headers and body have\nbeen sent; that server should consider this message complete. `response.end()`\n**must** be called on each response.\n","line":840,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.end","outFile":"http.html#http.ServerResponse.end"},{"id":"http.ServerResponse.getHeader","type":"class method","signatures":[{"arguments":[{"name":"name","types":["String"],"description":"The name of the header to retrieve\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"name","types":["String"],"description":"The name of the header to retrieve\n\n"}],"description":"Reads out a header that's already been queued but not sent to the client.  Note\nthat the name is case-insensitive.  This can only be called before headers get\nimplicitly flushed.\n\n#### Example\n\n    var stringContentType = response.getHeader('content-type');","short_description":"Reads out a header that's already been queued but not sent to the client.  Note\nthat the name is case-insensitive.  This can only be called before headers get\nimplicitly flushed.\n","line":752,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"getHeader","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.getHeader","outFile":"http.html#http.ServerResponse.getHeader"},{"id":"http.ServerResponse.removeHeader","type":"class method","signatures":[{"arguments":[{"name":"name","types":["String"],"description":"The header to remove\n\n"}]}],"arguments":[{"name":"name","types":["String"],"description":"The header to remove\n\n"}],"description":"Removes a header that's queued for implicit sending.\n\n#### Example\n\n    response.removeHeader(\"Content-Encoding\");","short_description":"Removes a header that's queued for implicit sending.\n","line":767,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"removeHeader","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.removeHeader","outFile":"http.html#http.ServerResponse.removeHeader"},{"id":"http.ServerResponse.sendDate","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"When `true`, the Date header is automatically generated and sent in\nthe response if it is not already present in the headers. The default is `true`.\n\nThis should only be disabled for testing; HTTP requires the Date header\nin responses.","short_description":"When `true`, the Date header is automatically generated and sent in\nthe response if it is not already present in the headers. The default is `true`.\n","line":735,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"sendDate","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.sendDate","outFile":"http.html#http.ServerResponse.sendDate"},{"id":"http.ServerResponse.setHeader","type":"class method","signatures":[{"arguments":[{"name":"name","types":["String"],"description":"The name of the header to set\n\n"},{"name":"value","types":["String"],"description":"The value to set\n\n"}]}],"arguments":[{"name":"name","types":["String"],"description":"The name of the header to set\n\n"},{"name":"value","types":["String"],"description":"The value to set\n\n"}],"description":"Sets a single header value for implicit headers. If this header already exists\nin the to-be-sent headers, its value is replaced.  Use an array of strings here\nif you need to send multiple headers with the same name.\n\n#### Examples\n\n    response.setHeader(\"Content-Type\", \"text/html\");\n\n    response.setHeader(\"Set-Cookie\", [\"type=ninja\", \"language=javascript\"]);","short_description":"Sets a single header value for implicit headers. If this header already exists\nin the to-be-sent headers, its value is replaced.  Use an array of strings here\nif you need to send multiple headers with the same name.\n","line":723,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setHeader","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.setHeader","outFile":"http.html#http.ServerResponse.setHeader"},{"id":"http.ServerResponse.statusCode","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"When using implicit headers (not calling `response.writeHead()` explicitly),\nthis property controls the status code that are sent to the client when the\nheaders get flushed; for example: `response.statusCode = 404;`.\n\nAfter the response header is sent to the client, this property indicates the\nstatus code which was sent out.","short_description":"When using implicit headers (not calling `response.writeHead()` explicitly),\nthis property controls the status code that are sent to the client when the\nheaders get flushed; for example: `response.statusCode = 404;`.\n","line":705,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"statusCode","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.statusCode","outFile":"http.html#http.ServerResponse.statusCode"},{"id":"http.ServerResponse.write","type":"class method","signatures":[{"arguments":[{"name":"chunk","types":["String","Buffer"],"description":"A string or buffer to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use (if `chunk` is a string)\n\n"}],"returns":[{"type":"Boolean","description":"Returns `true` if the entire data was flushed successfully to the \n\n*kernel buffer. Returns `false` if all or part of the data was queued in \n\n*user memory. `'drain'` is emitted when the buffer is again free.\n\n"}]}],"arguments":[{"name":"chunk","types":["String","Buffer"],"description":"A string or buffer to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use (if `chunk` is a string)\n\n"}],"returns":[{"type":"Boolean","description":"Returns `true` if the entire data was flushed successfully to the \n\n*kernel buffer. Returns `false` if all or part of the data was queued in \n\n*user memory. `'drain'` is emitted when the buffer is again free.\n\n"}],"description":"If this method is called and `response.writeHead()` has not been called, it'll\nswitch to implicit header mode and flush the implicit headers.\n\nThis sends a chunk of the response body. This method may be called multiple\ntimes to provide successive parts of the body.\n\nNote: This is the raw HTTP body and has nothing to do with higher-level multi-part body encodings that may be used.\n\nThe first time `response.write()` is called, it sends the buffered header\ninformation and the first body to the client. The second time `response.write()`\nis called, Node.js assumes you're going to be streaming data, and sends that\nseparately. That is, the response is buffered up to the first chunk of body.","short_description":"If this method is called and `response.writeHead()` has not been called, it'll\nswitch to implicit header mode and flush the implicit headers.\n","line":794,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"write","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.write","outFile":"http.html#http.ServerResponse.write"},{"id":"http.ServerResponse.writeContinue","type":"class method","signatures":[{"arguments":[]}],"description":"Sends an `HTTP/1.1 100 Continue` message to the client, indicating that the\nrequest body should be sent. For more information, see the\n[[http.Server@checkContinue `http.Server`'s `'checkContinue'`]] event.","short_description":"Sends an `HTTP/1.1 100 Continue` message to the client, indicating that the\nrequest body should be sent. For more information, see the\n[[http.Server@checkContinue `http.Server`'s `'checkContinue'`]] event.","line":663,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"writeContinue","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.writeContinue","outFile":"http.html#http.ServerResponse.writeContinue"},{"id":"http.ServerResponse.writeHead","type":"class method","signatures":[{"arguments":[{"name":"statusCode","types":["Number"],"description":"The 3-digit HTTP status code, like `404`\n\n"},{"name":"reasonPhrase","optional":true,"types":["String"],"description":"A human-readable string describing the status\n\n"},{"name":"headers","optional":true,"types":["Object"],"description":"Any response headers\n\n"}]}],"arguments":[{"name":"statusCode","types":["Number"],"description":"The 3-digit HTTP status code, like `404`\n\n"},{"name":"reasonPhrase","types":["String"],"description":"A human-readable string describing the status\n\n"},{"name":"headers","types":["Object"],"description":"Any response headers\n\n"}],"description":"Sends a response header to the request.\n\nThis method must only be called once on a message and it must be called before\n`response.end()` is called.\n\nIf you call `response.write()` or `response.end()` before calling this, the\nimplicit/mutable headers will be calculated and call this function for you.\n\n#### Example\n\n    var body = 'hello world';\n    response.writeHead(200, {\n      'Content-Length': body.length,\n      'Content-Type': 'text/plain' });\n\nNote: `Content-Length` is given in bytes, not characters. The above example works because the string `'hello world'` contains only single byte characters. If the body contains higher coded characters then `Buffer.byteLength()` should be used to determine the number of bytes in a given encoding. Node.js does not check whether `Content-Length` and the length of the body which has been transmitted are equal or not.","short_description":"Sends a response header to the request.\n","line":689,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"writeHead","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.writeHead","outFile":"http.html#http.ServerResponse.writeHead"},{"id":"http.ServerResponse@close","type":"event","signatures":[{"arguments":[]}],"description":"If emitted, it it indicates that the underlaying connection was terminated\nbefore `response.end()` was called or able to flush.","short_description":"If emitted, it it indicates that the underlaying connection was terminated\nbefore `response.end()` was called or able to flush.","line":651,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.ServerResponse@","path":"http.ServerResponse.event.close","outFile":"http.html#http.ServerResponse.event.close"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ServerResponse","name_prefix":"http.","path":"http.ServerResponse","outFile":"http.html"},{"id":"http.STATUS_CODES","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"A collection of all the standard HTTP response status codes, and the\nshort description of each.  For example, `http.STATUS_CODES[404] === 'Not\nFound'`.","short_description":"A collection of all the standard HTTP response status codes, and the\nshort description of each.  For example, `http.STATUS_CODES[404] === 'Not\nFound'`.","line":67,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"STATUS_CODES","name_prefix":"http.","path":"http.STATUS_CODES","outFile":"http.html#http.STATUS_CODES"},{"id":"http.Agent","type":"class","superclass":"http","description":"Starting with Node.js 0.5.3, there's a new implementation of the HTTP\nAgent which is used for pooling sockets used in HTTP client requests.\n\nPreviously, a single agent instance helped pool for a single host+port. The\ncurrent implementation now holds sockets for any number of hosts.\n\nThe current HTTP Agent also defaults client requests to using\n`Connection:keep-alive`. If no pending HTTP requests are waiting on a socket to\nbecome free ,the socket is closed. This means that Node's pool has the benefit\nof keep-alive when under load but still does not require developers to manually\nclose the HTTP clients using keep-alive.\n\nSockets are removed from the agent's pool when the socket emits either a\n`'close'` event or a special `'agentRemove'` event. This means that if you\nintend to keep one HTTP request open for a long time and don't want it to stay\nin the pool you can do something along the lines of:\n\n    http.get(options, function(res) {\n      // Do stuff\n    }).on(\"socket\", function (socket) {\n      socket.emit(\"agentRemove\");\n    });\n\nAlternatively, you could just opt out of pooling entirely using `agent:false`:\n\n\n    http.get({host:'localhost', port:80, path:'/', agent:false}, function (res)\n    {\n      // Do stuff\n    });","short_description":"Starting with Node.js 0.5.3, there's a new implementation of the HTTP\nAgent which is used for pooling sockets used in HTTP client requests.\n","line":250,"aliases":[],"children":[{"id":"http.Agent.maxSockets","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","short_description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","line":261,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"maxSockets","name_prefix":"http.Agent.","path":"http.Agent.maxSockets","outFile":"http.html#http.Agent.maxSockets"},{"id":"http.Agent.sockets","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","short_description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","line":271,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"sockets","name_prefix":"http.Agent.","path":"http.Agent.sockets","outFile":"http.html#http.Agent.sockets"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"Agent","name_prefix":"http.","path":"http.Agent","outFile":"http.html"},{"id":"http.Server","type":"class","superclass":"http","description":"A representation of the server within the `http` module. To create an HTTP\nserver, you'll need to first call [[http.createServer `http.createServer()`]],\nwith something like this:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nThis object is also an [[eventemitter `eventemitter`]].\n\nFor more information, read [this article on how to create HTTP\nservers](../nodejs_dev_guide/creating_an_http_server.html).","short_description":"A representation of the server within the `http` module. To create an HTTP\nserver, you'll need to first call [[http.createServer `http.createServer()`]],\nwith something like this:\n","line":288,"aliases":[],"children":[{"id":"http.Server.close","type":"class method","signatures":[{"arguments":[{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"A function to call once the server closes\n\n\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"A function to call once the server closes\n\n\n\n"}],"related_to":"net.Server.close","description":"Stops the server from accepting new connections.","short_description":"Stops the server from accepting new connections.","line":437,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.Server.","path":"http.Server.close","outFile":"http.html#http.Server.close"},{"id":"http.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","optional":true,"types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","default_value":511,"optional":true,"types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}],"description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n\n**If using the `backlog` signature**: `backlog` is the maximum length of the queue of pending connections.\nThe actual length will be determined by your OS through sysctl settings such as\n`tcp_max_syn_backlog` and `somaxconn` on linux. The default value of this\nparameter is 511 (not 512).\n\n**If using the `handle` signature: `handle` can be set to either a server or socket (anything\nwith an underlying `_handle` member), or a `{fd: <n>}` object. It is presumed\nthat the file descriptor or handle has already been bound to a port or domain\nsocket. Listening on a file descriptor is not supported on Windows.\n\nThis function is asynchronous. The `callback()` is added as a listener for the\n[[net.Server@listening `'listening'`]] event of `net.Server`.","short_description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n","line":428,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"listen","name_prefix":"http.Server.","path":"http.Server.listen","outFile":"http.html#http.Server.listen"},{"id":"http.Server.maxHeadersCount","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Limits the maximum incoming headers count. The default is 1000. If set to\n0, then no limit is applied.","short_description":"Limits the maximum incoming headers count. The default is 1000. If set to\n0, then no limit is applied.","line":445,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"maxHeadersCount","name_prefix":"http.Server.","path":"http.Server.maxHeadersCount","outFile":"http.html#http.Server.maxHeadersCount"},{"id":"http.Server@checkContinue","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}],"description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n\nHandling this event involves calling `response.writeContinue` if the client\nshould continue to send the request body, or generating an appropriate HTTP\nresponse (_e.g._ `400 Bad Request`) if the client should not continue to send\nthe request body.\n\nNote: When this event is emitted and handled, the `request` event is not emitted.","short_description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n","line":341,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"checkContinue","name_prefix":"http.Server@","path":"http.Server.event.checkContinue","outFile":"http.html#http.Server.event.checkContinue"},{"id":"http.Server@clientError","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}],"description":"If a client connection emits an `'error'` event, it's forwarded here.","short_description":"If a client connection emits an `'error'` event, it's forwarded here.","line":394,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"clientError","name_prefix":"http.Server@","path":"http.Server.event.clientError","outFile":"http.html#http.Server.event.clientError"},{"id":"http.Server@close","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when the server closes.","short_description":"Emitted when the server closes.","line":322,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.Server@","path":"http.Server.event.close","outFile":"http.html#http.Server.event.close"},{"id":"http.Server@connect","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`, that\n\n*are the arguments for the http request\n\n"},{"name":"socket","types":["net.Socket"],"description":"The network socket between the server and client.\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the tunneling stream; this may be empty.\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`, that\n\n*are the arguments for the http request\n\n"},{"name":"socket","types":["net.Socket"],"description":"The network socket between the server and client.\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the tunneling stream; this may be empty.\n\n"}],"description":"This event is emitted each time a client requests a http CONNECT method. If this\nevent isn't\nlistened for, then clients requesting a CONNECT method will have their\nconnections closed.\n\n* `request` is , as it is in the request\n  event.\n* `socket` is t\n* `head` is an instance of Buffer,\n\nAfter this event is emitted, the request's socket will not have a `data`\nevent listener, meaning you will need to bind to it in order to handle data\nsent to the server on that socket.","short_description":"This event is emitted each time a client requests a http CONNECT method. If this\nevent isn't\nlistened for, then clients requesting a CONNECT method will have their\nconnections closed.\n","line":365,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connect","name_prefix":"http.Server@","path":"http.Server.event.connect","outFile":"http.html#http.Server.event.connect"},{"id":"http.Server@connection","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","short_description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","line":312,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connection","name_prefix":"http.Server@","path":"http.Server.event.connection","outFile":"http.html#http.Server.event.connection"},{"id":"http.Server@request","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}],"description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","short_description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","line":299,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"request","name_prefix":"http.Server@","path":"http.Server.event.request","outFile":"http.html#http.Server.event.request"},{"id":"http.Server@upgrade","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}],"description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n\nAfter this event is emitted, the request's socket won't have a `data` event\nlistener, meaning you will need to bind to it in order to handle data sent to\nthe server on that socket.","short_description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n","line":384,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"upgrade","name_prefix":"http.Server@","path":"http.Server.event.upgrade","outFile":"http.html#http.Server.event.upgrade"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"Server","name_prefix":"http.","path":"http.Server","outFile":"http.html"},{"id":"http.ServerRequest","type":"class","superclass":"http","description":"This object is created internally by an HTTP server—not by the user—and passed\nas the first argument to a `'request'` listener.\n\nThe request implements the [[stream.ReadableStream Readable Stream]] interface;\nit is also an [[eventemitter `eventemitter`]] with the following events:","short_description":"This object is created internally by an HTTP server—not by the user—and passed\nas the first argument to a `'request'` listener.\n","line":458,"aliases":[],"children":[{"id":"http.ServerRequest.connection","type":"class property","signatures":[{"returns":[{"type":"net.Socket"}]}],"description":"The `net.Socket` object associated with the connection.\n\nWith HTTPS support, use `request.connection.verifyPeer()` and\n`request.connection.getPeerCertificate()` to obtain the client's authentication\ndetails.","short_description":"The `net.Socket` object associated with the connection.\n","line":628,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connection","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.connection","outFile":"http.html#http.ServerRequest.connection"},{"id":"http.ServerRequest.headers","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"readonly":true,"description":"Returns a mapping  of header names and values. Header names are lower-cased.\n\n#### Example\n\n    // Prints something like:\n    //\n    // { 'user-agent': 'curl/7.22.0',\n    //   host: '127.0.0.1:8000',\n    //   accept: '*/*' }\n    console.log(request.headers);","short_description":"Returns a mapping  of header names and values. Header names are lower-cased.\n","line":557,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"headers","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.headers","outFile":"http.html#http.ServerRequest.headers"},{"id":"http.ServerRequest.httpVersion","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"readonly":true,"description":"The HTTP protocol version as a string; for example: `'1.1'`, `'1.0'`.\n`request.httpVersionMajor` is the first integer and `request.httpVersionMinor`\nis the second.","short_description":"The HTTP protocol version as a string; for example: `'1.1'`, `'1.0'`.\n`request.httpVersionMajor` is the first integer and `request.httpVersionMinor`\nis the second.","line":580,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"httpVersion","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.httpVersion","outFile":"http.html#http.ServerRequest.httpVersion"},{"id":"http.ServerRequest.method","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The request method as a string, like `'GET'` or `'DELETE'`.","short_description":"The request method as a string, like `'GET'` or `'DELETE'`.","line":508,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"method","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.method","outFile":"http.html#http.ServerRequest.method"},{"id":"http.ServerRequest.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses request from emitting events.  Useful to throttle back an upload.","short_description":"Pauses request from emitting events.  Useful to throttle back an upload.","line":603,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"pause","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.pause","outFile":"http.html#http.ServerRequest.pause"},{"id":"http.ServerRequest.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes a paused request.","short_description":"Resumes a paused request.","line":613,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"resume","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.resume","outFile":"http.html#http.ServerRequest.resume"},{"id":"http.ServerRequest.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"null","optional":true,"types":["String"],"description":"The encoding to use, either `'utf8'` or `'binary'`\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use, either `'utf8'` or `'binary'`\n\n"}],"description":"Set the encoding for the request body. Defaults to `null`, which means that the\n`'data'` event emits a `Buffer` object.\n\n\nFor more information, see\n[[stream.ReadableStream.setEncoding `stream.ReadableStream.setEncoding()`]].","short_description":"Set the encoding for the request body. Defaults to `null`, which means that the\n`'data'` event emits a `Buffer` object.\n","line":594,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setEncoding","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.setEncoding","outFile":"http.html#http.ServerRequest.setEncoding"},{"id":"http.ServerRequest.trailers","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"Contains the HTTP trailers (if present). Only populated after the `'end'` event.","short_description":"Contains the HTTP trailers (if present). Only populated after the `'end'` event.","line":566,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"trailers","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.trailers","outFile":"http.html#http.ServerRequest.trailers"},{"id":"http.ServerRequest.url","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"Request URL string. This contains only the URL that is present in the actual\nHTTP request. Fo example, if the request is:\n\n    GET /status?name=ryan HTTP/1.1\\r\\n\n    Accept: text/plain\\r\\n\n    \\r\\n\n\nThen `request.url` becomes:\n\n    '/status?name=ryan'\n\n#### Example\n\nIf you would like to parse the URL into its parts, you can use\n`require('url').parse(request.url)`. For example:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.serverrequest_1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nIf you would like to extract the params from the query string, you can use\n[[querystring.parse `require('querystring').parse()`]], or pass `true` as the\nsecond argument to `require('url').parse`.  For example:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.serverrequest_2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Request URL string. This contains only the URL that is present in the actual\nHTTP request. Fo example, if the request is:\n","line":538,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"url","name_prefix":"http.ServerRequest.","path":"http.ServerRequest.url","outFile":"http.html#http.ServerRequest.url"},{"id":"http.ServerRequest@close","type":"event","signatures":[{"arguments":[]}],"description":"Indicates that the underlaying connection was terminated before `response.end()`\nwas called or able to flush.\n\nJust like `'end'`, this event occurs only once per request, and no more `'data'`\nevents will fire afterwards.\n\nNote: `'close'` can fire after `'end'`, but not vice versa.\n\n\nread-only","short_description":"Indicates that the underlaying connection was terminated before `response.end()`\nwas called or able to flush.\n","line":497,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.ServerRequest@","path":"http.ServerRequest.event.close","outFile":"http.html#http.ServerRequest.event.close"},{"id":"http.ServerRequest@data","type":"event","signatures":[{"arguments":[{"name":"chunk","types":["String"],"description":"The data that's received (as a string)\n\n"}]}],"arguments":[{"name":"chunk","types":["String"],"description":"The data that's received (as a string)\n\n"}],"description":"Emitted when a piece of the message body is received. The chunk is a string if\nan encoding has been set with [[http.ServerRequest.setEncoding\n`request.setEncoding()`]], otherwise it's a [[Buffer]].\n\nNote that the **data will be lost** if there is no listener when a\n`ServerRequest` emits a `'data'` event.","short_description":"Emitted when a piece of the message body is received. The chunk is a string if\nan encoding has been set with [[http.ServerRequest.setEncoding\n`request.setEncoding()`]], otherwise it's a [[Buffer]].\n","line":472,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"data","name_prefix":"http.ServerRequest@","path":"http.ServerRequest.event.data","outFile":"http.html#http.ServerRequest.event.data"},{"id":"http.ServerRequest@end","type":"event","signatures":[{"arguments":[]}],"description":"Emitted exactly once for each request. After that, no more `'data'` events are\nemitted on the request.","short_description":"Emitted exactly once for each request. After that, no more `'data'` events are\nemitted on the request.","line":482,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ServerRequest@","path":"http.ServerRequest.event.end","outFile":"http.html#http.ServerRequest.event.end"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ServerRequest","name_prefix":"http.","path":"http.ServerRequest","outFile":"http.html"},{"id":"http.ServerResponse","type":"class","superclass":"http","description":"This object is created internally by a HTTP server—not by the user. It is passed\nas the second parameter to the `'request'` event. It is a\n[[stream.WritableStream `Writable Stream`]].","short_description":"This object is created internally by a HTTP server—not by the user. It is passed\nas the second parameter to the `'request'` event. It is a\n[[stream.WritableStream `Writable Stream`]].","line":640,"aliases":[],"children":[{"id":"http.ServerResponse.addTrailers","type":"class method","signatures":[{"arguments":[{"name":"headers","types":["String"],"description":"The trailing header to add\n\n"}]}],"arguments":[{"name":"headers","types":["String"],"description":"The trailing header to add\n\n"}],"description":"This method adds HTTP trailing headers (a header, but at the end of the message)\nto the response.\n\nTrailers are only emitted if chunked encoding is used for the response; if it is\nnot (_e.g._ if the request was `'HTTP/1.0'`), they are silently discarded.\n\n#### Example\n\nHTTP requires the `Trailer` header to be sent if you intend to emit trailers,\nwith a list of the header fields in its value. For example:\n\n    response.writeHead(200, { 'Content-Type': 'text/plain',\n                              'Trailer': 'Content-MD5' });\n    response.write(fileData);\n    response.addTrailers({'Content-MD5': \"7895bf4b8828b55ceaf47747b4bca667\"});\n    response.end();","short_description":"This method adds HTTP trailing headers (a header, but at the end of the message)\nto the response.\n","line":821,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"addTrailers","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.addTrailers","outFile":"http.html#http.ServerResponse.addTrailers"},{"id":"http.ServerResponse.end","type":"class method","signatures":[{"arguments":[{"name":"data","optional":true,"types":["String"],"description":"Some data to write before finishing\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding for the data\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"Some data to write before finishing\n\n"},{"name":"encoding","types":["String"],"description":"The encoding for the data\n\n"}],"description":"This method signals to the server that all of the response headers and body have\nbeen sent; that server should consider this message complete. `response.end()`\n**must** be called on each response.\n\nIf `data` is specified, it is equivalent to calling `response.write(data,\nencoding)` followed by `response.end()`.","short_description":"This method signals to the server that all of the response headers and body have\nbeen sent; that server should consider this message complete. `response.end()`\n**must** be called on each response.\n","line":840,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.end","outFile":"http.html#http.ServerResponse.end"},{"id":"http.ServerResponse.getHeader","type":"class method","signatures":[{"arguments":[{"name":"name","types":["String"],"description":"The name of the header to retrieve\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"name","types":["String"],"description":"The name of the header to retrieve\n\n"}],"description":"Reads out a header that's already been queued but not sent to the client.  Note\nthat the name is case-insensitive.  This can only be called before headers get\nimplicitly flushed.\n\n#### Example\n\n    var stringContentType = response.getHeader('content-type');","short_description":"Reads out a header that's already been queued but not sent to the client.  Note\nthat the name is case-insensitive.  This can only be called before headers get\nimplicitly flushed.\n","line":752,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"getHeader","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.getHeader","outFile":"http.html#http.ServerResponse.getHeader"},{"id":"http.ServerResponse.removeHeader","type":"class method","signatures":[{"arguments":[{"name":"name","types":["String"],"description":"The header to remove\n\n"}]}],"arguments":[{"name":"name","types":["String"],"description":"The header to remove\n\n"}],"description":"Removes a header that's queued for implicit sending.\n\n#### Example\n\n    response.removeHeader(\"Content-Encoding\");","short_description":"Removes a header that's queued for implicit sending.\n","line":767,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"removeHeader","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.removeHeader","outFile":"http.html#http.ServerResponse.removeHeader"},{"id":"http.ServerResponse.sendDate","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"When `true`, the Date header is automatically generated and sent in\nthe response if it is not already present in the headers. The default is `true`.\n\nThis should only be disabled for testing; HTTP requires the Date header\nin responses.","short_description":"When `true`, the Date header is automatically generated and sent in\nthe response if it is not already present in the headers. The default is `true`.\n","line":735,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"sendDate","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.sendDate","outFile":"http.html#http.ServerResponse.sendDate"},{"id":"http.ServerResponse.setHeader","type":"class method","signatures":[{"arguments":[{"name":"name","types":["String"],"description":"The name of the header to set\n\n"},{"name":"value","types":["String"],"description":"The value to set\n\n"}]}],"arguments":[{"name":"name","types":["String"],"description":"The name of the header to set\n\n"},{"name":"value","types":["String"],"description":"The value to set\n\n"}],"description":"Sets a single header value for implicit headers. If this header already exists\nin the to-be-sent headers, its value is replaced.  Use an array of strings here\nif you need to send multiple headers with the same name.\n\n#### Examples\n\n    response.setHeader(\"Content-Type\", \"text/html\");\n\n    response.setHeader(\"Set-Cookie\", [\"type=ninja\", \"language=javascript\"]);","short_description":"Sets a single header value for implicit headers. If this header already exists\nin the to-be-sent headers, its value is replaced.  Use an array of strings here\nif you need to send multiple headers with the same name.\n","line":723,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setHeader","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.setHeader","outFile":"http.html#http.ServerResponse.setHeader"},{"id":"http.ServerResponse.statusCode","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"When using implicit headers (not calling `response.writeHead()` explicitly),\nthis property controls the status code that are sent to the client when the\nheaders get flushed; for example: `response.statusCode = 404;`.\n\nAfter the response header is sent to the client, this property indicates the\nstatus code which was sent out.","short_description":"When using implicit headers (not calling `response.writeHead()` explicitly),\nthis property controls the status code that are sent to the client when the\nheaders get flushed; for example: `response.statusCode = 404;`.\n","line":705,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"statusCode","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.statusCode","outFile":"http.html#http.ServerResponse.statusCode"},{"id":"http.ServerResponse.write","type":"class method","signatures":[{"arguments":[{"name":"chunk","types":["String","Buffer"],"description":"A string or buffer to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use (if `chunk` is a string)\n\n"}],"returns":[{"type":"Boolean","description":"Returns `true` if the entire data was flushed successfully to the \n\n*kernel buffer. Returns `false` if all or part of the data was queued in \n\n*user memory. `'drain'` is emitted when the buffer is again free.\n\n"}]}],"arguments":[{"name":"chunk","types":["String","Buffer"],"description":"A string or buffer to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use (if `chunk` is a string)\n\n"}],"returns":[{"type":"Boolean","description":"Returns `true` if the entire data was flushed successfully to the \n\n*kernel buffer. Returns `false` if all or part of the data was queued in \n\n*user memory. `'drain'` is emitted when the buffer is again free.\n\n"}],"description":"If this method is called and `response.writeHead()` has not been called, it'll\nswitch to implicit header mode and flush the implicit headers.\n\nThis sends a chunk of the response body. This method may be called multiple\ntimes to provide successive parts of the body.\n\nNote: This is the raw HTTP body and has nothing to do with higher-level multi-part body encodings that may be used.\n\nThe first time `response.write()` is called, it sends the buffered header\ninformation and the first body to the client. The second time `response.write()`\nis called, Node.js assumes you're going to be streaming data, and sends that\nseparately. That is, the response is buffered up to the first chunk of body.","short_description":"If this method is called and `response.writeHead()` has not been called, it'll\nswitch to implicit header mode and flush the implicit headers.\n","line":794,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"write","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.write","outFile":"http.html#http.ServerResponse.write"},{"id":"http.ServerResponse.writeContinue","type":"class method","signatures":[{"arguments":[]}],"description":"Sends an `HTTP/1.1 100 Continue` message to the client, indicating that the\nrequest body should be sent. For more information, see the\n[[http.Server@checkContinue `http.Server`'s `'checkContinue'`]] event.","short_description":"Sends an `HTTP/1.1 100 Continue` message to the client, indicating that the\nrequest body should be sent. For more information, see the\n[[http.Server@checkContinue `http.Server`'s `'checkContinue'`]] event.","line":663,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"writeContinue","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.writeContinue","outFile":"http.html#http.ServerResponse.writeContinue"},{"id":"http.ServerResponse.writeHead","type":"class method","signatures":[{"arguments":[{"name":"statusCode","types":["Number"],"description":"The 3-digit HTTP status code, like `404`\n\n"},{"name":"reasonPhrase","optional":true,"types":["String"],"description":"A human-readable string describing the status\n\n"},{"name":"headers","optional":true,"types":["Object"],"description":"Any response headers\n\n"}]}],"arguments":[{"name":"statusCode","types":["Number"],"description":"The 3-digit HTTP status code, like `404`\n\n"},{"name":"reasonPhrase","types":["String"],"description":"A human-readable string describing the status\n\n"},{"name":"headers","types":["Object"],"description":"Any response headers\n\n"}],"description":"Sends a response header to the request.\n\nThis method must only be called once on a message and it must be called before\n`response.end()` is called.\n\nIf you call `response.write()` or `response.end()` before calling this, the\nimplicit/mutable headers will be calculated and call this function for you.\n\n#### Example\n\n    var body = 'hello world';\n    response.writeHead(200, {\n      'Content-Length': body.length,\n      'Content-Type': 'text/plain' });\n\nNote: `Content-Length` is given in bytes, not characters. The above example works because the string `'hello world'` contains only single byte characters. If the body contains higher coded characters then `Buffer.byteLength()` should be used to determine the number of bytes in a given encoding. Node.js does not check whether `Content-Length` and the length of the body which has been transmitted are equal or not.","short_description":"Sends a response header to the request.\n","line":689,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"writeHead","name_prefix":"http.ServerResponse.","path":"http.ServerResponse.writeHead","outFile":"http.html#http.ServerResponse.writeHead"},{"id":"http.ServerResponse@close","type":"event","signatures":[{"arguments":[]}],"description":"If emitted, it it indicates that the underlaying connection was terminated\nbefore `response.end()` was called or able to flush.","short_description":"If emitted, it it indicates that the underlaying connection was terminated\nbefore `response.end()` was called or able to flush.","line":651,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.ServerResponse@","path":"http.ServerResponse.event.close","outFile":"http.html#http.ServerResponse.event.close"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ServerResponse","name_prefix":"http.","path":"http.ServerResponse","outFile":"http.html"},{"id":"http.ClientRequest","type":"class","superclass":"http","description":"This object is created internally and returned from [[http.request\n`http.request()`]].  It represents an _in-progress_ request whose header has\nalready been queued.  The header is still mutable using the `setHeader(name,\nvalue)`, `getHeader(name)`, and `removeHeader(name)` methods.  The actual header\nwill be sent along with the first data chunk or when closing the connection.\nThis is both a [[stream.WritableStream `Writable Stream`]] and an\n[[eventemitter `EventEmitter`]].\n\nTo get the response, add a listener for `'response'` to the request object.\n`'response'` will be emitted from the request object when the response headers\nhave been received.  The `'response'` event is executed with one argument which\nis an instance of `http.ClientResponse`.\n\nDuring the `'response'` event, one can add listeners to the response object,\nparticularly to listen for the `'data'` event. Note that the `'response'` event\nis called before any part of the response body is received, so there is no need\nto worry about racing to catch the first part of the body. As long as a listener\nfor `'data'` is added during the `'response'` event, the entire body will be\ncaught.\n\nNote: Node.js does not check whether `Content-Length`and the length of the body which has been transmitted are equal or not.\n\n\nThe request implements the [[stream.WritableStream Writable Stream]] interface.\n\n\n#### Example\n\n    // Good\n    request.on('response', function (response) {\n      response.on('data', function (chunk) {\n        console.log('BODY: ' + chunk);\n      });\n    });\n\n    // Bad - misses all or part of the body\n    request.on('response', function (response) {\n      setTimeout(function () {\n        response.on('data', function (chunk) {\n          console.log('BODY: ' + chunk);\n        });\n      }, 10);\n    });","short_description":"This object is created internally and returned from [[http.request\n`http.request()`]].  It represents an _in-progress_ request whose header has\nalready been queued.  The header is still mutable using the `setHeader(name,\nvalue)`, `getHeader(name)`, and `removeHeader(name)` methods.  The actual header\nwill be sent along with the first data chunk or when closing the connection.\nThis is both a [[stream.WritableStream `Writable Stream`]] and an\n[[eventemitter `EventEmitter`]].\n","line":890,"aliases":[],"children":[{"id":"http.ClientRequest.abort","type":"class method","signatures":[{"arguments":[]}],"description":"Aborts a request, since NOde.js version 0.3.8.","short_description":"Aborts a request, since NOde.js version 0.3.8.","line":1013,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"abort","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.abort","outFile":"http.html#http.ClientRequest.abort"},{"id":"http.ClientRequest.end","type":"class method","signatures":[{"arguments":[{"name":"data","optional":true,"types":["String"],"description":"The data to send at the end\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding to use for the data \n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to send at the end\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use for the data \n\n"}],"description":"Finishes sending the request. If any parts of the body are unsent, it will flush\nthem to the stream. If the request is chunked, this will send the terminating\n`'0\\r\\n\\r\\n'`.\n\nIf `data` is specified, it is equivalent to calling `request.write(data,\nencoding)` followed by `request.end()`.","short_description":"Finishes sending the request. If any parts of the body are unsent, it will flush\nthem to the stream. If the request is chunked, this will send the terminating\n`'0\\r\\n\\r\\n'`.\n","line":1002,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.end","outFile":"http.html#http.ClientRequest.end"},{"id":"http.ClientRequest.setNoDelay","type":"class method","signatures":[{"arguments":[{"name":"noDelay","default_value":true,"optional":true,"types":["Boolean"],"description":"If `true`, then the data is fired off immediately each time\n\n*the socket is written\n\n"}]}],"arguments":[{"name":"noDelay","types":["Boolean"],"description":"If `true`, then the data is fired off immediately each time\n\n*the socket is written\n\n"}],"description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setNoDelay `net.Socket.setNoDelay()`]] is called.","short_description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setNoDelay `net.Socket.setNoDelay()`]] is called.","line":1038,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setNoDelay","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.setNoDelay","outFile":"http.html#http.ClientRequest.setNoDelay"},{"id":"http.ClientRequest.setSocketKeepAlive","type":"class method","signatures":[{"arguments":[{"name":"enable","default_value":false,"optional":true,"types":["Boolean"],"description":"If `true`, then keep-alive funcitonality is set\n\n"},{"name":"initialDelay","optional":true,"types":["Number"],"description":"Sets the initial delay before the first keep-alive probe\n\n*is sent on an idle socket\n\n"}]}],"arguments":[{"name":"enable","types":["Boolean"],"description":"If `true`, then keep-alive funcitonality is set\n\n"},{"name":"initialDelay","types":["Number"],"description":"Sets the initial delay before the first keep-alive probe\n\n*is sent on an idle socket\n\n"}],"description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setKeepAlive `net.Socket.setKeepAlive()`]] is called.","short_description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setKeepAlive `net.Socket.setKeepAlive()`]] is called.","line":1052,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setSocketKeepAlive","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.setSocketKeepAlive","outFile":"http.html#http.ClientRequest.setSocketKeepAlive"},{"id":"http.ClientRequest.setTimeout","type":"class method","signatures":[{"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length, in milliseconds\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional function to execute once the timeout\n\n*completes\n\n"}]}],"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length, in milliseconds\n\n"},{"name":"callback","types":["Function"],"description":"An optional function to execute once the timeout\n\n*completes\n\n"}],"description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setTimeout `net.Socket.setTimeout()`]] is called.","short_description":"Once a socket is assigned to this request and is connected,\n[[net.Socket.setTimeout `net.Socket.setTimeout()`]] is called.","line":1026,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setTimeout","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.setTimeout","outFile":"http.html#http.ClientRequest.setTimeout"},{"id":"http.ClientRequest.write","type":"class method","signatures":[{"arguments":[{"name":"chunk","types":["Buffer","String"],"description":"The buffer or string to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding of the chunk (only needed if it's a string)\n\n"}]}],"arguments":[{"name":"chunk","types":["Buffer","String"],"description":"The buffer or string to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding of the chunk (only needed if it's a string)\n\n"}],"description":"Sends a chunk of the body.  By calling this method many times, the user can\nstream a request body to a server—in that case, it's suggested you use the\n`['Transfer-Encoding', 'chunked']` header line when creating the request.","short_description":"Sends a chunk of the body.  By calling this method many times, the user can\nstream a request body to a server—in that case, it's suggested you use the\n`['Transfer-Encoding', 'chunked']` header line when creating the request.","line":985,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"write","name_prefix":"http.ClientRequest.","path":"http.ClientRequest.write","outFile":"http.html#http.ClientRequest.write"},{"id":"http.ClientRequest@connect","type":"event","signatures":[{"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"socket","types":["net.Socket"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"head","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}]}],"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"socket","types":["net.Socket"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"},{"name":"head","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}],"description":"Emitted each time a server responds to a request with a CONNECT method. If this\nevent isn't being listened for, clients receiving a CONNECT method will have\ntheir connections closed.\n\n#### Example: A client server pair that show you how to listen for the `connect` event.\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.clientrequest.connect.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted each time a server responds to a request with a CONNECT method. If this\nevent isn't being listened for, clients receiving a CONNECT method will have\ntheir connections closed.\n","line":941,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"connect","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.connect","outFile":"http.html#http.ClientRequest.event.connect"},{"id":"http.ClientRequest@continue","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the server sends a `'100 Continue'` HTTP response, usually because\nthe request contained `'Expect: 100-continue'`. This is an instruction that the\nclient should send the request body.","short_description":"Emitted when the server sends a `'100 Continue'` HTTP response, usually because\nthe request contained `'Expect: 100-continue'`. This is an instruction that the\nclient should send the request body.","line":970,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"continue","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.continue","outFile":"http.html#http.ClientRequest.event.continue"},{"id":"http.ClientRequest@response","type":"event","signatures":[{"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}]}],"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"An instance of [[http.ClientResponse \n\n*`http.ClientResponse`]]\n\n"}],"description":"Emitted when a response is received to this request. This event is emitted only\nonce.\n\nOptions include:\n\n- host: a domain name or IP address of the server to issue the request to\n- port: the port of remote server\n- socketPath: Unix Domain Socket (use either `host:port` or `socketPath`)","short_description":"Emitted when a response is received to this request. This event is emitted only\nonce.\n","line":909,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"response","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.response","outFile":"http.html#http.ClientRequest.event.response"},{"id":"http.ClientRequest@socket","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"}],"description":"Emitted after a socket is assigned to this request.","short_description":"Emitted after a socket is assigned to this request.","line":918,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"socket","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.socket","outFile":"http.html#http.ClientRequest.event.socket"},{"id":"http.ClientRequest@upgrade","type":"event","signatures":[{"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"The client's response\n\n"},{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"},{"name":"head","types":["Object"],"description":"The upgrade header\n\n"}]}],"arguments":[{"name":"response","types":["http.ClientResponse"],"description":"The client's response\n\n"},{"name":"socket","types":["net.Socket"],"description":"The assigned socket\n\n"},{"name":"head","types":["Object"],"description":"The upgrade header\n\n"}],"description":"Emitted each time a server responds to a request with an upgrade. If this event\nisn't being listened for, clients receiving an upgrade header will have their\nconnections closed.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/http/http.clientrequest.upgrade.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted each time a server responds to a request with an upgrade. If this event\nisn't being listened for, clients receiving an upgrade header will have their\nconnections closed.\n","line":958,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"upgrade","name_prefix":"http.ClientRequest@","path":"http.ClientRequest.event.upgrade","outFile":"http.html#http.ClientRequest.event.upgrade"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ClientRequest","name_prefix":"http.","path":"http.ClientRequest","outFile":"http.html"},{"id":"http.ClientResponse","type":"class","superclass":"http","description":"This object is created when making a request with [[http.request\n`http.request()`]]. It is passed to the `'response'` event of the request\nobject.\n\nThe response implements the [[stream.ReadableStream `Readable Stream`]]\ninterface.","short_description":"This object is created when making a request with [[http.request\n`http.request()`]]. It is passed to the `'response'` event of the request\nobject.\n","line":1066,"aliases":[],"children":[{"id":"http.ClientResponse.header","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"The response headers object.","short_description":"The response headers object.","line":1133,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"header","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.header","outFile":"http.html#http.ClientResponse.header"},{"id":"http.ClientResponse.httpVersion","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The HTTP version of the connected-to server. Usually either `'1.1'` or `'1.0'`.\n`response.httpVersionMajor` is the first integer and `response.httpVersionMinor`\nis the second.","short_description":"The HTTP version of the connected-to server. Usually either `'1.1'` or `'1.0'`.\n`response.httpVersionMajor` is the first integer and `response.httpVersionMinor`\nis the second.","line":1124,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"httpVersion","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.httpVersion","outFile":"http.html#http.ClientResponse.httpVersion"},{"id":"http.ClientResponse.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses the response from emitting events.  Useful to throttle back a download.","short_description":"Pauses the response from emitting events.  Useful to throttle back a download.","line":1165,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"pause","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.pause","outFile":"http.html#http.ClientResponse.pause"},{"id":"http.ClientResponse.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes a paused response.","short_description":"Resumes a paused response.","line":1172,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"resume","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.resume","outFile":"http.html#http.ClientResponse.resume"},{"id":"http.ClientResponse.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"null","optional":true,"types":["String"],"description":"The encoding to use. Defaults to `null`, which means that\n\n*the `'data'` event will emit a `Buffer` object.\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use. Defaults to `null`, which means that\n\n*the `'data'` event will emit a `Buffer` object.\n\n"}],"description":"Set the encoding for the response body, either `'utf8'`, `'ascii'`, or\n`'base64'`.","short_description":"Set the encoding for the response body, either `'utf8'`, `'ascii'`, or\n`'base64'`.","line":1156,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"setEncoding","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.setEncoding","outFile":"http.html#http.ClientResponse.setEncoding"},{"id":"http.ClientResponse.statusCode","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The 3-digit HTTP response status code, like `200`, `404`, e.t.c.","short_description":"The 3-digit HTTP response status code, like `200`, `404`, e.t.c.","line":1112,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"statusCode","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.statusCode","outFile":"http.html#http.ClientResponse.statusCode"},{"id":"http.ClientResponse.trailers","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"The response trailers object. Only populated after the `end` event.","short_description":"The response trailers object. Only populated after the `end` event.","line":1143,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"trailers","name_prefix":"http.ClientResponse.","path":"http.ClientResponse.trailers","outFile":"http.html#http.ClientResponse.trailers"},{"id":"http.ClientResponse@close","type":"event","signatures":[{"arguments":[{"name":"err","types":["Error"],"description":"The error object\n\n"}]}],"arguments":[{"name":"err","types":["Error"],"description":"The error object\n\n"}],"description":"Indicates that the underlaying connection was terminated before the `end` event\nwas emitted.\n\nFor more information, see [[http.ServerRequest]]'s `'close'` event.","short_description":"Indicates that the underlaying connection was terminated before the `end` event\nwas emitted.\n","line":1102,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"close","name_prefix":"http.ClientResponse@","path":"http.ClientResponse.event.close","outFile":"http.html#http.ClientResponse.event.close"},{"id":"http.ClientResponse@data","type":"event","signatures":[{"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}]}],"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}],"description":"Emitted when a piece of the message body is received.","short_description":"Emitted when a piece of the message body is received.","line":1077,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"data","name_prefix":"http.ClientResponse@","path":"http.ClientResponse.event.data","outFile":"http.html#http.ClientResponse.event.data"},{"id":"http.ClientResponse@end","type":"event","signatures":[{"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}]}],"arguments":[{"name":"chunk","types":["Buffer"],"description":"The data received\n\n"}],"description":"Emitted exactly once for each message. After it's emitted, no other events are\nemitted on the response.","short_description":"Emitted exactly once for each message. After it's emitted, no other events are\nemitted on the response.","line":1089,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/http.markdown","name":"end","name_prefix":"http.ClientResponse@","path":"http.ClientResponse.event.end","outFile":"http.html#http.ClientResponse.event.end"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":[],"name":"ClientResponse","name_prefix":"http.","path":"http.ClientResponse","outFile":"http.html"}],"file":"0.8.14/nodejs_ref_guide/http.markdown","subclasses":["http.Agent","http.Server","http.ServerRequest","http.ServerResponse","http.ClientRequest","http.ClientResponse"],"name":"http","path":"http","outFile":"http.html"},{"id":"https","type":"class","description":"\nHTTPS is the HTTP protocol over TLS/SSL. In Node.js, this is implemented as a\nseparate module. To use this module, include `require('https')` in your code.\n\nCreating HTTPS servers is somewhat complicated and requires generating\ncertificates.\n\n#### Examples\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/https/https.js?linestart=1&lineend=0&showlines=false' defer='defer'></script>\n\nOr, with pfx:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/https/https_pfx.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"3 - Stable","short_description":"\nHTTPS is the HTTP protocol over TLS/SSL. In Node.js, this is implemented as a\nseparate module. To use this module, include `require('https')` in your code.\n","line":21,"aliases":[],"children":[{"id":"https.Agent","type":"class","superclass":"https","description":"An `Agent` object for HTTPS, similar to [[http.Agent `http.Agent`]]. For more\ninformation, see [[https.request `https.request()`]].","short_description":"An `Agent` object for HTTPS, similar to [[http.Agent `http.Agent`]]. For more\ninformation, see [[https.request `https.request()`]].","line":204,"aliases":[],"children":[{"id":"https.Agent.maxSockets","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","short_description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","line":212,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"maxSockets","name_prefix":"https.Agent.","path":"https.Agent.maxSockets","outFile":"https.html#https.Agent.maxSockets"},{"id":"https.Agent.sockets","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","short_description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","line":220,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"sockets","name_prefix":"https.Agent.","path":"https.Agent.sockets","outFile":"https.html#https.Agent.sockets"}],"file":"0.8.14/nodejs_ref_guide/https.markdown","subclasses":[],"name":"Agent","name_prefix":"https.","path":"https.Agent","outFile":"https.html"},{"id":"https.createServer","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Any options you want to pass to the server\n\n"},{"name":"callback","arguments":[{"name":"request","description":"Any options you want to pass to the server\n\n","types":["http.ClientRequest"]},{"name":"response","description":"An optional listener\n\n\n\n","types":["http.ClientResponse"]}],"callback":true,"optional":true,"types":["Function"],"description":"A callback to execute\n\n"}],"returns":[{"type":"https.Server"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Any options you want to pass to the server\n\n"},{"name":"callback","types":["Function"],"description":"A callback to execute\n\n"},{"name":"request","types":["http.ClientRequest"],"description":"Any options you want to pass to the server\n\n"},{"name":"response","types":["http.ClientResponse"],"description":"An optional listener\n\n\n\n"}],"related_to":"tls.createServer","description":"Returns a new HTTPS web server object.\n\nThe `options` object has a mix of required and optional values:\n\n  - `key`: A string or `Buffer` containing the private key of the server in a\nPEM format. (Required)\n  - `cert`: A string or `Buffer` containing the certificate key of the server in\na PEM format. (Required)\n\n  - `ca`: An array of strings or `Buffer`s of trusted certificates. These are\nused to authorize connections. If this is omitted, several \"well-known root\" CAs\nwill be used, like VeriSign.\n\n  - `NPNProtocols`: An array of strings or a  `Buffer` containing supported NPN\nprotocols.\n        `Buffer` should have the following format: `0x05hello0x05world`, where\nthe preceding byte indicates the following protocol name's length. Passing an\narray is usually much simplier: `['hello', 'world']`.\n        Protocols should be ordered by their priority.\n\n  - `passphrase`: A string of a passphrase for the private key.\n\n  - `rejectUnauthorized`: If `true` the server rejects any connection that is\nnot authorized with the list of supplied CAs. This option only has an effect if\n`requestCert` is `true`. This defaults to `false`.\n\n  - `requestCert`: If `true` the server requests a certificate from clients that\nconnect and attempt to verify that certificate. This defaults to `false`.\n\n  - `sessionIdContext`: A string containing an opaque identifier for session\nresumption. If `requestCert` is `true`, the default is an MD5 hash value\ngenerated from the command line. Otherwise, the default is not provided.\n\n  - `SNICallback`: A function that is called if the client supports the SNI TLS\nextension. Only one argument will be passed to it: `servername`. `SNICallback`\nshould return a SecureContext instance. You can use\n`crypto.createCredentials(...).context` to get a proper SecureContext. If\n`SNICallback` wasn't provided, a default callback within the high-level API is\nused (for more information, see below).","short_description":"Returns a new HTTPS web server object.\n","line":72,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"createServer","name_prefix":"https.","path":"https.createServer","outFile":"https.html#https.createServer"},{"id":"https.get","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Options to pass to the request\n\n"},{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The callback to execute once the method finishes \n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Options to pass to the request\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute once the method finishes \n\n"}],"description":"Exactly like [[http.get]] but for HTTPS.\n\nSince most requests are GET requests without bodies, Node.js provides this\nconvenience method. The only difference between this method and [[http.request\n`http.request()`]] is that it sets the method to GET and calls `req.end()`\nautomatically.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/https/https.get.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Exactly like [[http.get]] but for HTTPS.\n","line":186,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"get","name_prefix":"https.","path":"https.get","outFile":"https.html#https.get"},{"id":"https.globalAgent","type":"class property","signatures":[{"returns":[{"type":"https.Agent"}]}],"description":"A global instance of the [[https.Agent `https.Agent`]], which is used as the\ndefault for all HTTPS client requests.","short_description":"A global instance of the [[https.Agent `https.Agent`]], which is used as the\ndefault for all HTTPS client requests.","line":194,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"globalAgent","name_prefix":"https.","path":"https.globalAgent","outFile":"https.html#https.globalAgent"},{"id":"https.request","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object","String"],"description":"Any options you want to pass to the server. If a string, it's automatically parsed with [[url.parse]].\n\n"},{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The callback to execute\n\n"}]}],"arguments":[{"name":"options","types":["Object","String"],"description":"Any options you want to pass to the server. If a string, it's automatically parsed with [[url.parse]].\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute\n\n"}],"description":"Makes a request to a secure web server.\n\nAll options from [http.request `http.request()`]] are valid for `options`:\n\n- host: a domain name or IP address of the server to issue the request to.\nDefaults to `'localhost'`.\n- hostname: this supports `url.parse()`; `hostname` is preferred over `host`\n- port: the port of the remote server. Defaults to `80`.\n- socketPath: the Unix Domain Socket (use either `host:port` or `socketPath`)\n- method: a string specifying the HTTP request method. Defaults to `'GET'`.\n- path: the request path. Defaults to `'/'`. This should include a query string\n(if any) For example, `'/index.html?page=12'`\n- headers: an object containing request headers\n- auth: used for basic authentication. For example, `'user:password'` computes\nan Authorization header.\n- agent: this controls [[https.Agent `https.Agent`]] behavior. When an Agent is\nused, the request defaults to `Connection: keep-alive`. The possible values are:\n - `undefined`: uses [[http.globalAgent globalAgent]] for this host\n   and port (default).\n - `Agent` object: this explicitlys use the passed in `Agent`\n - `false`: this opts out of connection pooling with an Agent, and defaults the\nrequest to `Connection: close`.\n\nThe following options from [[tls.connect `tls.connect()`]] can also be\nspecified. However, a [[http.globalAgent globalAgent]] silently ignores these.\n\n - `pfx`: Certificate, private key, and CA certificates to use for SSL. The\n default is `null`.\n\n  - `key`: A string or `Buffer` containing the private key of the client in aPEM\nformat. The default is `null`.\n\n  - `passphrase`: A string of a passphrase for the private key or pfx. The\n  default is `null`.\n\n  - `cert`: A string or `Buffer` containing the certificate key of the client in\na PEM format; in other words, the public x509 certificate to use. The default is\n`null`.\n\n  - `ca`: An array of strings or `Buffer`s of trusted certificates. These are\nused to authorize connections. If this is omitted, several \"well-known root\" CAs\nwill be used, like VeriSign.\n\n- `ciphers`: A string describing the ciphers to use or exclude. Consult\n  <http://www.openssl.org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT> for\n  details on the format.\n\n- `rejectUnauthorized`: If `true`, the server certificate is verified against\n  the list of supplied CAs. An `'error'` event is emitted if verification\n  fails. Verification happens at the connection level, *before* the HTTP\n  request is sent. Default to `false`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/https/https.request_1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nHere's an example specifying these options using a custom `Agent`:\n\n    var options = {\n      host: 'encrypted.google.com',\n      port: 443,\n      path: '/',\n      method: 'GET',\n      key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),\n      cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem')\n    };\n    options.agent = new https.Agent(options);\n\n    var req = https.request(options, function(res) {\n      ...\n    }\n\nOr, if you choose not to use an `Agent`:\n\n    var options = {\n      host: 'encrypted.google.com',\n      port: 443,\n      path: '/',\n      method: 'GET',\n      key: fs.readFileSync('test/fixtures/keys/agent2-key.pem'),\n      cert: fs.readFileSync('test/fixtures/keys/agent2-cert.pem'),\n      agent: false\n    };\n\n    var req = https.request(options, function(res) {\n      ...\n    }","short_description":"Makes a request to a secure web server.\n","line":168,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"request","name_prefix":"https.","path":"https.request","outFile":"https.html#https.request"},{"id":"https.Server","type":"class","superclass":"https","description":"This class is a subclass of [[tls.Server `tls.Server`]] and emits the same\nevents as [[http.Server `http.Server`]].\n\nCreating HTTPS servers is somewhat complicated and requires generating\ncertificates.","short_description":"This class is a subclass of [[tls.Server `tls.Server`]] and emits the same\nevents as [[http.Server `http.Server`]].\n","line":231,"aliases":[],"children":[{"id":"https.Server.close","type":"class method","signatures":[{"arguments":[]}],"related_to":"http.Server.close","description":"Stops the server from accepting new connections.","short_description":"Stops the server from accepting new connections.","line":347,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"close","name_prefix":"https.Server.","path":"https.Server.close","outFile":"https.html#https.Server.close"},{"id":"https.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","optional":true,"types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","default_value":511,"optional":true,"types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}],"description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n\n**If using the `backlog` signature**: `backlog` is the maximum length of the queue of pending connections.\nThe actual length will be determined by your OS through sysctl settings such as\n`tcp_max_syn_backlog` and `somaxconn` on linux. The default value of this\nparameter is 511 (not 512).\n\n**If using the `handle` signature: `handle` can be set to either a server or socket (anything\nwith an underlying `_handle` member), or a `{fd: <n>}` object. It is presumed\nthat the file descriptor or handle has already been bound to a port or domain\nsocket. Listening on a file descriptor is not supported on Windows.\n\nThis function is asynchronous. The `callback()` is added as a listener for the\n[[net.Server@listening `'listening'`]] event of `net.Server`.","short_description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n","line":338,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"listen","name_prefix":"https.Server.","path":"https.Server.listen","outFile":"https.html#https.Server.listen"},{"id":"https.Server@checkContinue","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}],"description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n\nHandling this event involves calling `response.writeContinue` if the client\nshould continue to send the request body, or generating an appropriate HTTP\nresponse (_e.g._ `400 Bad Request`) if the client should not continue to send\nthe request body.\n\nNote: When this event is emitted and handled, the `request` event is not be emitted.","short_description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n","line":277,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"checkContinue","name_prefix":"https.Server@","path":"https.Server.event.checkContinue","outFile":"https.html#https.Server.event.checkContinue"},{"id":"https.Server@clientError","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}],"description":"If a client connection emits an `'error'` event, it's forwarded here.","short_description":"If a client connection emits an `'error'` event, it's forwarded here.","line":303,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"clientError","name_prefix":"https.Server@","path":"https.Server.event.clientError","outFile":"https.html#https.Server.event.clientError"},{"id":"https.Server@close","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when the server closes.","short_description":"Emitted when the server closes.","line":259,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"close","name_prefix":"https.Server@","path":"https.Server.event.close","outFile":"https.html#https.Server.event.close"},{"id":"https.Server@connection","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","short_description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","line":251,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"connection","name_prefix":"https.Server@","path":"https.Server.event.connection","outFile":"https.html#https.Server.event.connection"},{"id":"https.Server@request","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}],"description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","short_description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","line":241,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"request","name_prefix":"https.Server@","path":"https.Server.event.request","outFile":"https.html#https.Server.event.request"},{"id":"https.Server@upgrade","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}],"description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n\nAfter this event is emitted, the request's socket won't have a `data` event\nlistener, meaning you will need to bind to it in order to handle data sent to\nthe server on that socket.","short_description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n","line":293,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"upgrade","name_prefix":"https.Server@","path":"https.Server.event.upgrade","outFile":"https.html#https.Server.event.upgrade"}],"file":"0.8.14/nodejs_ref_guide/https.markdown","subclasses":[],"name":"Server","name_prefix":"https.","path":"https.Server","outFile":"https.html"},{"id":"https.Agent","type":"class","superclass":"https","description":"An `Agent` object for HTTPS, similar to [[http.Agent `http.Agent`]]. For more\ninformation, see [[https.request `https.request()`]].","short_description":"An `Agent` object for HTTPS, similar to [[http.Agent `http.Agent`]]. For more\ninformation, see [[https.request `https.request()`]].","line":204,"aliases":[],"children":[{"id":"https.Agent.maxSockets","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","short_description":"Determines how many concurrent sockets the agent can have open per host. By\ndefault, this is set to 5.","line":212,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"maxSockets","name_prefix":"https.Agent.","path":"https.Agent.maxSockets","outFile":"https.html#https.Agent.maxSockets"},{"id":"https.Agent.sockets","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","short_description":"An object which contains arrays of sockets currently in use by the Agent.\n**Don't modify this!**","line":220,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"sockets","name_prefix":"https.Agent.","path":"https.Agent.sockets","outFile":"https.html#https.Agent.sockets"}],"file":"0.8.14/nodejs_ref_guide/https.markdown","subclasses":[],"name":"Agent","name_prefix":"https.","path":"https.Agent","outFile":"https.html"},{"id":"https.Server","type":"class","superclass":"https","description":"This class is a subclass of [[tls.Server `tls.Server`]] and emits the same\nevents as [[http.Server `http.Server`]].\n\nCreating HTTPS servers is somewhat complicated and requires generating\ncertificates.","short_description":"This class is a subclass of [[tls.Server `tls.Server`]] and emits the same\nevents as [[http.Server `http.Server`]].\n","line":231,"aliases":[],"children":[{"id":"https.Server.close","type":"class method","signatures":[{"arguments":[]}],"related_to":"http.Server.close","description":"Stops the server from accepting new connections.","short_description":"Stops the server from accepting new connections.","line":347,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"close","name_prefix":"https.Server.","path":"https.Server.close","outFile":"https.html#https.Server.close"},{"id":"https.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","optional":true,"types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","default_value":511,"optional":true,"types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]},{"arguments":[{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to listen to\n\n"},{"name":"hostname","types":["String"],"description":"The hostname to listen to\n\n"},{"name":"backlog","types":["Number"],"description":"The maximum length of the queue of pending connections.\n\n"},{"name":"path","types":["String"],"description":"Listengs on the given path\n\n"},{"name":"handle","types":["Object"],"description":"Causes the server to accept connections on this specified handle.\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the server has been bound\n\n*to the port\n\n* (related to: net.Server.listen)\n\n"}],"description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n\n**If using the `backlog` signature**: `backlog` is the maximum length of the queue of pending connections.\nThe actual length will be determined by your OS through sysctl settings such as\n`tcp_max_syn_backlog` and `somaxconn` on linux. The default value of this\nparameter is 511 (not 512).\n\n**If using the `handle` signature: `handle` can be set to either a server or socket (anything\nwith an underlying `_handle` member), or a `{fd: <n>}` object. It is presumed\nthat the file descriptor or handle has already been bound to a port or domain\nsocket. Listening on a file descriptor is not supported on Windows.\n\nThis function is asynchronous. The `callback()` is added as a listener for the\n[[net.Server@listening `'listening'`]] event of `net.Server`.","short_description":"Begin accepting connections on the specified port and hostname. If the hostname\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). To listen to a Unix socket, supply a filename instead of port\nand hostname.\n","line":338,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"listen","name_prefix":"https.Server.","path":"https.Server.listen","outFile":"https.html#https.Server.listen"},{"id":"https.Server@checkContinue","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of `http.ServerRequest`\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of `http.ServerResponse`\n\n"}],"description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n\nHandling this event involves calling `response.writeContinue` if the client\nshould continue to send the request body, or generating an appropriate HTTP\nresponse (_e.g._ `400 Bad Request`) if the client should not continue to send\nthe request body.\n\nNote: When this event is emitted and handled, the `request` event is not be emitted.","short_description":"Emitted each time a request with an `http Expect: 100-continue` is received. If\nthis event isn't listened for, the server will automatically respond with a `100\nContinue` as appropriate.\n","line":277,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"checkContinue","name_prefix":"https.Server@","path":"https.Server.event.checkContinue","outFile":"https.html#https.Server.event.checkContinue"},{"id":"https.Server@clientError","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception being thrown\n\n"}],"description":"If a client connection emits an `'error'` event, it's forwarded here.","short_description":"If a client connection emits an `'error'` event, it's forwarded here.","line":303,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"clientError","name_prefix":"https.Server@","path":"https.Server.event.clientError","outFile":"https.html#https.Server.event.clientError"},{"id":"https.Server@close","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when the server closes.","short_description":"Emitted when the server closes.","line":259,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"close","name_prefix":"https.Server@","path":"https.Server.event.close","outFile":"https.html#https.Server.event.close"},{"id":"https.Server@connection","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An object of type [[net.Socket `net.Socket`]]\n\n"}],"description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","short_description":"Emitted when a new TCP stream is established. Usually users won't want to access\nthis event. The `socket` can also be accessed at\n[[http.ServerRequest.connection]].","line":251,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"connection","name_prefix":"https.Server@","path":"https.Server.event.connection","outFile":"https.html#https.Server.event.connection"},{"id":"https.Server@request","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"An instance of [[http.ServerRequest]]\n\n"},{"name":"response","types":["http.ServerResponse"],"description":"An instance of [[http.ServerResponse]]\n\n"}],"description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","short_description":"Emitted each time there is a request. Note that, in the case of keep-alive\nconnections, there may be multiple requests per connection.","line":241,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"request","name_prefix":"https.Server@","path":"https.Server.event.request","outFile":"https.html#https.Server.event.request"},{"id":"https.Server@upgrade","type":"event","signatures":[{"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}]}],"arguments":[{"name":"request","types":["http.ServerRequest"],"description":"The arguments for the http request, as it is in\n\n*the request event\n\n"},{"name":"socket","types":["Number"],"description":"The network socket between the server and client\n\n"},{"name":"head","types":["Buffer"],"description":"The first packet of the upgraded stream; this can be empty\n\n"}],"description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n\nAfter this event is emitted, the request's socket won't have a `data` event\nlistener, meaning you will need to bind to it in order to handle data sent to\nthe server on that socket.","short_description":"Emitted each time a client requests a http upgrade. If this event isn't listened\nfor, then clients requesting an upgrade will have their connections closed.\n","line":293,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/https.markdown","name":"upgrade","name_prefix":"https.Server@","path":"https.Server.event.upgrade","outFile":"https.html#https.Server.event.upgrade"}],"file":"0.8.14/nodejs_ref_guide/https.markdown","subclasses":[],"name":"Server","name_prefix":"https.","path":"https.Server","outFile":"https.html"}],"file":"0.8.14/nodejs_ref_guide/https.markdown","subclasses":["https.Agent","https.Server"],"name":"https","path":"https","outFile":"https.html"},{"id":"Modules","type":"class","description":"\nNode.js has a simple module loading system. In Node.js, files and modules are in\none-to-one correspondence.\n\nFor example, imagine a scenario where `foo.js` loads the module `circle.js` in\nthe same directory.\n\nThe contents of `foo.js` are:\n\n    var circle = require('./circle.js');\n    console.log( 'The area of a circle of radius 4 is '\n               + circle.area(4));\n\nThe contents of `circle.js` are:\n\n    var PI = Math.PI;\n\n    exports.area = function (r) {\n      return PI * r * r;\n    };\n\n    exports.circumference = function (r) {\n      return 2 * PI * r;\n    };\n\nThe module `circle.js` has exported the functions `area()` and\n`circumference()`.  To export an object, add to the special\n[`exports`](#module.exports) object.\n\nVariables local to a module are private. In this example, the variable `PI` is\nprivate to `circle.js`.\n\n#### Cycles\n\nWhenever there are circular `require()` calls, a module might not be done being\nexecuted when it is returned.\n\nConsider this situation with the following files. In `a.js':\n\n    console.log('a starting');\n    exports.done = false;\n    var b = require('./b.js');\n    console.log('in a, b.done = %j', b.done);\n    exports.done = true;\n    console.log('a done');\n\nIn `b.js`:\n\n    console.log('b starting');\n    exports.done = false;\n    var a = require('./a.js');\n    console.log('in b, a.done = %j', a.done);\n    exports.done = true;\n    console.log('b done');\n\nAnd in `main.js`:\n\n    console.log('main starting');\n    var a = require('./a.js');\n    var b = require('./b.js');\n    console.log('in main, a.done=%j, b.done=%j', a.done, b.done);\n\nWhen `main.js` loads `a.js`, `a.js` loads `b.js`. At that point, `b.js` tries to\nload `a.js`.  In order to prevent an infinite loop an \"unfinished copy\" of the\n`a.js` exports object is returned to the `b.js` module.  `b.js` then finishes\nloading, and its exports object is provided to the `a.js` module.\n\nBy the time `main.js` finishes loading both modules, they've both finished\nexecuting. The output of this program would thus be:\n\n    $ node main.js\n    main starting\n    a starting\n    b starting\n    in b, a.done = false\n    b done\n    in a, b.done = true\n    a done\n    in main, a.done=true, b.done=true\n\nIf you have cyclic module dependencies in your program, make sure to plan\naccordingly.\n\n#### Core Modules\n\nNode.js has several modules compiled into the binary. These modules are\ndescribed in greater detail elsewhere in this documentation.\n\nThe core modules are defined in Node's source in the `lib/` folder.\n\nCore modules are always preferentially loaded if their identifier is passed to\n`require()`.  For instance, `require('http')` always returns the built in HTTP\nmodule, even if there is a file by that name.\n\n#### File Modules\n\nIf the exact filename is not found, then Node.js attempts to load the required\nfilename with the added extension of `.js`, `.json`, and then `.node`.\n\n`.js` files are interpreted as JavaScript text files, and `.json` files are\nparsed as JSON text files. `.node` files are interpreted as compiled addon\nmodules loaded with `dlopen`.\n\nA module prefixed with `'/'` is an absolute path to the file.  For example,\n`require('/home/marco/foo.js')` loads the file at `/home/marco/foo.js`.\n\nA module prefixed with `'./'` is relative to the file calling `require()`. That\nis, `circle.js` must be in the same directory as `foo.js` for\n`require('./circle')` to find it.\n\nWithout a leading `'/'` or `'./'` to indicate a file, the module is either a\n\"core module\" or is loaded from the `node_modules` folder.\n\nFor example, if the file at `'/home/ry/projects/foo.js'` is called by\n`require('bar.js')`, then Node.js looks for it in the following locations, in\nthis order:\n\n* `/home/ry/projects/node_modules/bar.js`\n* `/home/ry/node_modules/bar.js`\n* `/home/node_modules/bar.js`\n* `/node_modules/bar.js`\n\nThis allows programs to localize their dependencies, so that they don't clash.\n\nIf the given path does not exist, `require()` throws an Error with its\n`code` property set to `'MODULE_NOT_FOUND'`.\n\n#### Folders as Modules\n\nIt is convenient to organize programs and libraries into self-contained\ndirectories, and then provide a single entry point to that library.\n\nThere are three ways in which a folder may be passed to `require()` as an\nargument.\n\nThe first is to create a `package.json` file in the root of the folder, which\nspecifies a `main` module.  An example `package.json` file might look like this:\n\n    { \"name\" : \"some-library\",\n      \"main\" : \"./lib/some-library.js\" }\n\nIf this was in a folder at `./some-library`, then `require('./some-library')`\nwould attempt to load `./some-library/lib/some-library.js`.\n\nThis is the extent of Node's awareness of `package.json` files.\n\nIf there is no `package.json` file present in the directory, then Node.js\nattempts to load an `index.js` or `index.node` file out of that directory.  For\nexample, if there was no `package.json` file in the above example, then\n`require('./some-library')` would attempt to load:\n\n* `./some-library/index.js`\n* `./some-library/index.node`\n\n#### Caching\n\nModules are cached after the first time they are loaded.  This means (among\nother things) that every call to `require('foo')` gets exactly the same object\nreturned, if it would resolve to the same file.\n\nMultiple calls to `require('foo')` may not cause the module code to be executed\nmultiple times.  This is an important feature.  With it, \"partially done\"\nobjects can be returned, thus allowing transitive dependencies to be loaded even\nwhen they would cause cycles.\n\nIf you want to have a module execute code multiple times, then export a\nfunction, and call that function.\n\n#### Module Caching Caveats\n\nModules are cached based on their resolved filename.  Since modules may resolve\nto a different filename based on the location of the calling module (loading\nfrom `node_modules` folders), it is not a guarantee that `require('foo')` always\nreturns the exact same object, if it would resolve to different files.\n\n#### The `module` Object\n\nIn each module, the `module` variable is a reference to the object representing\nthe current module. In particular, `module.exports` is the same as the `exports`\nobject.\n\n`module` isn't actually a global, but rather local to each module.\n\n<a id=\"module.exports\"></a>\n\nThe `exports` object is created by the Module system. Sometimes, this is not\nacceptable, as some developers want their module to be an instance of some\nclass.\n\nTo do this assign the desired export object to `module.exports`. For example\nsuppose we were making a module called `a.js`\n\n    var EventEmitter = require('events').EventEmitter;\n\n    module.exports = new EventEmitter();\n\n    // Do some work, and after some time emit\n    // the 'ready' event from the module itself.\n    setTimeout(function() {\n      module.exports.emit('ready');\n    }, 1000);\n\nThen, in another file we could do\n\n    var a = require('./a');\n    a.on('ready', function() {\n      console.log('module a is ready');\n    });\n\n\nNote that the assignment to `module.exports` must be done immediately. It can't\nbe done in any callbacks. For example, this does not work:\n\nIn a file called `x.js`:\n\n    setTimeout(function() {\n      module.exports = { a: \"hello\" };\n    }, 0);\n\nIn a file called `y.js`:\n\n    var x = require('./x');\n    console.log(x.a);\n\n\n#### All Together Now\n\nTo get the exact filename that will be loaded when `require()` is called, use\nthe `require.resolve()` function.\n\nPutting together all of the above, here is the high-level algorithm (in\npseudocode) of what `require.resolve()` does:\n\n<dl>\n<dt>To `require(X)` from module at path Y:</dt>\n<dd>\n    <pre>\n    1. If X is a core module,\n        a. return the core module\n        b. STOP\n    2. If X begins with './' or '/' or '../'\n        a. LOAD_AS_FILE(Y + X)\n        b. LOAD_AS_DIRECTORY(Y + X)\n    3. LOAD_NODE_MODULES(X, dirname(Y))\n    4. THROW \"not found\"\n    </pre>\n</dd>\n<dt>To `LOAD_AS_FILE(X)`:</dt>\n<dd>\n    <pre>\n    1. If X is a file, load X as JavaScript text.  STOP\n    2. If X.js is a file, load X.js as JavaScript text.  STOP\n    3. If X.node is a file, load X.node as binary addon.  STOP\n    </pre>\n<dd>\n<dt>To `LOAD_AS_DIRECTORY(X)`:</dt>\n<dd>\n    <pre>\n    1. If X/package.json is a file,\n       a. Parse X/package.json, and look for \"main\" field.\n       b. let M = X + (json main field)\n       c. LOAD_AS_FILE(M)\n    2. If X/index.js is a file, load X/index.js as JavaScript text.  STOP\n    3. If X/index.node is a file, load X/index.node as binary addon.  STOP\n    </pre>\n</dd>\n<dt>To `LOAD_NODE_MODULES(X, START)`: </dt>\n<dd>\n    <pre>\n    1. let DIRS=NODE_MODULES_PATHS(START)\n    2. for each DIR in DIRS:\n       a. LOAD_AS_FILE(DIR/X)\n       b. LOAD_AS_DIRECTORY(DIR/X)\n    </pre>\n</dd>\n<dt>To `NODE_MODULES_PATHS(START)`: </dt>\n<dd>\n    <pre>\n    1. let PARTS = path split(START)\n    2. let ROOT = index of first instance of \"node_modules\" in PARTS, or 0\n    3. let I = count of PARTS - 1\n    4. let DIRS = []\n    5. while I > ROOT,\n       a. if PARTS[I] = \"node_modules\" CONTINUE\n       c. DIR = path join(PARTS[0 .. I] + \"node_modules\")\n       b. DIRS = DIRS + DIR\n       c. let I = I - 1\n    6. return DIRS\n    </pre>\n</dd>\n\n#### Loading from the global folders\n\nIf the `NODE_PATH` environment variable is set to a colon-delimited list of\nabsolute paths, then Node.js searches those paths for modules if they are not\nfound elsewhere. (Note: On Windows, `NODE_PATH` is delimited by semicolons\ninstead of colons.)\n\nAdditionally, Node.js searches in the following locations:\n\n* 1: `$HOME/.node_modules`\n* 2: `$HOME/.node_libraries`\n* 3: `$PREFIX/lib/node`\n\nWhere `$HOME` is the user's home directory, and `$PREFIX` is Node's configured\n`node_prefix`.\n\nThese are mostly for historic reasons. You are highly encouraged to place your\ndependencies locally in `node_modules` folders.  They will be loaded faster, and\nmore reliably.\n\n#### Accessing the `main` module\n\nWhen a file is run directly from Node.js, `require.main` is set to its `module`.\nThat means that you can determine whether a file has been run directly by\ntesting for the following:\n\n    require.main === module\n\nFor a file `foo.js`, this is `true` if run via `node foo.js`, but `false` if run\nby `require('./foo')`.\n\nBecause `module` provides a `filename` property (normally equivalent to\n`__filename`), the entry point of the current application can be obtained by\nchecking `require.main.filename`.\n\n#### Package Manager Tips\n\nThe semantics of Node's `require()` function were designed to be general enough\nto support a number of sane directory structures. Package manager programs such\nas `dpkg`, `rpm`, and `npm` will hopefully find it possible to build native\npackages from Node modules without modification.\n\nBelow we give a suggested directory structure that could work:\n\nLet's say that we wanted to have the folder at\n`/usr/lib/node/<some-package>/<some-version>` hold the contents of a specific\nversion of a package.\n\nPackages can depend on one another. In order to install package `foo`, you may\nhave to install a specific version of package `bar`.  The `bar` package may\nitself have dependencies, and in some cases, these dependencies may even collide\nor form cycles.\n\nSince Node.js looks up the `realpath` of any modules it loads (that is, resolves\nsymlinks), and then looks for their dependencies in the `node_modules` folders\nas described above, this situation is very simple to resolve with the following\narchitecture:\n\n* `/usr/lib/node/foo/1.2.3/` - Contents of the `foo` package, version 1.2.3.\n* `/usr/lib/node/bar/4.3.2/` - Contents of the `bar` package that `foo` depends\non.\n* `/usr/lib/node/foo/1.2.3/node_modules/bar` - Symbolic link to\n`/usr/lib/node/bar/4.3.2/`.\n* `/usr/lib/node/bar/4.3.2/node_modules/*` - Symbolic links to the packages that\n`bar` depends on.\n\nThus, even if a cycle is encountered, or if there are dependency conflicts,\nevery module will be able to get a version of its dependency that it can use.\n\nWhen the code in the `foo` package does `require('bar')`, it gets the version\nthat is symlinked into `/usr/lib/node/foo/1.2.3/node_modules/bar`. Then, when\nthe code in the `bar` package calls `require('quux')`, it gets the version that\nis symlinked into `/usr/lib/node/bar/4.3.2/node_modules/quux`.\n\nFurthermore, to make the module lookup process even more optimal, rather than\nputting packages directly in `/usr/lib/node`, we could put them in\n`/usr/lib/node_modules/<name>/<version>`.  Then Node.js doesn't bother looking\nfor missing dependencies in `/usr/node_modules` or `/node_modules`.\n\nIn order to make modules available to the Node.js REPL, it might be useful to\nalso add the `/usr/lib/node_modules` folder to the `$NODE_PATH` environment\nvariable.  Since the module lookups using `node_modules` folders are all\nrelative, and based on the real path of the files making the calls to\n`require()`, the packages themselves can be anywhere.","stability":"5 - Locked","short_description":"\nNode.js has a simple module loading system. In Node.js, files and modules are in\none-to-one correspondence.\n","line":382,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/modules.markdown","subclasses":[],"name":"Modules","path":"Modules","outFile":"modules.html"},{"id":"net","type":"class","description":"\nThe `net` module provides you with an asynchronous network wrapper. It contains\nmethods for creating both servers and clients (called streams). You can include\nthis module in your code with `require('net');`\n\n\n#### Example\n\nHere is an example of an echo server which listens for connections on port 8124:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/net/net.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nYou can test this by using `telnet`:\n\n    telnet localhost 8124\n\nTo listen on the socket `/tmp/echo.sock` the third line from the last would just\nbe changed to\n\n    server.listen('/tmp/echo.sock', function() { //'listening' listener\n\nYou can use `nc` to connect to a UNIX domain socket server:\n\n    nc -U /tmp/echo.sock","stability":"3 - Stable","short_description":"\nThe `net` module provides you with an asynchronous network wrapper. It contains\nmethods for creating both servers and clients (called streams). You can include\nthis module in your code with `require('net');`\n","line":31,"aliases":[],"children":[{"id":"net.connect","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Properties to pass to the connection\n\n"},{"name":"connectionListener","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Properties to pass to the connection\n\n"},{"name":"connectionListener","types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n\n\n"}],"alias_of":"net.createConnection","description":"Constructs a new socket object, and opens the socket to the given location.\nWhen the socket is established, the [[net.connect `'connect'`]] event is emitted.\n\nFor TCP sockets, the `options` argument should be an object which specifies:\n\n  - `port`: Port the client should connect to (Required).\n\n  - `host`: Host the client should connect to. Defaults to `'localhost'`.\n\n  - `localAddress`: Local interface to bind to for network connections.\n\nFor UNIX domain sockets, the `options` argument should be an object that specifies:\n\n  - `path`: Path the client should connect to (Required).\n\nOther common options include:\n\n  - `allowHalfOpen`: if `true`, the socket won't automatically send\n    a FIN packet when the other end of the socket sends a FIN packet.\n    Defaults to `false`.  See ['end'][] event for more information.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/net/net.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Constructs a new socket object, and opens the socket to the given location.\nWhen the socket is established, the [[net.connect `'connect'`]] event is emitted.\n","line":82,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connect","name_prefix":"net.","path":"net.connect","outFile":"net.html#net.connect"},{"id":"net.createConnection","type":"class method","signatures":[{"arguments":[{"name":"options"},{"name":"connectionListener","arguments":[],"callback":true,"optional":true}]}],"alias_of":"net.createServer","description":"","short_description":"","line":88,"aliases":["net.connect"],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"createConnection","name_prefix":"net.","path":"net.createConnection","outFile":"net.html#net.createConnection"},{"id":"net.createServer","type":"class method","signatures":[{"arguments":[{"name":"options","default_value":{"allowHalfOpen":false},"optional":true,"types":["Object"],"description":"An object with any options you want to include\n\n"},{"name":"connectionListener","optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"An object with any options you want to include\n\n"},{"name":"connectionListener","types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n"}],"description":"Creates a new TCP server.\n\nIf `allowHalfOpen` is `true`, then the socket won't automatically send FIN\npacket when the other end of the socket sends a FIN packet. The socket becomes\nnon-readable, but still writable. You should call the `end()` method explicitly.\nSee [[net.Socket@end `'end'`]] event for more information.","short_description":"Creates a new TCP server.\n","line":47,"aliases":["net.createConnection"],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"createServer","name_prefix":"net.","path":"net.createServer","outFile":"net.html#net.createServer"},{"id":"net.isIP","type":"class method","signatures":[{"arguments":[{"name":"input","types":["String"],"description":"The data to check against\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"input","types":["String"],"description":"The data to check against\n\n"}],"description":"Tests if `input` is an IP address. Returns `0` for invalid strings, returns `4`\nfor IP version 4 addresses, and returns `6` for IP version 6 addresses.","short_description":"Tests if `input` is an IP address. Returns `0` for invalid strings, returns `4`\nfor IP version 4 addresses, and returns `6` for IP version 6 addresses.","line":98,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"isIP","name_prefix":"net.","path":"net.isIP","outFile":"net.html#net.isIP"},{"id":"net.isIPv4","type":"class method","signatures":[{"arguments":[{"name":"input","types":["String"],"description":"The data to check against\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"input","types":["String"],"description":"The data to check against\n\n"}],"description":"Returns `true` if input is a version 4 IP address.","short_description":"Returns `true` if input is a version 4 IP address.","line":106,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"isIPv4","name_prefix":"net.","path":"net.isIPv4","outFile":"net.html#net.isIPv4"},{"id":"net.isIPv6","type":"class method","signatures":[{"arguments":[{"name":"input","types":["String"],"description":"The data to check against\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"input","types":["String"],"description":"The data to check against\n\n"}],"description":"Returns `true` if input is a version 6 IP address.","short_description":"Returns `true` if input is a version 6 IP address.","line":114,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"isIPv6","name_prefix":"net.","path":"net.isIPv6","outFile":"net.html#net.isIPv6"},{"id":"net.Server","type":"class","superclass":"net","description":"This class is used to create a TCP or UNIX server. A server is a `net.Socket`\nthat can listen for new incoming connections.","short_description":"This class is used to create a TCP or UNIX server. A server is a `net.Socket`\nthat can listen for new incoming connections.","line":122,"aliases":[],"children":[{"id":"net.Server.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns the bound address, the address family name, and port of the server as\nreported by the operating system. Useful to find which port was assigned when\ngiving getting an OS-assigned address.\n\nThis returns an object with three properties, like this:\n\n    {\"address\":\"127.0.0.1\", family: \"IPv4\", \"port\":2121}`\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/net/net.server.address.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns the bound address, the address family name, and port of the server as\nreported by the operating system. Useful to find which port was assigned when\ngiving getting an OS-assigned address.\n","line":242,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"address","name_prefix":"net.Server.","path":"net.Server.address","outFile":"net.html#net.Server.address"},{"id":"net.Server.close","type":"class method","signatures":[{"arguments":[{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"A function to call once the server closes\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"A function to call once the server closes\n\n"}],"description":"Stops the server from accepting new connections. This function is asynchronous,\nand  the server is finally closed when it emits a `'close' event.","short_description":"Stops the server from accepting new connections. This function is asynchronous,\nand  the server is finally closed when it emits a `'close' event.","line":225,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"close","name_prefix":"net.Server.","path":"net.Server.close","outFile":"net.html#net.Server.close"},{"id":"net.Server.connections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of concurrent connections on the server.\n\nThis becomes `null` when sending a socket to a child with\n[[child_process.fork `child_process.fork()`]].","short_description":"The number of concurrent connections on the server.\n","line":263,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connections","name_prefix":"net.Server.","path":"net.Server.connections","outFile":"net.html#net.Server.connections"},{"id":"net.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","optional":true,"types":["String"],"description":"The name of the host to connect to\n\n"},{"name":"backlog","default_value":511,"optional":true,"types":["Number"],"description":"The maximum length of the queue of pending connection\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"}]},{"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"}]},{"arguments":[{"name":"handle","types":["Object"],"description":"Either a server or socket (anything with an underlying \n\n*`_handle` member), or a `{fd: <n>}` object\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","types":["String"],"description":"The name of the host to connect to\n\n"},{"name":"backlog","types":["Number"],"description":"The maximum length of the queue of pending connection\n\n"},{"name":"callback","types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"},{"name":"handle","types":["Object"],"description":"Either a server or socket (anything with an underlying \n\n*`_handle` member), or a `{fd: <n>}` object\n\n"}],"description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). A port value of zero will assign a random port.\n\n**If using the `backlog` signature**: The actual length for `backlog` is\ndetermined by your OS through sysctl` settings such as `tcp_max_syn_backlog` and\n`somaxconn` on linux. The default value of this parameter is 511 (not 512).\n\n**If using the `handle` signature: This causes the server to accept connections\non the specified handle, but it is presumed that the file descriptor or handle\nhas already been bound to a port or domain socket.\n\nListening on a file descriptor is not supported on Windows.\n\nThe `callback()` is added as a listener for the\n[[net.Server@listening `net.Server`'s `'listening'`]] event.\n\nOne issue some users run into is getting `EADDRINUSE` errors. This means that\nanother server is already running on the requested port. One way of handling\nthis would be to wait a second and then try again. This can be done with\n\n    server.on('error', function (e) {\n      if (e.code == 'EADDRINUSE') {\n        console.log('Address in use, retrying...');\n        setTimeout(function () {\n          server.close();\n          server.listen(PORT, HOST);\n        }, 1000);\n      }\n    });\n\nNote: All sockets in Node.js set `SO_REUSEADDR` already.","short_description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). A port value of zero will assign a random port.\n","line":205,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"listen","name_prefix":"net.Server.","path":"net.Server.listen","outFile":"net.html#net.Server.listen"},{"id":"net.Server.maxConnections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Set this property to reject connections when the server's connection count gets\nhigh.\n\nWarning: It is not recommended to use this option once a socket has been sent to\na child with [[child_process.fork `child_process.fork()`]].","short_description":"Set this property to reject connections when the server's connection count gets\nhigh.\n","line":253,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"maxConnections","name_prefix":"net.Server.","path":"net.Server.maxConnections","outFile":"net.html#net.Server.maxConnections"},{"id":"net.Server.pause","type":"class method","signatures":[{"arguments":[{"name":"msecs","default_value":1000,"types":["Number"],"description":"The number of milliseconds to pause for\n\n"}]}],"arguments":[{"name":"msecs","types":["Number"],"description":"The number of milliseconds to pause for\n\n"}],"description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","short_description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","line":215,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"pause","name_prefix":"net.Server.","path":"net.Server.pause","outFile":"net.html#net.Server.pause"},{"id":"net.Server@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the server closes. Note that if connections exist, this event is\nnot emitted until all connections are ended.","short_description":"Emitted when the server closes. Note that if connections exist, this event is\nnot emitted until all connections are ended.","line":147,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"close","name_prefix":"net.Server@","path":"net.Server.event.close","outFile":"net.html#net.Server.event.close"},{"id":"net.Server@connection","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An instance of `net.Socket`\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An instance of `net.Socket`\n\n"}],"description":"Emitted when a new connection is made.","short_description":"Emitted when a new connection is made.","line":139,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connection","name_prefix":"net.Server@","path":"net.Server.event.connection","outFile":"net.html#net.Server.event.connection"},{"id":"net.Server@error","type":"event","signatures":[{"arguments":[{"name":"exception"}]}],"description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.  See an example in the discussion of [[net.Server.listen\n`net.Server.listen`]]","short_description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.  See an example in the discussion of [[net.Server.listen\n`net.Server.listen`]]","line":157,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"error","name_prefix":"net.Server@","path":"net.Server.event.error","outFile":"net.html#net.Server.event.error"},{"id":"net.Server@listening","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the server has been bound after calling `server.listen`.","short_description":"Emitted when the server has been bound after calling `server.listen`.","line":131,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"listening","name_prefix":"net.Server@","path":"net.Server.event.listening","outFile":"net.html#net.Server.event.listening"}],"file":"0.8.14/nodejs_ref_guide/net.markdown","subclasses":[],"name":"Server","name_prefix":"net.","path":"net.Server","outFile":"net.html"},{"id":"net.Socket","type":"class","superclass":"net","description":"This object is an abstraction of a TCP or UNIX socket. `net.Socket` instances\nimplement a duplex Stream interface.  They can be created by the user and used\nas a client (with `connect()`) or they can be created by Node.js and passed to\nthe user through the `'connection'` event of a server.","short_description":"This object is an abstraction of a TCP or UNIX socket. `net.Socket` instances\nimplement a duplex Stream interface.  They can be created by the user and used\nas a client (with `connect()`) or they can be created by Node.js and passed to\nthe user through the `'connection'` event of a server.","line":274,"aliases":[],"children":[{"id":"net.Socket.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"returns":[{"type":"Object","description":"An object with three properties, that looks like this:\n\n*`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`\n\n"}],"description":"Returns the bound address, the address family name, and port of the socket as\nreported by the operating system.","short_description":"Returns the bound address, the address family name, and port of the socket as\nreported by the operating system.","line":479,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"address","name_prefix":"net.Socket.","path":"net.Socket.address","outFile":"net.html#net.Socket.address"},{"id":"net.Socket.bufferSize","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"`net.Socket` has the property that `socket.write()` always works. This is to\nhelp users get up and running quickly. The computer can't always keep up with\nthe amount of data that is written to a socket—the network connection simply\nmight be too slow. Node.js will internally queue up the data written to a socket\nand send it out over the wire whenever it's possible. (Internally, it's polling\non the socket's file descriptor for being writable.)\n\nThe consequence of this internal buffering is that memory may grow. This\nproperty shows the number of characters currently buffered to be written.  The\nnumber of characters is approximately equal to the number of bytes to be\nwritten, but the buffer may contain strings, and the strings are lazily encoded,\nso the _exact_ number of bytes is not known.\n\nNote: Users who experience a large or growing `bufferSize` should attempt\nto \"throttle\" the data flows in\ntheir program with  `pause()` and `resume()`.","short_description":"`net.Socket` has the property that `socket.write()` always works. This is to\nhelp users get up and running quickly. The computer can't always keep up with\nthe amount of data that is written to a socket—the network connection simply\nmight be too slow. Node.js will internally queue up the data written to a socket\nand send it out over the wire whenever it's possible. (Internally, it's polling\non the socket's file descriptor for being writable.)\n","line":347,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"bufferSize","name_prefix":"net.Socket.","path":"net.Socket.bufferSize","outFile":"net.html#net.Socket.bufferSize"},{"id":"net.Socket.bytesRead","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The amount of received bytes.","short_description":"The amount of received bytes.","line":501,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"bytesRead","name_prefix":"net.Socket.","path":"net.Socket.bytesRead","outFile":"net.html#net.Socket.bytesRead"},{"id":"net.Socket.bytesWritten","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The amount of bytes sent.","short_description":"The amount of bytes sent.","line":509,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"bytesWritten","name_prefix":"net.Socket.","path":"net.Socket.bytesWritten","outFile":"net.html#net.Socket.bytesWritten"},{"id":"net.Socket.close","type":"class method","signatures":[{"arguments":[{"name":"had_error","types":["Boolean"],"description":"A `true` boolean if the socket was closed due to a\n\n*transmission error\n\n"}]}],"arguments":[{"name":"had_error","types":["Boolean"],"description":"A `true` boolean if the socket was closed due to a\n\n*transmission error\n\n"}],"description":"Emitted once the socket is fully closed.","short_description":"Emitted once the socket is fully closed.","line":581,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"close","name_prefix":"net.Socket.","path":"net.Socket.close","outFile":"net.html#net.Socket.close"},{"id":"net.Socket.connect","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","default_value":"localhost","optional":true,"types":["String"],"description":"The name of the host to connect to; it's entirely optional, as\n\n*you can just use `(port, connectListener)` if you wish\n\n"},{"name":"connectionListener","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","types":["String"],"description":"The name of the host to connect to; it's entirely optional, as\n\n*you can just use `(port, connectListener)` if you wish\n\n"},{"name":"connectionListener","types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n"}],"description":"Opens the connection for a given socket. If `port` and `host` are given, then\nthe socket is opened as a TCP socket. If a `path` is given, the socket is opened\nas a Unix socket to that path.\n\nNormally this method isn't needed, as `net.createConnection()` opens the socket.\nUse this only if you are implementing a custom Socket or if a Socket is closed\nand you want to reuse it to connect to another server.\n\nThis function is asynchronous. When the [[net.Socket@connect `'connect'`]] event\n is emitted the socket is established. If there is a problem connecting, the\n `'connect'` event  isn't emitted,  and the `'error'` event is emitted with the\n exception.","short_description":"Opens the connection for a given socket. If `port` and `host` are given, then\nthe socket is opened as a TCP socket. If a `path` is given, the socket is opened\nas a Unix socket to that path.\n","line":324,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connect","name_prefix":"net.Socket.","path":"net.Socket.connect","outFile":"net.html#net.Socket.connect"},{"id":"net.Socket.destroy","type":"class method","signatures":[{"arguments":[]}],"description":"Ensures that no more I/O activity happens on this socket. Only necessary in case\nof errors (like with a parse error).","short_description":"Ensures that no more I/O activity happens on this socket. Only necessary in case\nof errors (like with a parse error).","line":406,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"destroy","name_prefix":"net.Socket.","path":"net.Socket.destroy","outFile":"net.html#net.Socket.destroy"},{"id":"net.Socket.drain","type":"class method","signatures":[{"arguments":[]}],"related_to":"net.Socket.write","description":"Emitted when the write buffer becomes empty. Can be used to throttle uploads.","short_description":"Emitted when the write buffer becomes empty. Can be used to throttle uploads.","line":563,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"drain","name_prefix":"net.Socket.","path":"net.Socket.drain","outFile":"net.html#net.Socket.drain"},{"id":"net.Socket.end","type":"class method","signatures":[{"arguments":[{"name":"data","optional":true,"types":["String"],"description":"The data to write first\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding to use\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to write first\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"}],"description":"Half-closes the socket, _i.e._, it sends a FIN packet. It is possible the server\ncan still send some data.\n\nIf `data` is specified, it's equivalent to calling `socket.write(data,\nencoding)` followed by `socket.end()`.","short_description":"Half-closes the socket, _i.e._, it sends a FIN packet. It is possible the server\ncan still send some data.\n","line":398,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"end","name_prefix":"net.Socket.","path":"net.Socket.end","outFile":"net.html#net.Socket.end"},{"id":"net.Socket.error","type":"class method","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"Any exceptions encountered\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"Any exceptions encountered\n\n"}],"description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.","short_description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.","line":572,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"error","name_prefix":"net.Socket.","path":"net.Socket.error","outFile":"net.html#net.Socket.error"},{"id":"new net.Socket","type":"constructor","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"An object of options you can pass\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"An object of options you can pass\n\n"}],"description":"Constructs a new socket object.\n\n`options` is an object with the following defaults:\n\n    {\n      fd: null\n      type: null\n      allowHalfOpen: false\n    }\n\nwhere\n\n* `fd` allows you to specify the existing file descriptor of socket.\n* `type` specifies the underlying protocol. It can be `'tcp4'`, `'tcp6'`, or\n`'unix'`.\n* `allowHalfOpen` is a boolean indicating how the socket should end. For more\ninformation, see the [[net.createServer `createServer()`]] method and the\n[[net.Socket@end `'end'`]] event.","short_description":"Constructs a new socket object.\n","line":300,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"new","name_prefix":"net.Socket.","path":"net.Socket.new","outFile":"net.html#net.Socket.new"},{"id":"net.Socket.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses the reading of data. That is, `'data'` events are no longer emitted.\nUseful to throttle back an upload.","short_description":"Pauses the reading of data. That is, `'data'` events are no longer emitted.\nUseful to throttle back an upload.","line":415,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"pause","name_prefix":"net.Socket.","path":"net.Socket.pause","outFile":"net.html#net.Socket.pause"},{"id":"net.Socket.remoteAddress","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","short_description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","line":487,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"remoteAddress","name_prefix":"net.Socket.","path":"net.Socket.remoteAddress","outFile":"net.html#net.Socket.remoteAddress"},{"id":"net.Socket.remotePort","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The numeric representation of the remote port. For example, `80` or `21`.","short_description":"The numeric representation of the remote port. For example, `80` or `21`.","line":494,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"remotePort","name_prefix":"net.Socket.","path":"net.Socket.remotePort","outFile":"net.html#net.Socket.remotePort"},{"id":"net.Socket.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes reading after a call to `pause()`.","short_description":"Resumes reading after a call to `pause()`.","line":422,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"resume","name_prefix":"net.Socket.","path":"net.Socket.resume","outFile":"net.html#net.Socket.resume"},{"id":"net.Socket.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"null","optional":true,"types":["String"],"description":"The encoding to use (either `'ascii'`, `'utf8'`, or\n\n*`'base64'`)\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use (either `'ascii'`, `'utf8'`, or\n\n*`'base64'`)\n\n"}],"description":"Sets the encoding for the socket as a Readable Stream.\n\nFor more information, see\n[[stream.ReadableStream.setEncoding `stream.ReadableStream.setEncoding()`]].","short_description":"Sets the encoding for the socket as a Readable Stream.\n","line":359,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setEncoding","name_prefix":"net.Socket.","path":"net.Socket.setEncoding","outFile":"net.html#net.Socket.setEncoding"},{"id":"net.Socket.setKeepAlive","type":"class method","signatures":[{"arguments":[{"name":"enable","default_value":false,"optional":true,"types":["Boolean"],"description":"Enables or disables whether to stay alive\n\n"},{"name":"initialDelay","default_value":0,"optional":true,"types":["Number"],"description":"The delay (in milliseconds) between the last data\n\n*packet received and the first keepalive probe\n\n"}]}],"arguments":[{"name":"enable","types":["Boolean"],"description":"Enables or disables whether to stay alive\n\n"},{"name":"initialDelay","types":["Number"],"description":"The delay (in milliseconds) between the last data\n\n*packet received and the first keepalive probe\n\n"}],"description":"Enable and disable keep-alive functionality, and optionally set the initial\ndelay before the first keepalive probe is sent on an idle socket.\n\nSetting `initialDelay` to 0 for leaves the value unchanged from the default (or\nprevious) setting.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/net/net.server.address.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Enable and disable keep-alive functionality, and optionally set the initial\ndelay before the first keepalive probe is sent on an idle socket.\n","line":469,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setKeepAlive","name_prefix":"net.Socket.","path":"net.Socket.setKeepAlive","outFile":"net.html#net.Socket.setKeepAlive"},{"id":"net.Socket.setNoDelay","type":"class method","signatures":[{"arguments":[{"name":"noDelay","default_value":true,"optional":true,"types":["Boolean"],"description":"If `true`, immediately fires off data each time\n\n*`socket.write()` is called.\n\n"}]}],"arguments":[{"name":"noDelay","types":["Boolean"],"description":"If `true`, immediately fires off data each time\n\n*`socket.write()` is called.\n\n"}],"description":"Disables [the Nagle algorithm](http://en.wikipedia.org/wiki/Nagle's_algorithm).\nBy default TCP connections use the Nagle algorithm, they buffer data before\nsending it off.","short_description":"Disables [the Nagle algorithm](http://en.wikipedia.org/wiki/Nagle's_algorithm).\nBy default TCP connections use the Nagle algorithm, they buffer data before\nsending it off.","line":450,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setNoDelay","name_prefix":"net.Socket.","path":"net.Socket.setNoDelay","outFile":"net.html#net.Socket.setNoDelay"},{"id":"net.Socket.setSecure","type":"class method","signatures":[{"arguments":[]}],"deprecated":{"since":"0.3.0"},"description":"This function was used to upgrade the connection to SSL/TLS. See the [[tls TLS]]\nsection for the new API.","short_description":"This function was used to upgrade the connection to SSL/TLS. See the [[tls TLS]]\nsection for the new API.","line":370,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setSecure","name_prefix":"net.Socket.","path":"net.Socket.setSecure","outFile":"net.html#net.Socket.setSecure"},{"id":"net.Socket.setTimeout","type":"class method","signatures":[{"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length (in milliseconds)\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute as a one time listener for the\n\n*`'timeout'` event.\n\n"}]}],"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length (in milliseconds)\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute as a one time listener for the\n\n*`'timeout'` event.\n\n"}],"description":"Sets the socket to timeout after `timeout` milliseconds of inactivity on the\nsocket. By default `net.Socket` don't have a timeout.\n\nWhen an idle timeout is triggered the socket will receive a `'timeout'` event\nbut the connection will not be severed. The user must manually `end()` or\n`destroy()` the socket.\n\nIf `timeout` is 0, then the existing idle timeout is disabled.","short_description":"Sets the socket to timeout after `timeout` milliseconds of inactivity on the\nsocket. By default `net.Socket` don't have a timeout.\n","line":439,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setTimeout","name_prefix":"net.Socket.","path":"net.Socket.setTimeout","outFile":"net.html#net.Socket.setTimeout"},{"id":"net.Socket.timeout","type":"class method","signatures":[{"arguments":[]}],"related_to":"net.Socket.setTimeout","description":"Emitted if the socket times out from inactivity. This is only to notify that the\nsocket has been idle. The user must manually close the connection.","short_description":"Emitted if the socket times out from inactivity. This is only to notify that the\nsocket has been idle. The user must manually close the connection.","line":553,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"timeout","name_prefix":"net.Socket.","path":"net.Socket.timeout","outFile":"net.html#net.Socket.timeout"},{"id":"net.Socket.write","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The callback to execute once the write is finished\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute once the write is finished\n\n"}],"description":"Sends data on the socket. The second parameter specifies the encoding in the\ncase of a string—it defaults to UTF8 encoding.\n\nReturns `true` if the entire data was flushed successfully to the kernel buffer.\nReturns `false` if all or part of the data was queued in user memory. `'drain'`\nis emitted when the buffer is again free.","short_description":"Sends data on the socket. The second parameter specifies the encoding in the\ncase of a string—it defaults to UTF8 encoding.\n","line":385,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"write","name_prefix":"net.Socket.","path":"net.Socket.write","outFile":"net.html#net.Socket.write"},{"id":"net.Socket@connect","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when a socket connection is successfully established. For more\ninformation, see [[net.Socket.connect `connect()`]].","short_description":"Emitted when a socket connection is successfully established. For more\ninformation, see [[net.Socket.connect `connect()`]].","line":518,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connect","name_prefix":"net.Socket@","path":"net.Socket.event.connect","outFile":"net.html#net.Socket.event.connect"},{"id":"net.Socket@data","type":"event","signatures":[{"arguments":[{"name":"data","types":["Buffer","String"],"description":"A `Buffer` or `String`, depending on what it is\n\n"}]}],"arguments":[{"name":"data","types":["Buffer","String"],"description":"A `Buffer` or `String`, depending on what it is\n\n"}],"description":"Emitted when data is received. The encoding of `data` is set by\n`socket.setEncoding()`.\n\nFor more information, see the [[stream.ReadableStream ReadableStream]] section.","short_description":"Emitted when data is received. The encoding of `data` is set by\n`socket.setEncoding()`.\n","line":529,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"data","name_prefix":"net.Socket@","path":"net.Socket.event.data","outFile":"net.html#net.Socket.event.data"},{"id":"net.Socket@end","type":"event","signatures":[{"arguments":[]}],"description":"By default (when `allowHalfOpen == false`), the socket destroys its file\ndescriptor once it has written out its pending write queue. However, by setting\n`allowHalfOpen == true` the socket won't automatically `end()` its side,\nallowing the user to write arbitrary amounts of data, with the caveat that the\nuser is required to `end()` their side now.\n\nEmitted when the other end of the socket sends a FIN packet.","short_description":"By default (when `allowHalfOpen == false`), the socket destroys its file\ndescriptor once it has written out its pending write queue. However, by setting\n`allowHalfOpen == true` the socket won't automatically `end()` its side,\nallowing the user to write arbitrary amounts of data, with the caveat that the\nuser is required to `end()` their side now.\n","line":542,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"end","name_prefix":"net.Socket@","path":"net.Socket.event.end","outFile":"net.html#net.Socket.event.end"}],"file":"0.8.14/nodejs_ref_guide/net.markdown","subclasses":[],"name":"Socket","name_prefix":"net.","path":"net.Socket","outFile":"net.html"},{"id":"net.Server","type":"class","superclass":"net","description":"This class is used to create a TCP or UNIX server. A server is a `net.Socket`\nthat can listen for new incoming connections.","short_description":"This class is used to create a TCP or UNIX server. A server is a `net.Socket`\nthat can listen for new incoming connections.","line":122,"aliases":[],"children":[{"id":"net.Server.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns the bound address, the address family name, and port of the server as\nreported by the operating system. Useful to find which port was assigned when\ngiving getting an OS-assigned address.\n\nThis returns an object with three properties, like this:\n\n    {\"address\":\"127.0.0.1\", family: \"IPv4\", \"port\":2121}`\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/net/net.server.address.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns the bound address, the address family name, and port of the server as\nreported by the operating system. Useful to find which port was assigned when\ngiving getting an OS-assigned address.\n","line":242,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"address","name_prefix":"net.Server.","path":"net.Server.address","outFile":"net.html#net.Server.address"},{"id":"net.Server.close","type":"class method","signatures":[{"arguments":[{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"A function to call once the server closes\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"A function to call once the server closes\n\n"}],"description":"Stops the server from accepting new connections. This function is asynchronous,\nand  the server is finally closed when it emits a `'close' event.","short_description":"Stops the server from accepting new connections. This function is asynchronous,\nand  the server is finally closed when it emits a `'close' event.","line":225,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"close","name_prefix":"net.Server.","path":"net.Server.close","outFile":"net.html#net.Server.close"},{"id":"net.Server.connections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of concurrent connections on the server.\n\nThis becomes `null` when sending a socket to a child with\n[[child_process.fork `child_process.fork()`]].","short_description":"The number of concurrent connections on the server.\n","line":263,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connections","name_prefix":"net.Server.","path":"net.Server.connections","outFile":"net.html#net.Server.connections"},{"id":"net.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","optional":true,"types":["String"],"description":"The name of the host to connect to\n\n"},{"name":"backlog","default_value":511,"optional":true,"types":["Number"],"description":"The maximum length of the queue of pending connection\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"}]},{"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"}]},{"arguments":[{"name":"handle","types":["Object"],"description":"Either a server or socket (anything with an underlying \n\n*`_handle` member), or a `{fd: <n>}` object\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","types":["String"],"description":"The name of the host to connect to\n\n"},{"name":"backlog","types":["Number"],"description":"The maximum length of the queue of pending connection\n\n"},{"name":"callback","types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@listening `'listening'`]] event\n\n"},{"name":"handle","types":["Object"],"description":"Either a server or socket (anything with an underlying \n\n*`_handle` member), or a `{fd: <n>}` object\n\n"}],"description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). A port value of zero will assign a random port.\n\n**If using the `backlog` signature**: The actual length for `backlog` is\ndetermined by your OS through sysctl` settings such as `tcp_max_syn_backlog` and\n`somaxconn` on linux. The default value of this parameter is 511 (not 512).\n\n**If using the `handle` signature: This causes the server to accept connections\non the specified handle, but it is presumed that the file descriptor or handle\nhas already been bound to a port or domain socket.\n\nListening on a file descriptor is not supported on Windows.\n\nThe `callback()` is added as a listener for the\n[[net.Server@listening `net.Server`'s `'listening'`]] event.\n\nOne issue some users run into is getting `EADDRINUSE` errors. This means that\nanother server is already running on the requested port. One way of handling\nthis would be to wait a second and then try again. This can be done with\n\n    server.on('error', function (e) {\n      if (e.code == 'EADDRINUSE') {\n        console.log('Address in use, retrying...');\n        setTimeout(function () {\n          server.close();\n          server.listen(PORT, HOST);\n        }, 1000);\n      }\n    });\n\nNote: All sockets in Node.js set `SO_REUSEADDR` already.","short_description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server accepts connections directed to any IPv4 address\n(`INADDR_ANY`). A port value of zero will assign a random port.\n","line":205,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"listen","name_prefix":"net.Server.","path":"net.Server.listen","outFile":"net.html#net.Server.listen"},{"id":"net.Server.maxConnections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Set this property to reject connections when the server's connection count gets\nhigh.\n\nWarning: It is not recommended to use this option once a socket has been sent to\na child with [[child_process.fork `child_process.fork()`]].","short_description":"Set this property to reject connections when the server's connection count gets\nhigh.\n","line":253,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"maxConnections","name_prefix":"net.Server.","path":"net.Server.maxConnections","outFile":"net.html#net.Server.maxConnections"},{"id":"net.Server.pause","type":"class method","signatures":[{"arguments":[{"name":"msecs","default_value":1000,"types":["Number"],"description":"The number of milliseconds to pause for\n\n"}]}],"arguments":[{"name":"msecs","types":["Number"],"description":"The number of milliseconds to pause for\n\n"}],"description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","short_description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","line":215,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"pause","name_prefix":"net.Server.","path":"net.Server.pause","outFile":"net.html#net.Server.pause"},{"id":"net.Server@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the server closes. Note that if connections exist, this event is\nnot emitted until all connections are ended.","short_description":"Emitted when the server closes. Note that if connections exist, this event is\nnot emitted until all connections are ended.","line":147,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"close","name_prefix":"net.Server@","path":"net.Server.event.close","outFile":"net.html#net.Server.event.close"},{"id":"net.Server@connection","type":"event","signatures":[{"arguments":[{"name":"socket","types":["net.Socket"],"description":"An instance of `net.Socket`\n\n"}]}],"arguments":[{"name":"socket","types":["net.Socket"],"description":"An instance of `net.Socket`\n\n"}],"description":"Emitted when a new connection is made.","short_description":"Emitted when a new connection is made.","line":139,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connection","name_prefix":"net.Server@","path":"net.Server.event.connection","outFile":"net.html#net.Server.event.connection"},{"id":"net.Server@error","type":"event","signatures":[{"arguments":[{"name":"exception"}]}],"description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.  See an example in the discussion of [[net.Server.listen\n`net.Server.listen`]]","short_description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.  See an example in the discussion of [[net.Server.listen\n`net.Server.listen`]]","line":157,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"error","name_prefix":"net.Server@","path":"net.Server.event.error","outFile":"net.html#net.Server.event.error"},{"id":"net.Server@listening","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the server has been bound after calling `server.listen`.","short_description":"Emitted when the server has been bound after calling `server.listen`.","line":131,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"listening","name_prefix":"net.Server@","path":"net.Server.event.listening","outFile":"net.html#net.Server.event.listening"}],"file":"0.8.14/nodejs_ref_guide/net.markdown","subclasses":[],"name":"Server","name_prefix":"net.","path":"net.Server","outFile":"net.html"},{"id":"net.Socket","type":"class","superclass":"net","description":"This object is an abstraction of a TCP or UNIX socket. `net.Socket` instances\nimplement a duplex Stream interface.  They can be created by the user and used\nas a client (with `connect()`) or they can be created by Node.js and passed to\nthe user through the `'connection'` event of a server.","short_description":"This object is an abstraction of a TCP or UNIX socket. `net.Socket` instances\nimplement a duplex Stream interface.  They can be created by the user and used\nas a client (with `connect()`) or they can be created by Node.js and passed to\nthe user through the `'connection'` event of a server.","line":274,"aliases":[],"children":[{"id":"net.Socket.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"returns":[{"type":"Object","description":"An object with three properties, that looks like this:\n\n*`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`\n\n"}],"description":"Returns the bound address, the address family name, and port of the socket as\nreported by the operating system.","short_description":"Returns the bound address, the address family name, and port of the socket as\nreported by the operating system.","line":479,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"address","name_prefix":"net.Socket.","path":"net.Socket.address","outFile":"net.html#net.Socket.address"},{"id":"net.Socket.bufferSize","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"`net.Socket` has the property that `socket.write()` always works. This is to\nhelp users get up and running quickly. The computer can't always keep up with\nthe amount of data that is written to a socket—the network connection simply\nmight be too slow. Node.js will internally queue up the data written to a socket\nand send it out over the wire whenever it's possible. (Internally, it's polling\non the socket's file descriptor for being writable.)\n\nThe consequence of this internal buffering is that memory may grow. This\nproperty shows the number of characters currently buffered to be written.  The\nnumber of characters is approximately equal to the number of bytes to be\nwritten, but the buffer may contain strings, and the strings are lazily encoded,\nso the _exact_ number of bytes is not known.\n\nNote: Users who experience a large or growing `bufferSize` should attempt\nto \"throttle\" the data flows in\ntheir program with  `pause()` and `resume()`.","short_description":"`net.Socket` has the property that `socket.write()` always works. This is to\nhelp users get up and running quickly. The computer can't always keep up with\nthe amount of data that is written to a socket—the network connection simply\nmight be too slow. Node.js will internally queue up the data written to a socket\nand send it out over the wire whenever it's possible. (Internally, it's polling\non the socket's file descriptor for being writable.)\n","line":347,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"bufferSize","name_prefix":"net.Socket.","path":"net.Socket.bufferSize","outFile":"net.html#net.Socket.bufferSize"},{"id":"net.Socket.bytesRead","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The amount of received bytes.","short_description":"The amount of received bytes.","line":501,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"bytesRead","name_prefix":"net.Socket.","path":"net.Socket.bytesRead","outFile":"net.html#net.Socket.bytesRead"},{"id":"net.Socket.bytesWritten","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The amount of bytes sent.","short_description":"The amount of bytes sent.","line":509,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"bytesWritten","name_prefix":"net.Socket.","path":"net.Socket.bytesWritten","outFile":"net.html#net.Socket.bytesWritten"},{"id":"net.Socket.close","type":"class method","signatures":[{"arguments":[{"name":"had_error","types":["Boolean"],"description":"A `true` boolean if the socket was closed due to a\n\n*transmission error\n\n"}]}],"arguments":[{"name":"had_error","types":["Boolean"],"description":"A `true` boolean if the socket was closed due to a\n\n*transmission error\n\n"}],"description":"Emitted once the socket is fully closed.","short_description":"Emitted once the socket is fully closed.","line":581,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"close","name_prefix":"net.Socket.","path":"net.Socket.close","outFile":"net.html#net.Socket.close"},{"id":"net.Socket.connect","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","default_value":"localhost","optional":true,"types":["String"],"description":"The name of the host to connect to; it's entirely optional, as\n\n*you can just use `(port, connectListener)` if you wish\n\n"},{"name":"connectionListener","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","types":["String"],"description":"The name of the host to connect to; it's entirely optional, as\n\n*you can just use `(port, connectListener)` if you wish\n\n"},{"name":"connectionListener","types":["Function"],"description":"Automatically set as a listener for the\n\n*[[net.Server@connection `'connection'`]] event\n\n"}],"description":"Opens the connection for a given socket. If `port` and `host` are given, then\nthe socket is opened as a TCP socket. If a `path` is given, the socket is opened\nas a Unix socket to that path.\n\nNormally this method isn't needed, as `net.createConnection()` opens the socket.\nUse this only if you are implementing a custom Socket or if a Socket is closed\nand you want to reuse it to connect to another server.\n\nThis function is asynchronous. When the [[net.Socket@connect `'connect'`]] event\n is emitted the socket is established. If there is a problem connecting, the\n `'connect'` event  isn't emitted,  and the `'error'` event is emitted with the\n exception.","short_description":"Opens the connection for a given socket. If `port` and `host` are given, then\nthe socket is opened as a TCP socket. If a `path` is given, the socket is opened\nas a Unix socket to that path.\n","line":324,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connect","name_prefix":"net.Socket.","path":"net.Socket.connect","outFile":"net.html#net.Socket.connect"},{"id":"net.Socket.destroy","type":"class method","signatures":[{"arguments":[]}],"description":"Ensures that no more I/O activity happens on this socket. Only necessary in case\nof errors (like with a parse error).","short_description":"Ensures that no more I/O activity happens on this socket. Only necessary in case\nof errors (like with a parse error).","line":406,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"destroy","name_prefix":"net.Socket.","path":"net.Socket.destroy","outFile":"net.html#net.Socket.destroy"},{"id":"net.Socket.drain","type":"class method","signatures":[{"arguments":[]}],"related_to":"net.Socket.write","description":"Emitted when the write buffer becomes empty. Can be used to throttle uploads.","short_description":"Emitted when the write buffer becomes empty. Can be used to throttle uploads.","line":563,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"drain","name_prefix":"net.Socket.","path":"net.Socket.drain","outFile":"net.html#net.Socket.drain"},{"id":"net.Socket.end","type":"class method","signatures":[{"arguments":[{"name":"data","optional":true,"types":["String"],"description":"The data to write first\n\n"},{"name":"encoding","optional":true,"types":["String"],"description":"The encoding to use\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to write first\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"}],"description":"Half-closes the socket, _i.e._, it sends a FIN packet. It is possible the server\ncan still send some data.\n\nIf `data` is specified, it's equivalent to calling `socket.write(data,\nencoding)` followed by `socket.end()`.","short_description":"Half-closes the socket, _i.e._, it sends a FIN packet. It is possible the server\ncan still send some data.\n","line":398,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"end","name_prefix":"net.Socket.","path":"net.Socket.end","outFile":"net.html#net.Socket.end"},{"id":"net.Socket.error","type":"class method","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"Any exceptions encountered\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"Any exceptions encountered\n\n"}],"description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.","short_description":"Emitted when an error occurs.  The `'close'` event is called directly following\nthis event.","line":572,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"error","name_prefix":"net.Socket.","path":"net.Socket.error","outFile":"net.html#net.Socket.error"},{"id":"new net.Socket","type":"constructor","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"An object of options you can pass\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"An object of options you can pass\n\n"}],"description":"Constructs a new socket object.\n\n`options` is an object with the following defaults:\n\n    {\n      fd: null\n      type: null\n      allowHalfOpen: false\n    }\n\nwhere\n\n* `fd` allows you to specify the existing file descriptor of socket.\n* `type` specifies the underlying protocol. It can be `'tcp4'`, `'tcp6'`, or\n`'unix'`.\n* `allowHalfOpen` is a boolean indicating how the socket should end. For more\ninformation, see the [[net.createServer `createServer()`]] method and the\n[[net.Socket@end `'end'`]] event.","short_description":"Constructs a new socket object.\n","line":300,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"new","name_prefix":"net.Socket.","path":"net.Socket.new","outFile":"net.html#net.Socket.new"},{"id":"net.Socket.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses the reading of data. That is, `'data'` events are no longer emitted.\nUseful to throttle back an upload.","short_description":"Pauses the reading of data. That is, `'data'` events are no longer emitted.\nUseful to throttle back an upload.","line":415,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"pause","name_prefix":"net.Socket.","path":"net.Socket.pause","outFile":"net.html#net.Socket.pause"},{"id":"net.Socket.remoteAddress","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","short_description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","line":487,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"remoteAddress","name_prefix":"net.Socket.","path":"net.Socket.remoteAddress","outFile":"net.html#net.Socket.remoteAddress"},{"id":"net.Socket.remotePort","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The numeric representation of the remote port. For example, `80` or `21`.","short_description":"The numeric representation of the remote port. For example, `80` or `21`.","line":494,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"remotePort","name_prefix":"net.Socket.","path":"net.Socket.remotePort","outFile":"net.html#net.Socket.remotePort"},{"id":"net.Socket.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes reading after a call to `pause()`.","short_description":"Resumes reading after a call to `pause()`.","line":422,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"resume","name_prefix":"net.Socket.","path":"net.Socket.resume","outFile":"net.html#net.Socket.resume"},{"id":"net.Socket.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"null","optional":true,"types":["String"],"description":"The encoding to use (either `'ascii'`, `'utf8'`, or\n\n*`'base64'`)\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use (either `'ascii'`, `'utf8'`, or\n\n*`'base64'`)\n\n"}],"description":"Sets the encoding for the socket as a Readable Stream.\n\nFor more information, see\n[[stream.ReadableStream.setEncoding `stream.ReadableStream.setEncoding()`]].","short_description":"Sets the encoding for the socket as a Readable Stream.\n","line":359,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setEncoding","name_prefix":"net.Socket.","path":"net.Socket.setEncoding","outFile":"net.html#net.Socket.setEncoding"},{"id":"net.Socket.setKeepAlive","type":"class method","signatures":[{"arguments":[{"name":"enable","default_value":false,"optional":true,"types":["Boolean"],"description":"Enables or disables whether to stay alive\n\n"},{"name":"initialDelay","default_value":0,"optional":true,"types":["Number"],"description":"The delay (in milliseconds) between the last data\n\n*packet received and the first keepalive probe\n\n"}]}],"arguments":[{"name":"enable","types":["Boolean"],"description":"Enables or disables whether to stay alive\n\n"},{"name":"initialDelay","types":["Number"],"description":"The delay (in milliseconds) between the last data\n\n*packet received and the first keepalive probe\n\n"}],"description":"Enable and disable keep-alive functionality, and optionally set the initial\ndelay before the first keepalive probe is sent on an idle socket.\n\nSetting `initialDelay` to 0 for leaves the value unchanged from the default (or\nprevious) setting.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/net/net.server.address.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Enable and disable keep-alive functionality, and optionally set the initial\ndelay before the first keepalive probe is sent on an idle socket.\n","line":469,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setKeepAlive","name_prefix":"net.Socket.","path":"net.Socket.setKeepAlive","outFile":"net.html#net.Socket.setKeepAlive"},{"id":"net.Socket.setNoDelay","type":"class method","signatures":[{"arguments":[{"name":"noDelay","default_value":true,"optional":true,"types":["Boolean"],"description":"If `true`, immediately fires off data each time\n\n*`socket.write()` is called.\n\n"}]}],"arguments":[{"name":"noDelay","types":["Boolean"],"description":"If `true`, immediately fires off data each time\n\n*`socket.write()` is called.\n\n"}],"description":"Disables [the Nagle algorithm](http://en.wikipedia.org/wiki/Nagle's_algorithm).\nBy default TCP connections use the Nagle algorithm, they buffer data before\nsending it off.","short_description":"Disables [the Nagle algorithm](http://en.wikipedia.org/wiki/Nagle's_algorithm).\nBy default TCP connections use the Nagle algorithm, they buffer data before\nsending it off.","line":450,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setNoDelay","name_prefix":"net.Socket.","path":"net.Socket.setNoDelay","outFile":"net.html#net.Socket.setNoDelay"},{"id":"net.Socket.setSecure","type":"class method","signatures":[{"arguments":[]}],"deprecated":{"since":"0.3.0"},"description":"This function was used to upgrade the connection to SSL/TLS. See the [[tls TLS]]\nsection for the new API.","short_description":"This function was used to upgrade the connection to SSL/TLS. See the [[tls TLS]]\nsection for the new API.","line":370,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setSecure","name_prefix":"net.Socket.","path":"net.Socket.setSecure","outFile":"net.html#net.Socket.setSecure"},{"id":"net.Socket.setTimeout","type":"class method","signatures":[{"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length (in milliseconds)\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The function to execute as a one time listener for the\n\n*`'timeout'` event.\n\n"}]}],"arguments":[{"name":"timeout","types":["Number"],"description":"The timeout length (in milliseconds)\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute as a one time listener for the\n\n*`'timeout'` event.\n\n"}],"description":"Sets the socket to timeout after `timeout` milliseconds of inactivity on the\nsocket. By default `net.Socket` don't have a timeout.\n\nWhen an idle timeout is triggered the socket will receive a `'timeout'` event\nbut the connection will not be severed. The user must manually `end()` or\n`destroy()` the socket.\n\nIf `timeout` is 0, then the existing idle timeout is disabled.","short_description":"Sets the socket to timeout after `timeout` milliseconds of inactivity on the\nsocket. By default `net.Socket` don't have a timeout.\n","line":439,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"setTimeout","name_prefix":"net.Socket.","path":"net.Socket.setTimeout","outFile":"net.html#net.Socket.setTimeout"},{"id":"net.Socket.timeout","type":"class method","signatures":[{"arguments":[]}],"related_to":"net.Socket.setTimeout","description":"Emitted if the socket times out from inactivity. This is only to notify that the\nsocket has been idle. The user must manually close the connection.","short_description":"Emitted if the socket times out from inactivity. This is only to notify that the\nsocket has been idle. The user must manually close the connection.","line":553,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"timeout","name_prefix":"net.Socket.","path":"net.Socket.timeout","outFile":"net.html#net.Socket.timeout"},{"id":"net.Socket.write","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"The data to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"The callback to execute once the write is finished\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"data","types":["String"],"description":"The data to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"},{"name":"callback","types":["Function"],"description":"The callback to execute once the write is finished\n\n"}],"description":"Sends data on the socket. The second parameter specifies the encoding in the\ncase of a string—it defaults to UTF8 encoding.\n\nReturns `true` if the entire data was flushed successfully to the kernel buffer.\nReturns `false` if all or part of the data was queued in user memory. `'drain'`\nis emitted when the buffer is again free.","short_description":"Sends data on the socket. The second parameter specifies the encoding in the\ncase of a string—it defaults to UTF8 encoding.\n","line":385,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"write","name_prefix":"net.Socket.","path":"net.Socket.write","outFile":"net.html#net.Socket.write"},{"id":"net.Socket@connect","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when a socket connection is successfully established. For more\ninformation, see [[net.Socket.connect `connect()`]].","short_description":"Emitted when a socket connection is successfully established. For more\ninformation, see [[net.Socket.connect `connect()`]].","line":518,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"connect","name_prefix":"net.Socket@","path":"net.Socket.event.connect","outFile":"net.html#net.Socket.event.connect"},{"id":"net.Socket@data","type":"event","signatures":[{"arguments":[{"name":"data","types":["Buffer","String"],"description":"A `Buffer` or `String`, depending on what it is\n\n"}]}],"arguments":[{"name":"data","types":["Buffer","String"],"description":"A `Buffer` or `String`, depending on what it is\n\n"}],"description":"Emitted when data is received. The encoding of `data` is set by\n`socket.setEncoding()`.\n\nFor more information, see the [[stream.ReadableStream ReadableStream]] section.","short_description":"Emitted when data is received. The encoding of `data` is set by\n`socket.setEncoding()`.\n","line":529,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"data","name_prefix":"net.Socket@","path":"net.Socket.event.data","outFile":"net.html#net.Socket.event.data"},{"id":"net.Socket@end","type":"event","signatures":[{"arguments":[]}],"description":"By default (when `allowHalfOpen == false`), the socket destroys its file\ndescriptor once it has written out its pending write queue. However, by setting\n`allowHalfOpen == true` the socket won't automatically `end()` its side,\nallowing the user to write arbitrary amounts of data, with the caveat that the\nuser is required to `end()` their side now.\n\nEmitted when the other end of the socket sends a FIN packet.","short_description":"By default (when `allowHalfOpen == false`), the socket destroys its file\ndescriptor once it has written out its pending write queue. However, by setting\n`allowHalfOpen == true` the socket won't automatically `end()` its side,\nallowing the user to write arbitrary amounts of data, with the caveat that the\nuser is required to `end()` their side now.\n","line":542,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/net.markdown","name":"end","name_prefix":"net.Socket@","path":"net.Socket.event.end","outFile":"net.html#net.Socket.event.end"}],"file":"0.8.14/nodejs_ref_guide/net.markdown","subclasses":[],"name":"Socket","name_prefix":"net.","path":"net.Socket","outFile":"net.html"}],"file":"0.8.14/nodejs_ref_guide/net.markdown","subclasses":["net.Server","net.Socket"],"name":"net","path":"net","outFile":"net.html"},{"id":"os","type":"class","description":"\nThis provides a way to retrieve various information about the underlaying\noperating system. Add `require('os')` in your code to access this module.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/os/os.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"4 - API Frozen","short_description":"\nThis provides a way to retrieve various information about the underlaying\noperating system. Add `require('os')` in your code to access this module.\n","line":15,"aliases":[],"children":[{"id":"os.arch","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the operating system CPU architecture.","short_description":"Returns the operating system CPU architecture.","line":23,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"arch","name_prefix":"os.","path":"os.arch","outFile":"os.html#os.arch"},{"id":"os.cpus","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object","array":true}]}],"description":"Returns an array of objects containing information about each CPU/core\ninstalled: the model, speed (in MHz), and times (an object containing the number\nof CPU ticks spent in: user, nice, sys, idle, and irq).\n\n#### Example\n\nExample inspection of os.cpus:\n\n    [ { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n        speed: 2926,\n        times:\n         { user: 252020,\n           nice: 0,\n           sys: 30340,\n           idle: 1070356870,\n           irq: 0 } },\n      { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n        speed: 2926,\n        times:\n         { user: 306960,\n           nice: 0,\n           sys: 26980,\n           idle: 1071569080,\n           irq: 0 } },\n      { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n        speed: 2926,\n       times:\n       { user: 248450,\n        nice: 0,\n         sys: 21750,\n         idle: 1070919370,\n         irq: 0 } },\n    { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n      speed: 2926,\n      times:\n       { user: 256880,\n         nice: 0,\n         sys: 19430,\n         idle: 1070905480,\n         irq: 20 } },\n    { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n      speed: 2926,\n      times:\n       { user: 511580,\n         nice: 20,\n         sys: 40900,\n         idle: 1070842510,\n         irq: 0 } },\n    { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n      speed: 2926,\n      times:\n       { user: 291660,\n         nice: 0,\n         sys: 34360,\n         idle: 1070888000,\n         irq: 10 } },\n    { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n      speed: 2926,\n      times:\n       { user: 308260,\n         nice: 0,\n         sys: 55410,\n         idle: 1071129970,\n         irq: 880 } },\n    { model: 'Intel(R) Core(TM) i7 CPU         860  @ 2.80GHz',\n      speed: 2926,\n      times:\n       { user: 266450,\n         nice: 1480,\n         sys: 34920,\n         idle: 1072572010,\n         irq: 30 } } ]","short_description":"Returns an array of objects containing information about each CPU/core\ninstalled: the model, speed (in MHz), and times (an object containing the number\nof CPU ticks spent in: user, nice, sys, idle, and irq).\n","line":103,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"cpus","name_prefix":"os.","path":"os.cpus","outFile":"os.html#os.cpus"},{"id":"os.freemem","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Number"}]}],"description":"Returns the amount of free system memory in bytes.","short_description":"Returns the amount of free system memory in bytes.","line":111,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"freemem","name_prefix":"os.","path":"os.freemem","outFile":"os.html#os.freemem"},{"id":"os.hostname","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the hostname of the operating system.","short_description":"Returns the hostname of the operating system.","line":128,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"hostname","name_prefix":"os.","path":"os.hostname","outFile":"os.html#os.hostname"},{"id":"os.loadavg","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Number","array":true}]}],"description":"Returns an array containing the 1, 5, and 15 minute load averages.","short_description":"Returns an array containing the 1, 5, and 15 minute load averages.","line":165,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"loadavg","name_prefix":"os.","path":"os.loadavg","outFile":"os.html#os.loadavg"},{"id":"os.networkInterfaces","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns a list of network interfaces.\n\n#### Example\n\n    { lo0:\n       [ { address: '::1', family: 'IPv6', internal: true },\n         { address: 'fe80::1', family: 'IPv6', internal: true },\n         { address: '127.0.0.1', family: 'IPv4', internal: true } ],\n      en1:\n       [ { address: 'fe80::cabc:c8ff:feef:f996', family: 'IPv6',\n           internal: false },\n         { address: '10.0.1.123', family: 'IPv4', internal: false } ],\n      vmnet1: [ { address: '10.99.99.254', family: 'IPv4', internal: false } ],\n      vmnet8: [ { address: '10.88.88.1', family: 'IPv4', internal: false } ],\n      ppp0: [ { address: '10.2.0.231', family: 'IPv4', internal: false } ] }","short_description":"Returns a list of network interfaces.\n","line":154,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"networkInterfaces","name_prefix":"os.","path":"os.networkInterfaces","outFile":"os.html#os.networkInterfaces"},{"id":"os.platform","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the operating system platform.","short_description":"Returns the operating system platform.","line":176,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"platform","name_prefix":"os.","path":"os.platform","outFile":"os.html#os.platform"},{"id":"os.release","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the operating system release.","short_description":"Returns the operating system release.","line":187,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"release","name_prefix":"os.","path":"os.release","outFile":"os.html#os.release"},{"id":"os.tmpDir","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the operating system's default directory for temp files.","short_description":"Returns the operating system's default directory for temp files.","line":119,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"tmpDir","name_prefix":"os.","path":"os.tmpDir","outFile":"os.html#os.tmpDir"},{"id":"os.totalmem","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Number"}]}],"description":"Returns the total amount of system memory in bytes.","short_description":"Returns the total amount of system memory in bytes.","line":197,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"totalmem","name_prefix":"os.","path":"os.totalmem","outFile":"os.html#os.totalmem"},{"id":"os.type","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the operating system name.","short_description":"Returns the operating system name.","line":207,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"type","name_prefix":"os.","path":"os.type","outFile":"os.html#os.type"},{"id":"os.uptime","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Number"}]}],"description":"Returns the system uptime in seconds.","short_description":"Returns the system uptime in seconds.","line":217,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/os.markdown","name":"uptime","name_prefix":"os.","path":"os.uptime","outFile":"os.html#os.uptime"}],"file":"0.8.14/nodejs_ref_guide/os.markdown","subclasses":[],"name":"os","path":"os","outFile":"os.html"},{"id":"path","type":"class","description":"\nThis module contains utilities for handling and transforming file paths. Add\n`require('path')` to your code to use this module.\n\nAlmost all these methods perform only string transformations. **The file system\nis not consulted to check whether paths are valid.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"3 - Stable","short_description":"\nThis module contains utilities for handling and transforming file paths. Add\n`require('path')` to your code to use this module.\n","line":19,"aliases":[],"children":[{"id":"path.basename","type":"class method","signatures":[{"arguments":[{"name":"p","types":["String"],"description":"A path\n\n"},{"name":"ext","optional":true,"types":["String"],"description":"If provided, the extension to omit\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"p","types":["String"],"description":"A path\n\n"},{"name":"ext","types":["String"],"description":"If provided, the extension to omit\n\n"}],"description":"Return the last portion of a path.  Similar to the Unix\n[`basename`](http://www.kernel.org/doc/man-pages/online/pages/man3/basename.3.html) command.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.basename.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Return the last portion of a path.  Similar to the Unix\n[`basename`](http://www.kernel.org/doc/man-pages/online/pages/man3/basename.3.html) command.\n","line":142,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"basename","name_prefix":"path.","path":"path.basename","outFile":"path.html#path.basename"},{"id":"path.dirname","type":"class method","signatures":[{"arguments":[{"name":"p","types":["String"],"description":"A path\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"p","types":["String"],"description":"A path\n\n"}],"description":"Return the directory name of a path.  Similar to the Unix\n[`dirname`](http://www.kernel.org/doc/man-pages/online/pages/man3/basename.3.html) command.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.dirname.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Return the directory name of a path.  Similar to the Unix\n[`dirname`](http://www.kernel.org/doc/man-pages/online/pages/man3/basename.3.html) command.\n","line":126,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"dirname","name_prefix":"path.","path":"path.dirname","outFile":"path.html#path.dirname"},{"id":"path.exists","type":"class method","signatures":[{"arguments":[{"name":"p","types":["String"],"description":"A path to check\n\n"},{"name":"callback","arguments":[{"name":"exists","description":"This is `true` if the path actually exists\n\n","types":["Boolean"]}],"callback":true,"optional":true,"types":["Function"],"description":"A callback to execute once the method completes\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"p","types":["String"],"description":"A path to check\n\n"},{"name":"callback","types":["Function"],"description":"A callback to execute once the method completes\n\n"},{"name":"exists","types":["Boolean"],"description":"This is `true` if the path actually exists\n\n"}],"description":"Tests whether or not the given path exists by checking with the file system.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.exists.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Tests whether or not the given path exists by checking with the file system.\n","line":174,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"exists","name_prefix":"path.","path":"path.exists","outFile":"path.html#path.exists"},{"id":"path.existsSync","type":"class method","signatures":[{"arguments":[{"name":"p","types":["String"],"description":"A path to check\n\n"}],"returns":[{"type":"Boolean","description":"`true` if the path exists, `false` otherwise.\n\n"}]}],"arguments":[{"name":"p","types":["String"],"description":"A path to check\n\n"}],"returns":[{"type":"Boolean","description":"`true` if the path exists, `false` otherwise.\n\n"}],"description":"The synchronous version of `path.exists`. Tests whether or not the given path\nexists by checking with the file system","short_description":"The synchronous version of `path.exists`. Tests whether or not the given path\nexists by checking with the file system","line":185,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"existsSync","name_prefix":"path.","path":"path.existsSync","outFile":"path.html#path.existsSync"},{"id":"path.extname","type":"class method","signatures":[{"arguments":[{"name":"p","types":["String"],"description":"A path\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"p","types":["String"],"description":"A path\n\n"}],"description":"Return the extension of the path, from the last '.' to end of string in the last\nportion of the path.  If there is no '.' in the last portion of the path or the\nfirst character of it is '.', then the method returns an empty string.\n\n#### Examples\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.extname.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Return the extension of the path, from the last '.' to end of string in the last\nportion of the path.  If there is no '.' in the last portion of the path or the\nfirst character of it is '.', then the method returns an empty string.\n","line":158,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"extname","name_prefix":"path.","path":"path.extname","outFile":"path.html#path.extname"},{"id":"path.join","type":"class method","signatures":[{"arguments":[{"name":"path1","types":["String"],"description":"The first path to join\n\n"},{"name":"path2","types":["String"],"description":"The second path to join\n\n"},{"name":"paths","ellipsis":true,"optional":true,"types":["String"],"description":"Additional paths to join\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"path1","types":["String"],"description":"The first path to join\n\n"},{"name":"path2","types":["String"],"description":"The second path to join\n\n"},{"name":"paths","types":["String"],"description":"Additional paths to join\n\n"}],"description":"Join all arguments together and normalize the resulting path. Non-string\narguments are ignored.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.join.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Join all arguments together and normalize the resulting path. Non-string\narguments are ignored.\n","line":53,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"join","name_prefix":"path.","path":"path.join","outFile":"path.html#path.join"},{"id":"path.normalize","type":"class method","signatures":[{"arguments":[{"name":"p","types":["String"],"description":"The path to normalize\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"p","types":["String"],"description":"The path to normalize\n\n"}],"description":"Normalize a string path, taking care of `'..'` and `'.'` parts.\n\nWhen multiple slashes are found, they're replaced by a single one; when the path\ncontains a trailing slash, it is preserved. On Windows backslashes are used.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.normalize.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Normalize a string path, taking care of `'..'` and `'.'` parts.\n","line":36,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"normalize","name_prefix":"path.","path":"path.normalize","outFile":"path.html#path.normalize"},{"id":"path.relative","type":"class method","signatures":[{"arguments":[{"name":"from","types":["String"],"description":"The starting path\n\n"},{"name":"to","types":["String"],"description":"To final path\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"from","types":["String"],"description":"The starting path\n\n"},{"name":"to","types":["String"],"description":"To final path\n\n"}],"description":"Solve the relative path from `from` to `to`.\n\nAt times, you have two absolute paths, and you need to derive the relative path\nfrom one to the other. This is actually the reverse transform of [[path.resolve\n`path.resolve()`]], which means you'll see that:\n\n   path.resolve(from, path.relative(from, to)) == path.resolve(to)\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.relative.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Solve the relative path from `from` to `to`.\n","line":111,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"relative","name_prefix":"path.","path":"path.relative","outFile":"path.html#path.relative"},{"id":"path.resolve","type":"class method","signatures":[{"arguments":[{"name":"from","ellipsis":true,"optional":true,"types":["String"],"description":"Paths to prepend (and append) to `to`\n\n"},{"name":"to","types":["String"],"description":"The path to resolve\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"from","types":["String"],"description":"Paths to prepend (and append) to `to`\n\n"},{"name":"to","types":["String"],"description":"The path to resolve\n\n"}],"description":"Resolves `to` to an absolute path.\n\nIf `to` isn't already absolute, the `from` arguments are prepended in right to\nleft order, until an absolute path is found. If, after using all the `from`\npaths still no absolute path is found, the current working directory is used as\nwell. The resulting path is normalized, and trailing slashes are removed unless\nthe path gets resolved to the root directory. Non-string arguments are ignored.\n\nAnother way to think of it is as a sequence of `cd` commands in a shell. The\nfollowing call:\n\n    path.resolve('foo/bar', '/tmp/file/', '..', 'a/../subfile')\n\nis similar to:\n\n    cd foo/bar\n    cd /tmp/file/\n    cd ..\n    cd a/../subfile\n    pwd\n\nThe difference is that the different paths don't need to exist and may also be\nfiles.\n\n#### Examples\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/path/path.resolve.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Resolves `to` to an absolute path.\n","line":90,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"resolve","name_prefix":"path.","path":"path.resolve","outFile":"path.html#path.resolve"},{"id":"path.sep","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The platform-specific file separator; `'\\\\'` or `'/'`.\n\nAn example on Linux:\n\n    'foo/bar/baz'.split(path.sep)\n    // returns ['foo', 'bar', 'baz']\n\nAn example on Windows:\n\n    'foo\\\\bar\\\\baz'.split(path.sep)\n    // returns ['foo', 'bar', 'baz']","short_description":"The platform-specific file separator; `'\\\\'` or `'/'`.\n","line":202,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/path.markdown","name":"sep","name_prefix":"path.","path":"path.sep","outFile":"path.html#path.sep"}],"file":"0.8.14/nodejs_ref_guide/path.markdown","subclasses":[],"name":"path","path":"path","outFile":"path.html"},{"id":"process","type":"class","metadata":{"type":"global"},"description":"The `process` object is a global object, and can be accessed from anywhere. It\nis an instance of [[eventemitter `EventEmitter`]].\n\n\n#### Example: Handling Signal Events\n\nSignal events are emitted when processes receive a signal. See\n[sigaction(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/sigaction.2.html) for a list of standard POSIX signal names such as SIGINT, SIGUSR1, etc.\n\n#### Example: Listening for `SIGINT`:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"The `process` object is a global object, and can be accessed from anywhere. It\nis an instance of [[eventemitter `EventEmitter`]].\n","line":20,"aliases":[],"children":[{"id":"process.abort","type":"class method","signatures":[{"arguments":[]}],"description":"This causes Node.js to emit an abort. Node.js will exit and generate a core file.","short_description":"This causes Node.js to emit an abort. Node.js will exit and generate a core file.","line":349,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"abort","name_prefix":"process.","path":"process.abort","outFile":"process.html#process.abort"},{"id":"process.arch","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"Identifies which processor architecture you're running on: `'arm'`, `'ia32'`, or\n`'x64'`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.arch.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Identifies which processor architecture you're running on: `'arm'`, `'ia32'`, or\n`'x64'`.\n","line":301,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"arch","name_prefix":"process.","path":"process.arch","outFile":"process.html#process.arch"},{"id":"process.argv","type":"class property","signatures":[{"returns":[{"type":"Array"}]}],"description":"An array containing the command line arguments.  The first element is 'node',\nand the second element is the name of the JavaScript file.  The next elements\nwill be any additional command line arguments.\n\n#### Example\n\nFirst, create a file called process.argv.js:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.argv.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>\n\nThen, using the Node.js REPL, type the following command:\n\n  $ node process-2.js one two=three four\n\nYou should see the following results:\n\n  0: node\n  1: <directoryPath>/process.js\n  2: one\n  3: two=three\n  4: four","short_description":"An array containing the command line arguments.  The first element is 'node',\nand the second element is the name of the JavaScript file.  The next elements\nwill be any additional command line arguments.\n","line":331,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"argv","name_prefix":"process.","path":"process.argv","outFile":"process.html#process.argv"},{"id":"process.chdir","type":"class method","signatures":[{"arguments":[{"name":"directory","types":["String"],"description":"The directory name to change to\n\n"}]}],"arguments":[{"name":"directory","types":["String"],"description":"The directory name to change to\n\n"}],"description":"Changes the current working directory of the process or throws an exception if\nthat fails.\n\n#### Example\n\n    console.log('Starting at directory: ' + process.cwd());\n    try {\n      process.chdir('/tmp');\n      console.log('New directory: ' + process.cwd());\n    }\n    catch (err) {\n      console.log('chdir failed: ' + err);\n    }","short_description":"Changes the current working directory of the process or throws an exception if\nthat fails.\n","line":89,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"chdir","name_prefix":"process.","path":"process.chdir","outFile":"process.html#process.chdir"},{"id":"process.config","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"Contains the JavaScript representation of the configure options\nthat were used to compile the current node executable. This is the same as\nthe \"config.gypi\" file that was produced when running the `./configure` script.\n\nAn example of the possible output looks like:\n\n    { target_defaults:\n       { cflags: [],\n         default_configuration: 'Release',\n         defines: [],\n         include_dirs: [],\n         libraries: [] },\n      variables:\n       { host_arch: 'x64',\n         node_install_npm: 'true',\n         node_install_waf: 'true',\n         node_prefix: '',\n         node_shared_v8: 'false',\n         node_shared_zlib: 'false',\n         node_use_dtrace: 'false',\n         node_use_openssl: 'true',\n         node_shared_openssl: 'false',\n         strict_aliasing: 'true',\n         target_arch: 'x64',\n         v8_use_snapshot: 'true' } }","short_description":"Contains the JavaScript representation of the configure options\nthat were used to compile the current node executable. This is the same as\nthe \"config.gypi\" file that was produced when running the `./configure` script.\n","line":451,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"config","name_prefix":"process.","path":"process.config","outFile":"process.html#process.config"},{"id":"process.cwd","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the current working directory of the process. For example:\n\n  console.log('Current directory: ' + process.cwd());","short_description":"Returns the current working directory of the process. For example:\n","line":102,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"cwd","name_prefix":"process.","path":"process.cwd","outFile":"process.html#process.cwd"},{"id":"process.env","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"An object containing the user environment. For more information, see\n[environ(7)](http://kernel.org/doc/man-pages/online/pages/man7/environ.7.html).","short_description":"An object containing the user environment. For more information, see\n[environ(7)](http://kernel.org/doc/man-pages/online/pages/man7/environ.7.html).","line":490,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"env","name_prefix":"process.","path":"process.env","outFile":"process.html#process.env"},{"id":"process.execPath","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"This is the absolute pathname of the executable that started the process.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.execpath.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","short_description":"This is the absolute pathname of the executable that started the process.\n","line":342,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"execPath","name_prefix":"process.","path":"process.execPath","outFile":"process.html#process.execPath"},{"id":"process.exit","type":"class method","signatures":[{"arguments":[{"name":"code","default_value":0,"types":["Number"],"description":"The code to end with\n\n"}]}],"arguments":[{"name":"code","types":["Number"],"description":"The code to end with\n\n"}],"description":"Ends the process with the specified `code`.\n\n#### Example: Exiting with a 'failure' code:\n\n    process.exit(1);\n\nThe shell that executed this should see the exit code as `1`.","short_description":"Ends the process with the specified `code`.\n","line":119,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"exit","name_prefix":"process.","path":"process.exit","outFile":"process.html#process.exit"},{"id":"process.getgid","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Number"}]}],"description":"Gets the group identity of the process. This is the numerical group id, not the\ngroup name. For more information, see\n[getgid(2)](http://kernel.org/doc/man-pages/online/pages/man2/getgid.2.html).\n\nNote: This function is only available on POSIX platforms (_i.e._, not Windows).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.getgid.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Gets the group identity of the process. This is the numerical group id, not the\ngroup name. For more information, see\n[getgid(2)](http://kernel.org/doc/man-pages/online/pages/man2/getgid.2.html).\n","line":137,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"getgid","name_prefix":"process.","path":"process.getgid","outFile":"process.html#process.getgid"},{"id":"process.getuid","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Number"}]}],"description":"Gets the user identity of the process. Note that this is the numerical userid,\nnot the username. For more information, see\n[getuid(2)](http://kernel.org/doc/man-pages/online/pages/man2/getuid.2.html).\n\nNote: This function is only available on POSIX platforms (_i.e._, not Windows).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.getuid.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Gets the user identity of the process. Note that this is the numerical userid,\nnot the username. For more information, see\n[getuid(2)](http://kernel.org/doc/man-pages/online/pages/man2/getuid.2.html).\n","line":155,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"getuid","name_prefix":"process.","path":"process.getuid","outFile":"process.html#process.getuid"},{"id":"process.installPrefix","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"A compiled-in property that exposes the `NODE_PREFIX`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.installprefix.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","short_description":"A compiled-in property that exposes the `NODE_PREFIX`.\n","line":464,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"installPrefix","name_prefix":"process.","path":"process.installPrefix","outFile":"process.html#process.installPrefix"},{"id":"process.kill","type":"class method","signatures":[{"arguments":[{"name":"pid","types":["Number"],"description":"The process id to kill\n\n"},{"name":"signal","default_value":"SIGTERM","types":["String"],"description":"A string describing the signal to send; the default is\n\n*`SIGTERM`.\n\n"}]}],"arguments":[{"name":"pid","types":["Number"],"description":"The process id to kill\n\n"},{"name":"signal","types":["String"],"description":"A string describing the signal to send; the default is\n\n*`SIGTERM`.\n\n"}],"description":"Send a signal to a process. The `signal` names are strings like 'SIGINT' or\n'SIGUSR1'. For more information, see\n[kill(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/kill.2.html).\n\nNote: Just because the name of this function is `process.kill`, it is really just a signal sender, like the `kill` system call.  The signal sent may do something other than kill the target process.\n\n#### Example: Sending a signal to yourself\n\n    process.on('SIGHUP', function () {\n      console.log('Got SIGHUP signal.');\n    });\n\n    setTimeout(function () {\n      console.log('Exiting.');\n      process.exit(0);\n    }, 100);\n\n    process.kill(process.pid, 'SIGHUP');","short_description":"Send a signal to a process. The `signal` names are strings like 'SIGINT' or\n'SIGUSR1'. For more information, see\n[kill(2)](http://www.kernel.org/doc/man-pages/online/pages/man2/kill.2.html).\n","line":185,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"kill","name_prefix":"process.","path":"process.kill","outFile":"process.html#process.kill"},{"id":"process.memoryUsage","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns an object describing the memory usage of the Node.js process measured in\nbytes.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.memoryusage.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nThis generates:\n\n  { rss: 4935680,\n    heapTotal: 1826816,\n    heapUsed: 650472 }\n\nIn this object, `heapTotal` and `heapUsed` refer to V8's memory usage.","short_description":"Returns an object describing the memory usage of the Node.js process measured in\nbytes.\n","line":208,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"memoryUsage","name_prefix":"process.","path":"process.memoryUsage","outFile":"process.html#process.memoryUsage"},{"id":"process.nextTick","type":"class method","signatures":[{"arguments":[{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The callback function to execute on the next tick\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"The callback function to execute on the next tick\n\n"}],"description":"On the next loop around the event loop call this callback. This is **not** a\nsimple alias to `setTimeout(fn, 0)`; it's much more efficient.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.nexttick.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"On the next loop around the event loop call this callback. This is **not** a\nsimple alias to `setTimeout(fn, 0)`; it's much more efficient.\n","line":223,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"nextTick","name_prefix":"process.","path":"process.nextTick","outFile":"process.html#process.nextTick"},{"id":"process.pid","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Returns the PID of the process.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.pid.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","short_description":"Returns the PID of the process.\n","line":362,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"pid","name_prefix":"process.","path":"process.pid","outFile":"process.html#process.pid"},{"id":"process.platform","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"Identifies the platform you're running on: `'darwin'`, `'freebsd'`, `'linux'`,\n`'sunos'` or `'win32'`\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.platform.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","short_description":"Identifies the platform you're running on: `'darwin'`, `'freebsd'`, `'linux'`,\n`'sunos'` or `'win32'`\n","line":376,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"platform","name_prefix":"process.","path":"process.platform","outFile":"process.html#process.platform"},{"id":"process.setgid","type":"class method","signatures":[{"arguments":[{"name":"id","types":["Number"],"description":"The new identity for the group process\n\n"}]}],"arguments":[{"name":"id","types":["Number"],"description":"The new identity for the group process\n\n"}],"description":"Sets the group identity of the process. This accepts either a numerical ID or a\ngroupname string. If a groupname is specified, this method blocks while\nresolving it to a numerical ID. For more information, see\n[setgid(2)](http://kernel.org/doc/man-pages/online/pages/man2/setgid.2.html).\n\nNote: This function is only available on POSIX platforms (_i.e._, not Windows).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.setgid.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Sets the group identity of the process. This accepts either a numerical ID or a\ngroupname string. If a groupname is specified, this method blocks while\nresolving it to a numerical ID. For more information, see\n[setgid(2)](http://kernel.org/doc/man-pages/online/pages/man2/setgid.2.html).\n","line":242,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"setgid","name_prefix":"process.","path":"process.setgid","outFile":"process.html#process.setgid"},{"id":"process.setuid","type":"class method","signatures":[{"arguments":[{"name":"id","types":["Number"],"description":"The new identity for the user process\n\n"}]}],"arguments":[{"name":"id","types":["Number"],"description":"The new identity for the user process\n\n"}],"description":"Sets the user identity of the process. This accepts either a numerical ID or a\nusername string.  If a username is specified, this method blocks while resolving\nit to a numerical ID. For more information, see\n[setuid(2)](http://kernel.org/doc/man-pages/online/pages/man2/setuid.2.html).\n\nNote: This function is only available on POSIX platforms (_i.e._, not Windows).\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.setuid.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Sets the user identity of the process. This accepts either a numerical ID or a\nusername string.  If a username is specified, this method blocks while resolving\nit to a numerical ID. For more information, see\n[setuid(2)](http://kernel.org/doc/man-pages/online/pages/man2/setuid.2.html).\n","line":261,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"setuid","name_prefix":"process.","path":"process.setuid","outFile":"process.html#process.setuid"},{"id":"process.stderr","type":"class property","signatures":[{"returns":[{"type":"fs.WriteStream"}]}],"description":"A writable stream to stderr.\n\n`process.stderr` and `process.stdout` are unlike other streams in Node.js in\nthat writes to them are usually blocking.  They are blocking in the case that\nthey refer to regular files or TTY file descriptors. In the case they refer to\npipes, they are non-blocking like other streams.","short_description":"A writable stream to stderr.\n","line":479,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"stderr","name_prefix":"process.","path":"process.stderr","outFile":"process.html#process.stderr"},{"id":"process.stdin","type":"class property","signatures":[{"returns":[{"type":"fs.ReadStream"}]}],"description":"A `Readable Stream` for stdin. The stdin stream is paused by default, so one\nmust call `process.stdin.resume()` to read from it.\n\n#### Example\n\nHere's an example of opening standard input and listening for both events:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.stdin.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","short_description":"A `Readable Stream` for stdin. The stdin stream is paused by default, so one\nmust call `process.stdin.resume()` to read from it.\n","line":506,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"stdin","name_prefix":"process.","path":"process.stdin","outFile":"process.html#process.stdin"},{"id":"process.stdout","type":"class property","signatures":[{"returns":[{"type":"fs.WriteStream"}]}],"description":"A writable stream to `stdout`.\n\n`process.stderr` and `process.stdout` are unlike other streams in Node.js in\nthat writes to them are usually blocking.  They are blocking in the case that\nthey refer to regular files or TTY file descriptors. In the case they refer to\npipes, they are non-blocking like other streams.\n\nAs an aside, here's what the innards of `console.log()` look like:\n\n    console.log (d) {\n      process.stdout.write(d + '\\n');\n    };\n\n\n#@# process.hrtime(), Array[Number]\n\nReturns the current high-resolution real time in a `[seconds, nanoseconds]`\ntuple Array. It is relative to an arbitrary time in the past. It is not\nrelated to the time of day and therefore not subject to clock drift. The\nprimary use is for measuring performance between intervals.\n\nYou may pass in the result of a previous call to `process.hrtime()` to get\na diff reading, useful for benchmarks and measuring intervals.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.hrtime.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","short_description":"A writable stream to `stdout`.\n","line":539,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"stdout","name_prefix":"process.","path":"process.stdout","outFile":"process.html#process.stdout"},{"id":"process.title","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"A getter and setter to set what is displayed in `ps`.","short_description":"A getter and setter to set what is displayed in `ps`.","line":385,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"title","name_prefix":"process.","path":"process.title","outFile":"process.html#process.title"},{"id":"process.umask","type":"class method","signatures":[{"arguments":[{"name":"mask","optional":true,"types":["Number"],"description":"The mode creation mask to get or set\n\n"}]}],"arguments":[{"name":"mask","types":["Number"],"description":"The mode creation mask to get or set\n\n"}],"description":"Sets or reads the process's file mode creation mask. Child processes inherit the\nmask from the parent process. Returns the old mask if `mask` argument is given,\notherwise returns the current mask.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.umask.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Sets or reads the process's file mode creation mask. Child processes inherit the\nmask from the parent process. Returns the old mask if `mask` argument is given,\notherwise returns the current mask.\n","line":277,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"umask","name_prefix":"process.","path":"process.umask","outFile":"process.html#process.umask"},{"id":"process.uptime","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Number"}]}],"description":"Returns the number of seconds Node.js has been running.","short_description":"Returns the number of seconds Node.js has been running.","line":287,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"uptime","name_prefix":"process.","path":"process.uptime","outFile":"process.html#process.uptime"},{"id":"process.version","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"A compiled-in property that exposes the `NODE_VERSION`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.version.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","short_description":"A compiled-in property that exposes the `NODE_VERSION`.\n","line":398,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"version","name_prefix":"process.","path":"process.version","outFile":"process.html#process.version"},{"id":"process.versions","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"A property exposing version strings of Node.js and its dependencies.\n\n#### Example\n\nThe following code:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.versions.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>\n\noutputs something similar to:\n\n   { node: '0.4.12',\n    v8: '3.1.8.26',\n    ares: '1.7.4',\n    ev: '4.4',\n    openssl: '1.0.0e-fips' }","short_description":"A property exposing version strings of Node.js and its dependencies.\n","line":420,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"versions","name_prefix":"process.","path":"process.versions","outFile":"process.html#process.versions"},{"id":"process@exit","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the process is about to exit.  This is a good hook to perform\nconstant time checks of the module's state (like for unit tests).  The main\nevent loop will no longer be run after the `exit` callback finishes, so timers\nmay not be scheduled.\n\n#### Example: Listening for an `'exit'` event:\n\n    process.on('exit', function () {\n        process.nextTick(function () {\n            console.log('This will not run');\n        });\n        console.log('About to exit.');\n    });","short_description":"Emitted when the process is about to exit.  This is a good hook to perform\nconstant time checks of the module's state (like for unit tests).  The main\nevent loop will no longer be run after the `exit` callback finishes, so timers\nmay not be scheduled.\n","line":42,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"exit","name_prefix":"process@","path":"process.event.exit","outFile":"process.html#process.event.exit"},{"id":"process@uncaughtException","type":"event","signatures":[{"arguments":[{"name":"err","types":["Error"],"description":"The standard Error Object\n\n"}]}],"arguments":[{"name":"err","types":["Error"],"description":"The standard Error Object\n\n"}],"description":"Emitted when an exception bubbles all the way back to the event loop. If a\nlistener is added for this exception, the default action (which is to print a\nstack trace and exit) won't occur.\n\n#### Example: Listening for an `'uncaughtException'`:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/process/process.uncaughtException.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nWarning: An `uncaughtException` is a very crude mechanism for exception handling. Using `try / catch` in your program gives you more control over your program's flow.  Especially for server programs that are designed to stay running forever, `uncaughtException` can be a useful safety mechanism.\nDon't use it; use [domains](domain.html) instead. If you do use it, restart\nyour application after every unhandled exception!\nDo **not** use it as the Node.js equivalent of `On Error Resume Next`. An\nunhandled exception means your application - and by extension Node.js itself -\nis in an undefined state. Blindly resuming means **anything** could happen.\nThink of resuming as pulling the power cord while you are upgrading your system.\nYou have been warned.","short_description":"Emitted when an exception bubbles all the way back to the event loop. If a\nlistener is added for this exception, the default action (which is to print a\nstack trace and exit) won't occur.\n","line":66,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/process.markdown","name":"uncaughtException","name_prefix":"process@","path":"process.event.uncaughtException","outFile":"process.html#process.event.uncaughtException"}],"file":"0.8.14/nodejs_ref_guide/process.markdown","subclasses":[],"name":"process","path":"process","outFile":"process.html"},{"id":"punycode","type":"class","description":"Stability: 2 - Unstable\n\n[Punycode.js](https://github.com/bestiejs/punycode.js) is bundled with Node.js 0.6.2 and above.\nTo use it with other Node.js versions, use `npm` to install the `punycode`\nmodule first.\n\nTo access Punycode in your code, add `require('punycode')`.","short_description":"Stability: 2 - Unstable\n","line":13,"aliases":[],"children":[{"id":"punycode.decode","type":"class method","signatures":[{"arguments":[{"name":"str","types":["String"],"description":"A string to decode\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"str","types":["String"],"description":"A string to decode\n\n"}],"description":"Converts a Punycode string of ASCII code points to a string of Unicode code\npoints.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.decode.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Converts a Punycode string of ASCII code points to a string of Unicode code\npoints.\n","line":27,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"decode","name_prefix":"punycode.","path":"punycode.decode","outFile":"punycode.html#punycode.decode"},{"id":"punycode.encode","type":"class method","signatures":[{"arguments":[{"name":"str","types":["String"],"description":"A string to encode\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"str","types":["String"],"description":"A string to encode\n\n"}],"description":"Converts a string of Unicode code points to a Punycode string of ASCII code\npoints.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.encode.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Converts a string of Unicode code points to a Punycode string of ASCII code\npoints.\n","line":41,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"encode","name_prefix":"punycode.","path":"punycode.encode","outFile":"punycode.html#punycode.encode"},{"id":"punycode.toASCII","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"A domain to convert to Unicode\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"domain","types":["String"],"description":"A domain to convert to Unicode\n\n"}],"description":"Converts a Unicode string representing a domain name to Punycode. Only the\nnon-ASCII parts of the domain name will be converted, _i.e._, it doesn't matter\nif you call it with a domain that's already in ASCII.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.toascii.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Converts a Unicode string representing a domain name to Punycode. Only the\nnon-ASCII parts of the domain name will be converted, _i.e._, it doesn't matter\nif you call it with a domain that's already in ASCII.\n","line":69,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"toASCII","name_prefix":"punycode.","path":"punycode.toASCII","outFile":"punycode.html#punycode.toASCII"},{"id":"punycode.toUnicode","type":"class method","signatures":[{"arguments":[{"name":"domain","types":["String"],"description":"A domain to convert to Unicode\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"domain","types":["String"],"description":"A domain to convert to Unicode\n\n"}],"description":"Converts a Punycode string representing a domain name to Unicode. Only the\nPunycoded parts of the domain name will be converted, _i.e._, it doesn't matter\nif you call it on a string that has already been converted to Unicode.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.tounicode.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Converts a Punycode string representing a domain name to Unicode. Only the\nPunycoded parts of the domain name will be converted, _i.e._, it doesn't matter\nif you call it on a string that has already been converted to Unicode.\n","line":55,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"toUnicode","name_prefix":"punycode.","path":"punycode.toUnicode","outFile":"punycode.html#punycode.toUnicode"},{"id":"punycode.ucs2","type":"class","superclass":"punycode","description":"A UCS-2 implementation of Punycode.","short_description":"A UCS-2 implementation of Punycode.","line":76,"aliases":[],"children":[{"id":"punycode.ucs2.decode","type":"class method","signatures":[{"arguments":[{"name":"str","types":["String"],"description":"A String to decode\n\n"}],"returns":[{"type":"Array"}]}],"arguments":[{"name":"str","types":["String"],"description":"A String to decode\n\n"}],"description":"Creates an array containing the decimal code points of each Unicode character\nin the string. While [JavaScript uses UCS-2\ninternally](http://mathiasbynens.be/notes/javascript-encoding), this function\nconverts a pair of surrogate halves (each of which UCS-2 exposes as\nseparate characters) into a single code point, matching UTF-16.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.ucs2.decode.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Creates an array containing the decimal code points of each Unicode character\nin the string. While [JavaScript uses UCS-2\ninternally](http://mathiasbynens.be/notes/javascript-encoding), this function\nconverts a pair of surrogate halves (each of which UCS-2 exposes as\nseparate characters) into a single code point, matching UTF-16.\n","line":92,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"decode","name_prefix":"punycode.ucs2.","path":"punycode.ucs2.decode","outFile":"punycode.html#punycode.ucs2.decode"},{"id":"punycode.ucs2.encode","type":"class method","signatures":[{"arguments":[{"name":"codePoints","types":["Array"],"description":"An array of UTF code points\n\n"}],"returns":[{"type":"Array"}]}],"arguments":[{"name":"codePoints","types":["Array"],"description":"An array of UTF code points\n\n"}],"description":"Creates a string based on an array of decimal code points.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.ucs2.encode.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Creates a string based on an array of decimal code points.\n","line":104,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"encode","name_prefix":"punycode.ucs2.","path":"punycode.ucs2.encode","outFile":"punycode.html#punycode.ucs2.encode"}],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","subclasses":[],"name":"ucs2","name_prefix":"punycode.","path":"punycode.ucs2","outFile":"punycode.html"},{"id":"punycode.version","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"A string representing the current Punycode.js version number.","short_description":"A string representing the current Punycode.js version number.","line":111,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"version","name_prefix":"punycode.","path":"punycode.version","outFile":"punycode.html#punycode.version"},{"id":"punycode.ucs2","type":"class","superclass":"punycode","description":"A UCS-2 implementation of Punycode.","short_description":"A UCS-2 implementation of Punycode.","line":76,"aliases":[],"children":[{"id":"punycode.ucs2.decode","type":"class method","signatures":[{"arguments":[{"name":"str","types":["String"],"description":"A String to decode\n\n"}],"returns":[{"type":"Array"}]}],"arguments":[{"name":"str","types":["String"],"description":"A String to decode\n\n"}],"description":"Creates an array containing the decimal code points of each Unicode character\nin the string. While [JavaScript uses UCS-2\ninternally](http://mathiasbynens.be/notes/javascript-encoding), this function\nconverts a pair of surrogate halves (each of which UCS-2 exposes as\nseparate characters) into a single code point, matching UTF-16.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.ucs2.decode.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Creates an array containing the decimal code points of each Unicode character\nin the string. While [JavaScript uses UCS-2\ninternally](http://mathiasbynens.be/notes/javascript-encoding), this function\nconverts a pair of surrogate halves (each of which UCS-2 exposes as\nseparate characters) into a single code point, matching UTF-16.\n","line":92,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"decode","name_prefix":"punycode.ucs2.","path":"punycode.ucs2.decode","outFile":"punycode.html#punycode.ucs2.decode"},{"id":"punycode.ucs2.encode","type":"class method","signatures":[{"arguments":[{"name":"codePoints","types":["Array"],"description":"An array of UTF code points\n\n"}],"returns":[{"type":"Array"}]}],"arguments":[{"name":"codePoints","types":["Array"],"description":"An array of UTF code points\n\n"}],"description":"Creates a string based on an array of decimal code points.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/punycode/punycode.ucs2.encode.js?linestart=0&lineend=0&showlines=false' defer='defer'></script>","short_description":"Creates a string based on an array of decimal code points.\n","line":104,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","name":"encode","name_prefix":"punycode.ucs2.","path":"punycode.ucs2.encode","outFile":"punycode.html#punycode.ucs2.encode"}],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","subclasses":[],"name":"ucs2","name_prefix":"punycode.","path":"punycode.ucs2","outFile":"punycode.html"}],"file":"0.8.14/nodejs_ref_guide/punycode.markdown","subclasses":["punycode.ucs2"],"name":"punycode","path":"punycode","outFile":"punycode.html"},{"id":"querystring","type":"class","description":"\nThis module provides utilities for dealing with query strings in URLs. To\ninclude this module, add `require('querystring')` to your code.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/querystring/querystring.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"3 - Stable","short_description":"\nThis module provides utilities for dealing with query strings in URLs. To\ninclude this module, add `require('querystring')` to your code.\n","line":15,"aliases":[],"children":[{"id":"querystring.escape","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"The escape function used by `querystring.stringify()`, provided so that it can\nbe overridden, if necessary.","short_description":"The escape function used by `querystring.stringify()`, provided so that it can\nbe overridden, if necessary.","line":26,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/querystring.markdown","name":"escape","name_prefix":"querystring.","path":"querystring.escape","outFile":"querystring.html#querystring.escape"},{"id":"querystring.parse","type":"class method","signatures":[{"arguments":[{"name":"str","types":["String"],"description":"The query string to parse\n\n"},{"name":"sep","default_value":"&","optional":true,"types":["String"],"description":"The separator character\n\n"},{"name":"eq","default_value":"=","optional":true,"types":["String"],"description":"The equivalency character\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Additional configurations to pass\n\n"}],"returns":[{"type":"Object"}]}],"arguments":[{"name":"str","types":["String"],"description":"The query string to parse\n\n"},{"name":"sep","types":["String"],"description":"The separator character\n\n"},{"name":"eq","types":["String"],"description":"The equivalency character\n\n"},{"name":"options","types":["Object"],"description":"Additional configurations to pass\n\n"}],"description":"Deserialize a query string to an object and returns it. You can choose to\noverride the default separator and assignment characters.\n\n`options` may contain the `maxKeys` property (equal to 1000 by default). This is\nused to limit processed keys. Set it to 0 to remove the key count limitation.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/querystring/querystring.parse.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Deserialize a query string to an object and returns it. You can choose to\noverride the default separator and assignment characters.\n","line":47,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/querystring.markdown","name":"parse","name_prefix":"querystring.","path":"querystring.parse","outFile":"querystring.html#querystring.parse"},{"id":"querystring.stringify","type":"class method","signatures":[{"arguments":[{"name":"obj","types":["Object"],"description":"The JSON object to serialize\n\n"},{"name":"sep","default_value":"&","optional":true,"types":["String"],"description":"The separator character\n\n"},{"name":"eq","default_value":"=","optional":true,"types":["String"],"description":"The equivalency character\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"obj","types":["Object"],"description":"The JSON object to serialize\n\n"},{"name":"sep","types":["String"],"description":"The separator character\n\n"},{"name":"eq","types":["String"],"description":"The equivalency character\n\n"}],"description":"Serialize an object to a query string and returns it. You can choose to override\nthe default separator and assignment characters.\n\n#### Examples\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/querystring/querystring.stringify.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Serialize an object to a query string and returns it. You can choose to override\nthe default separator and assignment characters.\n","line":63,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/querystring.markdown","name":"stringify","name_prefix":"querystring.","path":"querystring.stringify","outFile":"querystring.html#querystring.stringify"},{"id":"querystring.unescape","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"The `unescape()` function, used by `querystring.parse()`, is provided so that it\ncan be overridden if necessary.","short_description":"The `unescape()` function, used by `querystring.parse()`, is provided so that it\ncan be overridden if necessary.","line":75,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/querystring.markdown","name":"unescape","name_prefix":"querystring.","path":"querystring.unescape","outFile":"querystring.html#querystring.unescape"}],"file":"0.8.14/nodejs_ref_guide/querystring.markdown","subclasses":[],"name":"querystring","path":"querystring","outFile":"querystring.html"},{"id":"readline","type":"class","description":"\nReadline allows you to read of a stream (such as STDIN) on a line-by-line basis.\nTo use this module, add `require('readline')` to your code.\n\nNote that once you've invoked this module, your Node.js program won't terminate\nuntil you've closed the interface, and the STDIN stream. Here's how to allow\nyour program to gracefully terminate:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/readline/readline.escaping.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: Crafting a tiny command line interface:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/readline/readline.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nFor more real-life use cases, take a look at this slightly more complicated\n[example](https://gist.github.com/901104), as well as the\n[http-console](https://github.com/cloudhead/http-console) module.","stability":"2 - Unstable","short_description":"\nReadline allows you to read of a stream (such as STDIN) on a line-by-line basis.\nTo use this module, add `require('readline')` to your code.\n","line":25,"aliases":[],"children":[{"id":"readline.createInterface","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Options to construct the interface\n\n"},{"name":"completer","arguments":[],"callback":true,"types":["Function"],"description":"A function to use for autocompletion\n\n"}],"returns":[{"type":"readline.interface"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Options to construct the interface\n\n"},{"name":"completer","types":["Function"],"description":"A function to use for autocompletion\n\n"}],"description":"Creates a [[readline.interface `Interface`]].\n\n`options` takes the following properties:\n\n - `input`: The readable stream to listen to (Required).\n\n - `output`: The writable stream to write readline data to (Required).\n\n - `completer`: An optional function that is used for tab autocompletion. See\n   below for an example of using this.\n\n - `terminal`: Pass `true` if the `input` and `output` streams should be\n   treated like a TTY, and have ANSI/VT100 escape codes written to it.\n   Defaults to checking `isTTY` on the `output` stream upon instantiation.\n\nThe `completer` function is given the current line entered by the user, and\nshould return an Array with two entries:\n\n 1. An Array with matching entries for the completion.\n\n 2. The substring that was used for the matching.\n\nThis ends up looking something like:\n`[[substr1, substr2, ...], originalsubstring]`.\n\n#### Example\n\n    function completer(line) {\n      var completions = '.help .error .exit .quit .q'.split(' ')\n      var hits = completions.filter(function(c) { return c.indexOf(line) == 0 })\n      // show all completions if none found\n      return [hits.length ? hits : completions, line]\n    }\n\nAlso, `completer` can be run in an asynchronous mode if it accepts two\narguments:\n\n    function completer(linePartial, callback) {\n      callback(null, [['123'], linePartial]);\n    }\n\n`createInterface` is commonly used with `process.stdin` and\n`process.stdout` in order to accept user input:\n\n    var readline = require('readline');\n    var rl = readline.createInterface({\n      input: process.stdin,\n      output: process.stdout\n    });\n\nOnce you have a readline instance, you most commonly listen for the\n`\"line\"` event.\n\nIf `terminal` is `true` for this instance, then the `output` stream will get\nthe best compatibility if it defines an `output.columns` property, and fires\na `\"resize\"` event on the `output` if/when the columns ever change\n(`process.stdout` does this automatically when it is a TTY).","short_description":"Creates a [[readline.interface `Interface`]].\n","line":90,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"createInterface","name_prefix":"readline.","path":"readline.createInterface","outFile":"readline.html#readline.createInterface"},{"id":"readline.interface","type":"class","superclass":"readline","description":"The class that represents a readline interface, with input and output streams.","short_description":"The class that represents a readline interface, with input and output streams.","line":98,"aliases":[],"children":[{"id":"readline.interface.close","type":"class method","signatures":[{"arguments":[]}],"description":"Closes the `Interface` instance, relinquishing control on the `input` and\n`output` streams. The [[readline.interface@close `'close'`]] event is also\nemitted.","short_description":"Closes the `Interface` instance, relinquishing control on the `input` and\n`output` streams. The [[readline.interface@close `'close'`]] event is also\nemitted.","line":118,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"close","name_prefix":"readline.interface.","path":"readline.interface.close","outFile":"readline.html#readline.interface.close"},{"id":"readline.interface.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses the readline `input` stream, allowing it to be resumed later if needed.","short_description":"Pauses the readline `input` stream, allowing it to be resumed later if needed.","line":107,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"pause","name_prefix":"readline.interface.","path":"readline.interface.pause","outFile":"readline.html#readline.interface.pause"},{"id":"readline.interface.prompt","type":"class method","signatures":[{"arguments":[{"name":"preserveCursor","optional":true,"types":["Boolean"],"description":"Set to `true` to prevent the cursor placement being \n\n*reset to `0`\n\n"}]}],"arguments":[{"name":"preserveCursor","types":["Boolean"],"description":"Set to `true` to prevent the cursor placement being \n\n*reset to `0`\n\n"}],"description":"Readies the readline for input from the user, putting the current `setPrompt`\noptions on a new line, giving the user a new spot to write.\n\nThis also resumes the `input` stream used with `createInterface` if it has\nbeen paused.","short_description":"Readies the readline for input from the user, putting the current `setPrompt`\noptions on a new line, giving the user a new spot to write.\n","line":132,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"prompt","name_prefix":"readline.interface.","path":"readline.interface.prompt","outFile":"readline.html#readline.interface.prompt"},{"id":"readline.interface.question","type":"class method","signatures":[{"arguments":[{"name":"query","types":["String"],"description":"A string to display the user\n\n"},{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"query","types":["String"],"description":"A string to display the user\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"}],"description":"Prepends the prompt with `query` and invokes `callback` with the user's respons\nafter it has been entered.\n\nThis also resumes the `input` stream used with `createInterface` if\nit has been paused.\n\n#### Example\n\n    readline.interface.question('What is your favorite food?', function(answer)\n    {\n      console.log('Oh, so your favorite food is ' + answer);\n    });","short_description":"Prepends the prompt with `query` and invokes `callback` with the user's respons\nafter it has been entered.\n","line":153,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"question","name_prefix":"readline.interface.","path":"readline.interface.question","outFile":"readline.html#readline.interface.question"},{"id":"readline.interface.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes the readline `input` stream.","short_description":"Resumes the readline `input` stream.","line":161,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"resume","name_prefix":"readline.interface.","path":"readline.interface.resume","outFile":"readline.html#readline.interface.resume"},{"id":"readline.interface.setPrompt","type":"class method","signatures":[{"arguments":[{"name":"prompt","types":["String"],"description":"The prompting character; this can also be a phrase\n\n"},{"name":"length","types":["String"],"description":"The length before line wrapping\n\n"}]}],"arguments":[{"name":"prompt","types":["String"],"description":"The prompting character; this can also be a phrase\n\n"},{"name":"length","types":["String"],"description":"The length before line wrapping\n\n"}],"description":"Sets the prompt character. For example, when you run `node` on the command line,\nyou'll see `> `, which is Node's prompt.","short_description":"Sets the prompt character. For example, when you run `node` on the command line,\nyou'll see `> `, which is Node's prompt.","line":173,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"setPrompt","name_prefix":"readline.interface.","path":"readline.interface.setPrompt","outFile":"readline.html#readline.interface.setPrompt"},{"id":"readline.interface.write","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"Data to write\n\n"},{"name":"key","optional":true,"types":["Object"],"description":"Represents the key sequence; only available if the terminal \n\n*is a TTY.\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"Data to write\n\n"},{"name":"key","types":["Object"],"description":"Represents the key sequence; only available if the terminal \n\n*is a TTY.\n\n"}],"description":"Writes `data` to `output` stream.\n\nThis also resumes the `input` stream if it has been paused.\n\n#### Example\n\n    rl.write('Delete me!');\n    // Simulate ctrl+u to delete the line written previously\n    rl.write(null, {ctrl: true, name: 'u'});","short_description":"Writes `data` to `output` stream.\n","line":192,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"write","name_prefix":"readline.interface.","path":"readline.interface.write","outFile":"readline.html#readline.interface.write"},{"id":"readline.interface@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when [[readline.interface.close `close()`]] is called.\n\nAlso emitted when the `input` stream receives its \"end\" event. The `Interface`\ninstance should be considered \"finished\" once this is emitted. For example, when\nthe `input` stream receives `^D`, respectively known as `EOT`.\n\nThis event is also called if there is no `SIGINT` event listener present when\nthe `input` stream receives a `^C`, respectively known as `SIGINT`.\n\n#### Example\n\nExample of listening for `close`, and exiting the program afterward:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/readline/readline.close.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted when [[readline.interface.close `close()`]] is called.\n","line":213,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"close","name_prefix":"readline.interface@","path":"readline.interface.event.close","outFile":"readline.html#readline.interface.event.close"},{"id":"readline.interface@line","type":"event","signatures":[{"arguments":[{"name":"line","types":["String"],"description":"The line that prompted the event\n\n"}]}],"arguments":[{"name":"line","types":["String"],"description":"The line that prompted the event\n\n"}],"description":"Emitted whenever the `input` stream receives a `\\n`, usually received when the user\nhits Enter, or Return. This is a good hook to listen for user input.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/readline/readline.line.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted whenever the `input` stream receives a `\\n`, usually received when the user\nhits Enter, or Return. This is a good hook to listen for user input.\n","line":227,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"line","name_prefix":"readline.interface@","path":"readline.interface.event.line","outFile":"readline.html#readline.interface.event.line"},{"id":"readline.interface@pause","type":"namespace","description":"Emitted whenever the `input` stream is paused.\n\nAlso emitted whenever the `input` stream is not paused and receives the\n`SIGCONT` event.\n\nFor more information see [[readline.interface@SIGTSTP `SIGTSTP`]]\nand readline.interface@SIGCONT `SIGCONT`]].\n\n#### Example: Listening for `pause`\n\n    rl.on('pause', function() {\n      console.log('Readline paused.');\n    });","short_description":"Emitted whenever the `input` stream is paused.\n","line":246,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"pause","name_prefix":"readline.interface@","path":"readline.interface.event.pause","outFile":"readline.html#readline.interface.event.pause"},{"id":"readline.interface@resume","type":"namespace","description":"Emitted whenever the `input` stream is resumed.\n\n#### Example: Listening for `resume`\n\n    rl.on('resume', function() {\n      console.log('Readline resumed.');\n    });","short_description":"Emitted whenever the `input` stream is resumed.\n","line":260,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"resume","name_prefix":"readline.interface@","path":"readline.interface.event.resume","outFile":"readline.html#readline.interface.event.resume"},{"id":"readline.interface@SIGCONT","type":"namespace","description":"Emitted whenever the `input` stream is sent to the background with `^Z`,\nrespectively known as `SIGTSTP`, and then continued with `fg(1)`. This event\nonly emits if the stream was not paused before sending the program to the\nbackground.\n\nWarning: **This does not work on Windows.**\n\n#### Example of Listening for `SIGCONT`:\n\n    rl.on('SIGCONT', function() {\n      // `prompt` will automatically resume the stream\n      rl.prompt();\n    });","short_description":"Emitted whenever the `input` stream is sent to the background with `^Z`,\nrespectively known as `SIGTSTP`, and then continued with `fg(1)`. This event\nonly emits if the stream was not paused before sending the program to the\nbackground.\n","line":320,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"SIGCONT","name_prefix":"readline.interface@","path":"readline.interface.event.SIGCONT","outFile":"readline.html#readline.interface.event.SIGCONT"},{"id":"readline.interface@SIGINT","type":"namespace","description":"Emitted whenever the `input` stream receives a `^C`, respectively known as\n`SIGINT`. If there is no `SIGINT` event listener present when the `input`\nstream receives a `SIGINT`, `pause` will be triggered.\n\n#### Example of Listening for `SIGINT`\n\n    rl.on('SIGINT', function() {\n      rl.question('Are you sure you want to exit?', function(answer) {\n        if (answer.match(/^y(es)?$/i)) rl.pause();\n      });\n    });","short_description":"Emitted whenever the `input` stream receives a `^C`, respectively known as\n`SIGINT`. If there is no `SIGINT` event listener present when the `input`\nstream receives a `SIGINT`, `pause` will be triggered.\n","line":277,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"SIGINT","name_prefix":"readline.interface@","path":"readline.interface.event.SIGINT","outFile":"readline.html#readline.interface.event.SIGINT"},{"id":"readline.interface@SIGTSTP","type":"namespace","description":"Emitted whenever the `input` stream receives a `^Z`, respectively known as\n`SIGTSTP`. If there is no `SIGTSTP` event listener present when the `input`\nstream receives a `SIGTSTP`, the program will be sent to the background.\n\nWhen the program is resumed with `fg`, the `pause` and `SIGCONT` events will be\nemitted. You can use either to resume the stream.\n\nThe `pause` and `SIGCONT` events are not triggered if the stream was paused\nbefore the program was sent to the background.\n\nWarning: **This does not work on Windows.**\n\n#### Example of Listening for `SIGTSTP`:\n\n    rl.on('SIGTSTP', function() {\n      // This will override SIGTSTP and prevent the program from going to the\n      // background.\n      console.log('Caught SIGTSTP.');\n    });","short_description":"Emitted whenever the `input` stream receives a `^Z`, respectively known as\n`SIGTSTP`. If there is no `SIGTSTP` event listener present when the `input`\nstream receives a `SIGTSTP`, the program will be sent to the background.\n","line":302,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"SIGTSTP","name_prefix":"readline.interface@","path":"readline.interface.event.SIGTSTP","outFile":"readline.html#readline.interface.event.SIGTSTP"}],"file":"0.8.14/nodejs_ref_guide/readline.markdown","subclasses":[],"name":"interface","name_prefix":"readline.","path":"readline.interface","outFile":"readline.html"},{"id":"readline.interface","type":"class","superclass":"readline","description":"The class that represents a readline interface, with input and output streams.","short_description":"The class that represents a readline interface, with input and output streams.","line":98,"aliases":[],"children":[{"id":"readline.interface.close","type":"class method","signatures":[{"arguments":[]}],"description":"Closes the `Interface` instance, relinquishing control on the `input` and\n`output` streams. The [[readline.interface@close `'close'`]] event is also\nemitted.","short_description":"Closes the `Interface` instance, relinquishing control on the `input` and\n`output` streams. The [[readline.interface@close `'close'`]] event is also\nemitted.","line":118,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"close","name_prefix":"readline.interface.","path":"readline.interface.close","outFile":"readline.html#readline.interface.close"},{"id":"readline.interface.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Pauses the readline `input` stream, allowing it to be resumed later if needed.","short_description":"Pauses the readline `input` stream, allowing it to be resumed later if needed.","line":107,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"pause","name_prefix":"readline.interface.","path":"readline.interface.pause","outFile":"readline.html#readline.interface.pause"},{"id":"readline.interface.prompt","type":"class method","signatures":[{"arguments":[{"name":"preserveCursor","optional":true,"types":["Boolean"],"description":"Set to `true` to prevent the cursor placement being \n\n*reset to `0`\n\n"}]}],"arguments":[{"name":"preserveCursor","types":["Boolean"],"description":"Set to `true` to prevent the cursor placement being \n\n*reset to `0`\n\n"}],"description":"Readies the readline for input from the user, putting the current `setPrompt`\noptions on a new line, giving the user a new spot to write.\n\nThis also resumes the `input` stream used with `createInterface` if it has\nbeen paused.","short_description":"Readies the readline for input from the user, putting the current `setPrompt`\noptions on a new line, giving the user a new spot to write.\n","line":132,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"prompt","name_prefix":"readline.interface.","path":"readline.interface.prompt","outFile":"readline.html#readline.interface.prompt"},{"id":"readline.interface.question","type":"class method","signatures":[{"arguments":[{"name":"query","types":["String"],"description":"A string to display the user\n\n"},{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"query","types":["String"],"description":"A string to display the user\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"}],"description":"Prepends the prompt with `query` and invokes `callback` with the user's respons\nafter it has been entered.\n\nThis also resumes the `input` stream used with `createInterface` if\nit has been paused.\n\n#### Example\n\n    readline.interface.question('What is your favorite food?', function(answer)\n    {\n      console.log('Oh, so your favorite food is ' + answer);\n    });","short_description":"Prepends the prompt with `query` and invokes `callback` with the user's respons\nafter it has been entered.\n","line":153,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"question","name_prefix":"readline.interface.","path":"readline.interface.question","outFile":"readline.html#readline.interface.question"},{"id":"readline.interface.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes the readline `input` stream.","short_description":"Resumes the readline `input` stream.","line":161,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"resume","name_prefix":"readline.interface.","path":"readline.interface.resume","outFile":"readline.html#readline.interface.resume"},{"id":"readline.interface.setPrompt","type":"class method","signatures":[{"arguments":[{"name":"prompt","types":["String"],"description":"The prompting character; this can also be a phrase\n\n"},{"name":"length","types":["String"],"description":"The length before line wrapping\n\n"}]}],"arguments":[{"name":"prompt","types":["String"],"description":"The prompting character; this can also be a phrase\n\n"},{"name":"length","types":["String"],"description":"The length before line wrapping\n\n"}],"description":"Sets the prompt character. For example, when you run `node` on the command line,\nyou'll see `> `, which is Node's prompt.","short_description":"Sets the prompt character. For example, when you run `node` on the command line,\nyou'll see `> `, which is Node's prompt.","line":173,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"setPrompt","name_prefix":"readline.interface.","path":"readline.interface.setPrompt","outFile":"readline.html#readline.interface.setPrompt"},{"id":"readline.interface.write","type":"class method","signatures":[{"arguments":[{"name":"data","types":["String"],"description":"Data to write\n\n"},{"name":"key","optional":true,"types":["Object"],"description":"Represents the key sequence; only available if the terminal \n\n*is a TTY.\n\n"}]}],"arguments":[{"name":"data","types":["String"],"description":"Data to write\n\n"},{"name":"key","types":["Object"],"description":"Represents the key sequence; only available if the terminal \n\n*is a TTY.\n\n"}],"description":"Writes `data` to `output` stream.\n\nThis also resumes the `input` stream if it has been paused.\n\n#### Example\n\n    rl.write('Delete me!');\n    // Simulate ctrl+u to delete the line written previously\n    rl.write(null, {ctrl: true, name: 'u'});","short_description":"Writes `data` to `output` stream.\n","line":192,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"write","name_prefix":"readline.interface.","path":"readline.interface.write","outFile":"readline.html#readline.interface.write"},{"id":"readline.interface@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when [[readline.interface.close `close()`]] is called.\n\nAlso emitted when the `input` stream receives its \"end\" event. The `Interface`\ninstance should be considered \"finished\" once this is emitted. For example, when\nthe `input` stream receives `^D`, respectively known as `EOT`.\n\nThis event is also called if there is no `SIGINT` event listener present when\nthe `input` stream receives a `^C`, respectively known as `SIGINT`.\n\n#### Example\n\nExample of listening for `close`, and exiting the program afterward:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/readline/readline.close.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted when [[readline.interface.close `close()`]] is called.\n","line":213,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"close","name_prefix":"readline.interface@","path":"readline.interface.event.close","outFile":"readline.html#readline.interface.event.close"},{"id":"readline.interface@line","type":"event","signatures":[{"arguments":[{"name":"line","types":["String"],"description":"The line that prompted the event\n\n"}]}],"arguments":[{"name":"line","types":["String"],"description":"The line that prompted the event\n\n"}],"description":"Emitted whenever the `input` stream receives a `\\n`, usually received when the user\nhits Enter, or Return. This is a good hook to listen for user input.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/readline/readline.line.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Emitted whenever the `input` stream receives a `\\n`, usually received when the user\nhits Enter, or Return. This is a good hook to listen for user input.\n","line":227,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"line","name_prefix":"readline.interface@","path":"readline.interface.event.line","outFile":"readline.html#readline.interface.event.line"},{"id":"readline.interface@pause","type":"namespace","description":"Emitted whenever the `input` stream is paused.\n\nAlso emitted whenever the `input` stream is not paused and receives the\n`SIGCONT` event.\n\nFor more information see [[readline.interface@SIGTSTP `SIGTSTP`]]\nand readline.interface@SIGCONT `SIGCONT`]].\n\n#### Example: Listening for `pause`\n\n    rl.on('pause', function() {\n      console.log('Readline paused.');\n    });","short_description":"Emitted whenever the `input` stream is paused.\n","line":246,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"pause","name_prefix":"readline.interface@","path":"readline.interface.event.pause","outFile":"readline.html#readline.interface.event.pause"},{"id":"readline.interface@resume","type":"namespace","description":"Emitted whenever the `input` stream is resumed.\n\n#### Example: Listening for `resume`\n\n    rl.on('resume', function() {\n      console.log('Readline resumed.');\n    });","short_description":"Emitted whenever the `input` stream is resumed.\n","line":260,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"resume","name_prefix":"readline.interface@","path":"readline.interface.event.resume","outFile":"readline.html#readline.interface.event.resume"},{"id":"readline.interface@SIGCONT","type":"namespace","description":"Emitted whenever the `input` stream is sent to the background with `^Z`,\nrespectively known as `SIGTSTP`, and then continued with `fg(1)`. This event\nonly emits if the stream was not paused before sending the program to the\nbackground.\n\nWarning: **This does not work on Windows.**\n\n#### Example of Listening for `SIGCONT`:\n\n    rl.on('SIGCONT', function() {\n      // `prompt` will automatically resume the stream\n      rl.prompt();\n    });","short_description":"Emitted whenever the `input` stream is sent to the background with `^Z`,\nrespectively known as `SIGTSTP`, and then continued with `fg(1)`. This event\nonly emits if the stream was not paused before sending the program to the\nbackground.\n","line":320,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"SIGCONT","name_prefix":"readline.interface@","path":"readline.interface.event.SIGCONT","outFile":"readline.html#readline.interface.event.SIGCONT"},{"id":"readline.interface@SIGINT","type":"namespace","description":"Emitted whenever the `input` stream receives a `^C`, respectively known as\n`SIGINT`. If there is no `SIGINT` event listener present when the `input`\nstream receives a `SIGINT`, `pause` will be triggered.\n\n#### Example of Listening for `SIGINT`\n\n    rl.on('SIGINT', function() {\n      rl.question('Are you sure you want to exit?', function(answer) {\n        if (answer.match(/^y(es)?$/i)) rl.pause();\n      });\n    });","short_description":"Emitted whenever the `input` stream receives a `^C`, respectively known as\n`SIGINT`. If there is no `SIGINT` event listener present when the `input`\nstream receives a `SIGINT`, `pause` will be triggered.\n","line":277,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"SIGINT","name_prefix":"readline.interface@","path":"readline.interface.event.SIGINT","outFile":"readline.html#readline.interface.event.SIGINT"},{"id":"readline.interface@SIGTSTP","type":"namespace","description":"Emitted whenever the `input` stream receives a `^Z`, respectively known as\n`SIGTSTP`. If there is no `SIGTSTP` event listener present when the `input`\nstream receives a `SIGTSTP`, the program will be sent to the background.\n\nWhen the program is resumed with `fg`, the `pause` and `SIGCONT` events will be\nemitted. You can use either to resume the stream.\n\nThe `pause` and `SIGCONT` events are not triggered if the stream was paused\nbefore the program was sent to the background.\n\nWarning: **This does not work on Windows.**\n\n#### Example of Listening for `SIGTSTP`:\n\n    rl.on('SIGTSTP', function() {\n      // This will override SIGTSTP and prevent the program from going to the\n      // background.\n      console.log('Caught SIGTSTP.');\n    });","short_description":"Emitted whenever the `input` stream receives a `^Z`, respectively known as\n`SIGTSTP`. If there is no `SIGTSTP` event listener present when the `input`\nstream receives a `SIGTSTP`, the program will be sent to the background.\n","line":302,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/readline.markdown","name":"SIGTSTP","name_prefix":"readline.interface@","path":"readline.interface.event.SIGTSTP","outFile":"readline.html#readline.interface.event.SIGTSTP"}],"file":"0.8.14/nodejs_ref_guide/readline.markdown","subclasses":[],"name":"interface","name_prefix":"readline.","path":"readline.interface","outFile":"readline.html"}],"file":"0.8.14/nodejs_ref_guide/readline.markdown","subclasses":["readline.interface"],"name":"readline","path":"readline","outFile":"readline.html"},{"id":"repl","type":"class","description":"A Read-Eval-Print-Loop (REPL) is available both as a standalone program and\neasily includable in other programs. The REPL provides a way to interactively\nrun JavaScript and see the results.  It can be used for debugging, testing, or\njust trying things out.\n\nBy executing `node` without any arguments from the command line, you'll be\ndropped into the REPL. It has a simplistic emacs line-editing:\n\n    mjr:~$ node\n    Type '.help' for options.\n    > a = [ 1, 2, 3];\n    [ 1, 2, 3 ]\n    > a.forEach(function (v) {\n    ...   console.log(v);\n    ...   });\n    1\n    2\n    3\n\nFor advanced line-editors, start `node` with the environmental variable\n`NODE_NO_READLINE=1`. This will start the main and debugger REPL in canonical\nterminal settings which allow you to use with `rlwrap`.\n\nFor a quicker configuration, you could add this to your `.bashrc` file:\n\n    alias node=\"env NODE_NO_READLINE=1 rlwrap node\"\n\n#### REPL Features\n\nInside the REPL, multi-line expressions can be input, and tab completion is\nsupported for both global and local variables.\n\nThe special variable `_` contains the result of the last expression, like so:\n\n    > [ \"a\", \"b\", \"c\" ]\n    [ 'a', 'b', 'c' ]\n    > _.length\n    3\n    > _ += 1\n    4\n\nThe REPL provides access to any variables in the global scope. You can expose a\nvariable to the REPL explicitly by assigning it to the `context` object\nassociated with each `REPLServer`.  For example:\n\n    // repl_test.js\n    var repl = require(\"repl\"),\n        msg = \"message\";\n\n    repl.start().context.m = msg;\n\nThings in the `context` object appear as local within the REPL:\n\n    mjr:~$ node repl_test.js\n    > m\n    'message'\n\n#### Special Commands\n\nThere are a few special REPL commands:\n\n  - `.break`: while inputting a multi-line expression, sometimes you get lost or\njust don't care about completing it; this wipes it out so you can start over\n  - `.clear`: resets the `context` object to an empty object and clears any\nmulti-line expression.\n  - `.exit`: closes the I/O stream, which causes the REPL to exit.\n  - `.help`: shows this list of special commands\n  - `.save`: save the current REPL session to a file, like so: `>.save\n./file/to/save.js`\n  - `.load`: loads a file into the current REPL session, like so: `>.load\n./file/to/load.js`\n\n#### Key Combinations\n\nThe following key combinations in the REPL have special effects:\n\n  - `<ctrl>C` - Similar to the `.break` keyword, this terminates the current\ncommand.  Press twice on a blank line to forcibly exit the REPL.\n  - `<ctrl>D` - Similar to the `.exit` keyword, it closes to stream and exits\nthe REPL","short_description":"A Read-Eval-Print-Loop (REPL) is available both as a standalone program and\neasily includable in other programs. The REPL provides a way to interactively\nrun JavaScript and see the results.  It can be used for debugging, testing, or\njust trying things out.\n","line":87,"aliases":[],"children":[{"id":"repl.start","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Configuration options for the REPL\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Configuration options for the REPL\n\n"}],"description":"Returns and starts a `REPLServer` instance.\n\n`options` is an object with following properties:\n\n- `prompt`: The starting prompt and `stream` for all I/O. Defaults to `> `.\n\n - `input`: The readable stream to listen to. Defaults to `process.stdin`.\n\n - `output`: The writable stream to write readline data to. Defaults to\n   `process.stdout`.\n\n - `terminal`: Pass `true` if the `stream` should be treated like a TTY, and\n   have ANSI/VT100 escape codes written to it. Defaults to checking `isTTY`\n   on the `output` stream upon instantiation.\n\n - `eval`: An asynchronous wrapper function that is used to eval each given\n   line. Defaults to an async wrapper for `eval()`. See below for an example of\n   a custom `eval`.\n\n - `useColors`: Specifies whether the `writer` function\n   should output colors. If a different `writer` function is set then this does\n   nothing. Defaults to the repl's `terminal` value.\n\n - `useGlobal`: Specifies whether the repl uses the `global` object,\n   instead of running scripts in a separate context. Defaults to `false`.\n\n - `ignoreUndefined`: Specifies whether the repl should output the\n   return value of a command if it's `undefined`. Defaults to `false`.\n\n - `writer`: The function to invoke for each command that gets evaluated which\n   returns the formatting (including coloring) to display. Defaults to\n   `util.inspect`.\n\n\n You can use your own `eval` function if it has the following signature:\n\n    function eval(cmd, context, filename, callback) {\n      callback(null, result);\n    }\n\nMultiple REPLs can be started against the same running instance of node.  Each\nshare the same global object but will have unique I/O.\n\n#### Examples\n\n <script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/repl/repl.start.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nFor an example of running a \"full-featured\" (`terminal`) REPL over\na `net.Server` and `net.Socket` instance, see: <https://gist.github.com/2209310>\n\nFor an example of running a REPL instance over `curl(1)`,\nsee: <https://gist.github.com/2053342>","short_description":"Returns and starts a `REPLServer` instance.\n","line":146,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/repl.markdown","name":"start","name_prefix":"repl.","path":"repl.start","outFile":"repl.html#repl.start"},{"id":"repl@exit","type":"namespace","description":"Emitted when the user exits the REPL in any of the defined ways. Namely, typing\n`.exit` at the repl, pressing Ctrl+C twice to signal SIGINT, or pressing Ctrl+D\nto signal \"end\" on the `input` stream.\n\n#### Example: Listening for `exit`\n\n    r.on('exit', function () {\n      console.log('Got \"exit\" event from repl!');\n      process.exit();\n    });","short_description":"Emitted when the user exits the REPL in any of the defined ways. Namely, typing\n`.exit` at the repl, pressing Ctrl+C twice to signal SIGINT, or pressing Ctrl+D\nto signal \"end\" on the `input` stream.\n","line":161,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/repl.markdown","name":"exit","name_prefix":"repl@","path":"repl.event.exit","outFile":"repl.html#repl.event.exit"}],"file":"0.8.14/nodejs_ref_guide/repl.markdown","subclasses":[],"name":"repl","path":"repl","outFile":"repl.html"},{"id":"socket","type":"class","superclass":"dgram","description":"The dgram Socket class encapsulates the datagram functionality.  It should be\ncreated via `dgram.createSocket(type, [callback])`.","short_description":"The dgram Socket class encapsulates the datagram functionality.  It should be\ncreated via `dgram.createSocket(type, [callback])`.","line":201,"aliases":[],"children":[{"id":"socket@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when a socket is closed with [[dgram.close `dgram.close()`]].  No new\n`message` events are emitted on this socket.","short_description":"Emitted when a socket is closed with [[dgram.close `dgram.close()`]].  No new\n`message` events are emitted on this socket.","line":227,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"close","name_prefix":"socket@","path":"socket.event.close","outFile":"dgram.html#socket.event.close"},{"id":"socket@error","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The error that was encountered\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The error that was encountered\n\n"}],"description":"Emitted when an error occurs.","short_description":"Emitted when an error occurs.","line":235,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"error","name_prefix":"socket@","path":"socket.event.error","outFile":"dgram.html#socket.event.error"},{"id":"socket@listening","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when a socket starts listening for datagrams. This happens as soon as\nUDP sockets are created.","short_description":"Emitted when a socket starts listening for datagrams. This happens as soon as\nUDP sockets are created.","line":219,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"listening","name_prefix":"socket@","path":"socket.event.listening","outFile":"dgram.html#socket.event.listening"},{"id":"socket@message","type":"event","signatures":[{"arguments":[{"name":"msg","types":["Buffer"],"description":"A `Buffer` of information\n\n"},{"name":"rinfo","types":["Object"],"description":"An object with the sender's address information and the number\n\n*of bytes in the datagram. \n\n"}]}],"arguments":[{"name":"msg","types":["Buffer"],"description":"A `Buffer` of information\n\n"},{"name":"rinfo","types":["Object"],"description":"An object with the sender's address information and the number\n\n*of bytes in the datagram. \n\n"}],"description":"Emitted when a new datagram is available on a socket.","short_description":"Emitted when a new datagram is available on a socket.","line":211,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","name":"message","name_prefix":"socket@","path":"socket.event.message","outFile":"dgram.html#socket.event.message"}],"file":"0.8.14/nodejs_ref_guide/dgram.markdown","subclasses":[],"name":"socket","path":"socket","outFile":"dgram.html"},{"id":"stream","type":"class","metadata":{"type":"global"},"description":"\nA stream is an abstract interface implemented by various objects in Node.js. For\nexample, a request to an HTTP server is a stream, as is stdout. Streams are\nreadable, writable, or both. All streams are instances of [[eventemitter `EventEmitter`]].\n\nFor more information, see [this article on understanding\nstreams](../nodejs_dev_guide/understanding_streams.html).\n\n#### Example: Printing to the console\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/streams/streams.1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Example: Reading from the console\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/streams/streams.2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"2 - Unstable","short_description":"\nA stream is an abstract interface implemented by various objects in Node.js. For\nexample, a request to an HTTP server is a stream, as is stdout. Streams are\nreadable, writable, or both. All streams are instances of [[eventemitter `EventEmitter`]].\n","line":23,"aliases":[],"children":[{"id":"stream.ReadableStream","type":"class","superclass":"stream","description":"","short_description":"","line":30,"aliases":[],"children":[{"id":"stream.ReadableStream.destroy","type":"class method","signatures":[{"arguments":[]}],"description":"Closes the underlying file descriptor.\n\nThe stream is no longer `writable` nor `readable`.  The stream will not emit\nany more 'data', or 'end' events. Any queued write data will not be sent.\n\nThe stream should emit the 'close' event once its resources have been disposed of.","short_description":"Closes the underlying file descriptor.\n","line":97,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"destroy","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.destroy","outFile":"stream.html#stream.ReadableStream.destroy"},{"id":"stream.ReadableStream.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Issues an advisory signal to the underlying communication layer, requesting\nthat no further data be sent until `resume()` is called.\n\nNote that, due to the advisory nature, certain streams will not be paused\nimmediately, and so `'data'` events may be emitted for some indeterminate\nperiod of time even after `pause()` is called. You may wish to buffer such\n`'data'` events.","short_description":"Issues an advisory signal to the underlying communication layer, requesting\nthat no further data be sent until `resume()` is called.\n","line":112,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"pause","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.pause","outFile":"stream.html#stream.ReadableStream.pause"},{"id":"stream.ReadableStream.pipe","type":"class method","signatures":[{"arguments":[{"name":"destination","types":["stream.WritableStream"],"description":"The WriteStream to connect to\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Any optional commands to send\n\n"}],"returns":[{"type":"stream"}]}],"arguments":[{"name":"destination","types":["stream.WritableStream"],"description":"The WriteStream to connect to\n\n"},{"name":"options","types":["Object"],"description":"Any optional commands to send\n\n"}],"description":"This is the `Stream.prototype()` method available on all `Stream` objects. It\nconnects this read stream to a `destination`. Incoming data on this stream is\nthen written to `destination`. The destination and source streams are kept in\nsync by Node.js pausing and resuming as necessary.\n\nThis function returns the `destination` stream.\n\nBy default, `end()` is called on the destination when the source stream emits\n`end`, so that `destination` is no longer writable. Pass `{ end: false }` into\n`options` to keep the destination stream open.\n\n#### Example\n\nEmulating the Unix `cat` command:\n\n    process.stdin.resume(); // process.stdin is paused by default, so we need to\nstart it up\n    process.stdin.pipe(process.stdout); // type something into the console &\nwatch it repeat\n\nThis keeps `process.stdout` open so that \"Goodbye\" can be written at the end.\n\n    process.stdin.resume();\n\n    process.stdin.pipe(process.stdout, { end: false });\n\n    process.stdin.on(\"end\", function() {\n      process.stdout.write(\"Goodbye\\n\");\n    });","short_description":"This is the `Stream.prototype()` method available on all `Stream` objects. It\nconnects this read stream to a `destination`. Incoming data on this stream is\nthen written to `destination`. The destination and source streams are kept in\nsync by Node.js pausing and resuming as necessary.\n","line":152,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"pipe","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.pipe","outFile":"stream.html#stream.ReadableStream.pipe"},{"id":"stream.ReadableStream.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes the incoming `'data'` events after a `pause()`.","short_description":"Resumes the incoming `'data'` events after a `pause()`.","line":173,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"resume","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.resume","outFile":"stream.html#stream.ReadableStream.resume"},{"id":"stream.ReadableStream.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use; this can be `'utf8'`, \n\n*`'utf16le'` (`'ucs2'`), `'ascii'`, or `'hex'`\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; this can be `'utf8'`, \n\n*`'utf16le'` (`'ucs2'`), `'ascii'`, or `'hex'`\n\n"}],"description":"Makes the [[stream.ReadableStream@data `'data'`]] event emit a string instead of a `Buffer`.","short_description":"Makes the [[stream.ReadableStream@data `'data'`]] event emit a string instead of a `Buffer`.","line":164,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"setEncoding","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.setEncoding","outFile":"stream.html#stream.ReadableStream.setEncoding"},{"id":"stream.ReadableStream@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the underlying resource (for example, the backing file descriptor)\nhas been closed. Not all streams emit this.","short_description":"Emitted when the underlying resource (for example, the backing file descriptor)\nhas been closed. Not all streams emit this.","line":41,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"close","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.close","outFile":"stream.html#stream.ReadableStream.event.close"},{"id":"stream.ReadableStream@data","type":"event","signatures":[{"arguments":[{"name":"data","types":["Buffer","String"],"description":"The data being emitted\n\n"}]}],"arguments":[{"name":"data","types":["Buffer","String"],"description":"The data being emitted\n\n"}],"description":"The `data` event emits either a `Buffer` (by default) or a string if\n`setEncoding()` was previously used on the stream.","short_description":"The `data` event emits either a `Buffer` (by default) or a string if\n`setEncoding()` was previously used on the stream.","line":53,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"data","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.data","outFile":"stream.html#stream.ReadableStream.event.data"},{"id":"stream.ReadableStream@end","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the stream has received an EOF (FIN in TCP terminology). Indicates\nthat no more `data` events will happen. If the stream is also writable, it may\nbe possible to continue writing.","short_description":"Emitted when the stream has received an EOF (FIN in TCP terminology). Indicates\nthat no more `data` events will happen. If the stream is also writable, it may\nbe possible to continue writing.","line":65,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"end","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.end","outFile":"stream.html#stream.ReadableStream.event.end"},{"id":"stream.ReadableStream@error","type":"event","signatures":[{"arguments":[]}],"description":"Emitted if there was an error receiving data.","short_description":"Emitted if there was an error receiving data.","line":74,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"error","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.error","outFile":"stream.html#stream.ReadableStream.event.error"},{"id":"stream.ReadableStream@pipe","type":"event","signatures":[{"arguments":[{"name":"src","types":["stream.ReadableStream"],"description":"The readable stream\n\n"}]}],"arguments":[{"name":"src","types":["stream.ReadableStream"],"description":"The readable stream\n\n"}],"description":"Emitted when the stream is passed to a readable stream's pipe method.","short_description":"Emitted when the stream is passed to a readable stream's pipe method.","line":85,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"pipe","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.pipe","outFile":"stream.html#stream.ReadableStream.event.pipe"}],"file":"0.8.14/nodejs_ref_guide/stream.markdown","subclasses":[],"name":"ReadableStream","name_prefix":"stream.","path":"stream.ReadableStream","outFile":"stream.html"},{"id":"stream.WritableStream","type":"class","superclass":"stream","description":"","short_description":"","line":180,"aliases":[],"children":[{"id":"stream.WritableStream.destroy","type":"class method","signatures":[{"arguments":[]}],"description":"Closes the underlying file descriptor. The stream doesn't emit any more events.\nAny queued write data is not sent.","short_description":"Closes the underlying file descriptor. The stream doesn't emit any more events.\nAny queued write data is not sent.","line":239,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"destroy","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.destroy","outFile":"stream.html#stream.WritableStream.destroy"},{"id":"stream.WritableStream.destroySoon","type":"class method","signatures":[{"arguments":[]}],"description":"After the write queue is drained, this closes the file descriptor.\n\n`destroySoon()` can still destroy straight away, as long as there is no data\nleft in the queue for writes.","short_description":"After the write queue is drained, this closes the file descriptor.\n","line":252,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"destroySoon","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.destroySoon","outFile":"stream.html#stream.WritableStream.destroySoon"},{"id":"stream.WritableStream.end","type":"class method","signatures":[{"arguments":[]},{"arguments":[{"name":"string","types":["String"],"description":"The message to send\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"}]},{"arguments":[{"name":"buffer","types":["Buffer"],"description":"The buffer to send\n\n"}]}],"arguments":[{"name":"string","types":["String"],"description":"The message to send\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to send\n\n"}],"description":"Terminates the stream with EOF or FIN. This call send queued write data before\nclosing the stream.\n\nFor `stream.WritableStream.end(string, encoding)`, a `string` with the given\n`encoding` is sent. This is useful to reduce the number of packets sent.\n\nFor `stream.WritableStream.end(Buffer)`, a `buffer` is sent.","short_description":"Terminates the stream with EOF or FIN. This call send queued write data before\nclosing the stream.\n","line":273,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"end","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.end","outFile":"stream.html#stream.WritableStream.end"},{"id":"stream.WritableStream.writable","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"A boolean that is `true` by default, but turns `false` after an `error` event\noccurs, the stream comes to an `'end'`, or if `destroy()` was called.","short_description":"A boolean that is `true` by default, but turns `false` after an `error` event\noccurs, the stream comes to an `'end'`, or if `destroy()` was called.","line":190,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"writable","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.writable","outFile":"stream.html#stream.WritableStream.writable"},{"id":"stream.WritableStream.write","type":"class method","signatures":[{"arguments":[{"name":"string","types":["String"],"description":"The string to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"}]},{"arguments":[{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"}]}],"arguments":[{"name":"string","types":["String"],"description":"The string to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"},{"name":"fd","types":["Number"],"description":"An optional file descriptor to pass\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"}],"description":"Writes `string` with the given `encoding` to the stream, or write `buffer`.\nReturns `true` if the string has been flushed to the kernel buffer.  Returns\n`false` to indicate that the kernel buffer is full, and the data will be sent\nout in the future. The `drain` event indicates when the kernel buffer is empty\nagain.","short_description":"Writes `string` with the given `encoding` to the stream, or write `buffer`.\nReturns `true` if the string has been flushed to the kernel buffer.  Returns\n`false` to indicate that the kernel buffer is full, and the data will be sent\nout in the future. The `drain` event indicates when the kernel buffer is empty\nagain.","line":293,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"write","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.write","outFile":"stream.html#stream.WritableStream.write"},{"id":"stream.WritableStream@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the underlying file descriptor has been closed.","short_description":"Emitted when the underlying file descriptor has been closed.","line":202,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"close","name_prefix":"stream.WritableStream@","path":"stream.WritableStream.event.close","outFile":"stream.html#stream.WritableStream.event.close"},{"id":"stream.WritableStream@drain","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the stream's write queue empties and it's safe to write without\nbuffering again. Listen for it when `stream.write()` returns `false`.\n\nThe `'drain'` event can happen at **any time**, regardless of whether or not\n`stream.write()` has previously returned `false`. To avoid receiving unwanted\n`'drain'` events, listen using `stream.once()`.","short_description":"Emitted when the stream's write queue empties and it's safe to write without\nbuffering again. Listen for it when `stream.write()` returns `false`.\n","line":217,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"drain","name_prefix":"stream.WritableStream@","path":"stream.WritableStream.event.drain","outFile":"stream.html#stream.WritableStream.event.drain"},{"id":"stream.WritableStream@error","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was received\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was received\n\n"}],"description":"Emitted when there's an error with the exception `exception`.","short_description":"Emitted when there's an error with the exception `exception`.","line":228,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"error","name_prefix":"stream.WritableStream@","path":"stream.WritableStream.event.error","outFile":"stream.html#stream.WritableStream.event.error"}],"file":"0.8.14/nodejs_ref_guide/stream.markdown","subclasses":[],"name":"WritableStream","name_prefix":"stream.","path":"stream.WritableStream","outFile":"stream.html"},{"id":"stream.ReadableStream","type":"class","superclass":"stream","description":"","short_description":"","line":30,"aliases":[],"children":[{"id":"stream.ReadableStream.destroy","type":"class method","signatures":[{"arguments":[]}],"description":"Closes the underlying file descriptor.\n\nThe stream is no longer `writable` nor `readable`.  The stream will not emit\nany more 'data', or 'end' events. Any queued write data will not be sent.\n\nThe stream should emit the 'close' event once its resources have been disposed of.","short_description":"Closes the underlying file descriptor.\n","line":97,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"destroy","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.destroy","outFile":"stream.html#stream.ReadableStream.destroy"},{"id":"stream.ReadableStream.pause","type":"class method","signatures":[{"arguments":[]}],"description":"Issues an advisory signal to the underlying communication layer, requesting\nthat no further data be sent until `resume()` is called.\n\nNote that, due to the advisory nature, certain streams will not be paused\nimmediately, and so `'data'` events may be emitted for some indeterminate\nperiod of time even after `pause()` is called. You may wish to buffer such\n`'data'` events.","short_description":"Issues an advisory signal to the underlying communication layer, requesting\nthat no further data be sent until `resume()` is called.\n","line":112,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"pause","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.pause","outFile":"stream.html#stream.ReadableStream.pause"},{"id":"stream.ReadableStream.pipe","type":"class method","signatures":[{"arguments":[{"name":"destination","types":["stream.WritableStream"],"description":"The WriteStream to connect to\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Any optional commands to send\n\n"}],"returns":[{"type":"stream"}]}],"arguments":[{"name":"destination","types":["stream.WritableStream"],"description":"The WriteStream to connect to\n\n"},{"name":"options","types":["Object"],"description":"Any optional commands to send\n\n"}],"description":"This is the `Stream.prototype()` method available on all `Stream` objects. It\nconnects this read stream to a `destination`. Incoming data on this stream is\nthen written to `destination`. The destination and source streams are kept in\nsync by Node.js pausing and resuming as necessary.\n\nThis function returns the `destination` stream.\n\nBy default, `end()` is called on the destination when the source stream emits\n`end`, so that `destination` is no longer writable. Pass `{ end: false }` into\n`options` to keep the destination stream open.\n\n#### Example\n\nEmulating the Unix `cat` command:\n\n    process.stdin.resume(); // process.stdin is paused by default, so we need to\nstart it up\n    process.stdin.pipe(process.stdout); // type something into the console &\nwatch it repeat\n\nThis keeps `process.stdout` open so that \"Goodbye\" can be written at the end.\n\n    process.stdin.resume();\n\n    process.stdin.pipe(process.stdout, { end: false });\n\n    process.stdin.on(\"end\", function() {\n      process.stdout.write(\"Goodbye\\n\");\n    });","short_description":"This is the `Stream.prototype()` method available on all `Stream` objects. It\nconnects this read stream to a `destination`. Incoming data on this stream is\nthen written to `destination`. The destination and source streams are kept in\nsync by Node.js pausing and resuming as necessary.\n","line":152,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"pipe","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.pipe","outFile":"stream.html#stream.ReadableStream.pipe"},{"id":"stream.ReadableStream.resume","type":"class method","signatures":[{"arguments":[]}],"description":"Resumes the incoming `'data'` events after a `pause()`.","short_description":"Resumes the incoming `'data'` events after a `pause()`.","line":173,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"resume","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.resume","outFile":"stream.html#stream.ReadableStream.resume"},{"id":"stream.ReadableStream.setEncoding","type":"class method","signatures":[{"arguments":[{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use; this can be `'utf8'`, \n\n*`'utf16le'` (`'ucs2'`), `'ascii'`, or `'hex'`\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding to use; this can be `'utf8'`, \n\n*`'utf16le'` (`'ucs2'`), `'ascii'`, or `'hex'`\n\n"}],"description":"Makes the [[stream.ReadableStream@data `'data'`]] event emit a string instead of a `Buffer`.","short_description":"Makes the [[stream.ReadableStream@data `'data'`]] event emit a string instead of a `Buffer`.","line":164,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"setEncoding","name_prefix":"stream.ReadableStream.","path":"stream.ReadableStream.setEncoding","outFile":"stream.html#stream.ReadableStream.setEncoding"},{"id":"stream.ReadableStream@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the underlying resource (for example, the backing file descriptor)\nhas been closed. Not all streams emit this.","short_description":"Emitted when the underlying resource (for example, the backing file descriptor)\nhas been closed. Not all streams emit this.","line":41,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"close","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.close","outFile":"stream.html#stream.ReadableStream.event.close"},{"id":"stream.ReadableStream@data","type":"event","signatures":[{"arguments":[{"name":"data","types":["Buffer","String"],"description":"The data being emitted\n\n"}]}],"arguments":[{"name":"data","types":["Buffer","String"],"description":"The data being emitted\n\n"}],"description":"The `data` event emits either a `Buffer` (by default) or a string if\n`setEncoding()` was previously used on the stream.","short_description":"The `data` event emits either a `Buffer` (by default) or a string if\n`setEncoding()` was previously used on the stream.","line":53,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"data","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.data","outFile":"stream.html#stream.ReadableStream.event.data"},{"id":"stream.ReadableStream@end","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the stream has received an EOF (FIN in TCP terminology). Indicates\nthat no more `data` events will happen. If the stream is also writable, it may\nbe possible to continue writing.","short_description":"Emitted when the stream has received an EOF (FIN in TCP terminology). Indicates\nthat no more `data` events will happen. If the stream is also writable, it may\nbe possible to continue writing.","line":65,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"end","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.end","outFile":"stream.html#stream.ReadableStream.event.end"},{"id":"stream.ReadableStream@error","type":"event","signatures":[{"arguments":[]}],"description":"Emitted if there was an error receiving data.","short_description":"Emitted if there was an error receiving data.","line":74,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"error","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.error","outFile":"stream.html#stream.ReadableStream.event.error"},{"id":"stream.ReadableStream@pipe","type":"event","signatures":[{"arguments":[{"name":"src","types":["stream.ReadableStream"],"description":"The readable stream\n\n"}]}],"arguments":[{"name":"src","types":["stream.ReadableStream"],"description":"The readable stream\n\n"}],"description":"Emitted when the stream is passed to a readable stream's pipe method.","short_description":"Emitted when the stream is passed to a readable stream's pipe method.","line":85,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"pipe","name_prefix":"stream.ReadableStream@","path":"stream.ReadableStream.event.pipe","outFile":"stream.html#stream.ReadableStream.event.pipe"}],"file":"0.8.14/nodejs_ref_guide/stream.markdown","subclasses":[],"name":"ReadableStream","name_prefix":"stream.","path":"stream.ReadableStream","outFile":"stream.html"},{"id":"stream.WritableStream","type":"class","superclass":"stream","description":"","short_description":"","line":180,"aliases":[],"children":[{"id":"stream.WritableStream.destroy","type":"class method","signatures":[{"arguments":[]}],"description":"Closes the underlying file descriptor. The stream doesn't emit any more events.\nAny queued write data is not sent.","short_description":"Closes the underlying file descriptor. The stream doesn't emit any more events.\nAny queued write data is not sent.","line":239,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"destroy","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.destroy","outFile":"stream.html#stream.WritableStream.destroy"},{"id":"stream.WritableStream.destroySoon","type":"class method","signatures":[{"arguments":[]}],"description":"After the write queue is drained, this closes the file descriptor.\n\n`destroySoon()` can still destroy straight away, as long as there is no data\nleft in the queue for writes.","short_description":"After the write queue is drained, this closes the file descriptor.\n","line":252,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"destroySoon","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.destroySoon","outFile":"stream.html#stream.WritableStream.destroySoon"},{"id":"stream.WritableStream.end","type":"class method","signatures":[{"arguments":[]},{"arguments":[{"name":"string","types":["String"],"description":"The message to send\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"}]},{"arguments":[{"name":"buffer","types":["Buffer"],"description":"The buffer to send\n\n"}]}],"arguments":[{"name":"string","types":["String"],"description":"The message to send\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to send\n\n"}],"description":"Terminates the stream with EOF or FIN. This call send queued write data before\nclosing the stream.\n\nFor `stream.WritableStream.end(string, encoding)`, a `string` with the given\n`encoding` is sent. This is useful to reduce the number of packets sent.\n\nFor `stream.WritableStream.end(Buffer)`, a `buffer` is sent.","short_description":"Terminates the stream with EOF or FIN. This call send queued write data before\nclosing the stream.\n","line":273,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"end","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.end","outFile":"stream.html#stream.WritableStream.end"},{"id":"stream.WritableStream.writable","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"A boolean that is `true` by default, but turns `false` after an `error` event\noccurs, the stream comes to an `'end'`, or if `destroy()` was called.","short_description":"A boolean that is `true` by default, but turns `false` after an `error` event\noccurs, the stream comes to an `'end'`, or if `destroy()` was called.","line":190,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"writable","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.writable","outFile":"stream.html#stream.WritableStream.writable"},{"id":"stream.WritableStream.write","type":"class method","signatures":[{"arguments":[{"name":"string","types":["String"],"description":"The string to write\n\n"},{"name":"encoding","default_value":"utf8","optional":true,"types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"}]},{"arguments":[{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"}]}],"arguments":[{"name":"string","types":["String"],"description":"The string to write\n\n"},{"name":"encoding","types":["String"],"description":"The encoding to use; defaults to `utf8`\n\n"},{"name":"fd","types":["Number"],"description":"An optional file descriptor to pass\n\n"},{"name":"buffer","types":["Buffer"],"description":"The buffer to write to\n\n"}],"description":"Writes `string` with the given `encoding` to the stream, or write `buffer`.\nReturns `true` if the string has been flushed to the kernel buffer.  Returns\n`false` to indicate that the kernel buffer is full, and the data will be sent\nout in the future. The `drain` event indicates when the kernel buffer is empty\nagain.","short_description":"Writes `string` with the given `encoding` to the stream, or write `buffer`.\nReturns `true` if the string has been flushed to the kernel buffer.  Returns\n`false` to indicate that the kernel buffer is full, and the data will be sent\nout in the future. The `drain` event indicates when the kernel buffer is empty\nagain.","line":293,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"write","name_prefix":"stream.WritableStream.","path":"stream.WritableStream.write","outFile":"stream.html#stream.WritableStream.write"},{"id":"stream.WritableStream@close","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the underlying file descriptor has been closed.","short_description":"Emitted when the underlying file descriptor has been closed.","line":202,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"close","name_prefix":"stream.WritableStream@","path":"stream.WritableStream.event.close","outFile":"stream.html#stream.WritableStream.event.close"},{"id":"stream.WritableStream@drain","type":"event","signatures":[{"arguments":[]}],"description":"Emitted when the stream's write queue empties and it's safe to write without\nbuffering again. Listen for it when `stream.write()` returns `false`.\n\nThe `'drain'` event can happen at **any time**, regardless of whether or not\n`stream.write()` has previously returned `false`. To avoid receiving unwanted\n`'drain'` events, listen using `stream.once()`.","short_description":"Emitted when the stream's write queue empties and it's safe to write without\nbuffering again. Listen for it when `stream.write()` returns `false`.\n","line":217,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"drain","name_prefix":"stream.WritableStream@","path":"stream.WritableStream.event.drain","outFile":"stream.html#stream.WritableStream.event.drain"},{"id":"stream.WritableStream@error","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was received\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The exception that was received\n\n"}],"description":"Emitted when there's an error with the exception `exception`.","short_description":"Emitted when there's an error with the exception `exception`.","line":228,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/stream.markdown","name":"error","name_prefix":"stream.WritableStream@","path":"stream.WritableStream.event.error","outFile":"stream.html#stream.WritableStream.event.error"}],"file":"0.8.14/nodejs_ref_guide/stream.markdown","subclasses":[],"name":"WritableStream","name_prefix":"stream.","path":"stream.WritableStream","outFile":"stream.html"}],"file":"0.8.14/nodejs_ref_guide/stream.markdown","subclasses":["stream.ReadableStream","stream.WritableStream"],"name":"stream","path":"stream","outFile":"stream.html"},{"id":"StringDecoder","type":"class","description":"\nStringDecoder decodes a [[Buffer buffer]] to a string. It is a simple interface\n to `buffer.toString()` but provides additional support for utf8.\n\nTo use this module, add `require('string_decoder')` to your code.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/string_decoder/string_decoder.js?linestart=3&lineend=0&showlines=true' defer='defer'></script>","stability":"3 - Stable","short_description":"\nStringDecoder decodes a [[Buffer buffer]] to a string. It is a simple interface\n to `buffer.toString()` but provides additional support for utf8.\n","line":16,"aliases":[],"children":[{"id":"new StringDecoder","type":"constructor","signatures":[{"arguments":[{"name":"encoding","default_value":"utf8","types":["String"],"description":"The encoding that the string is in\n\n"}]}],"arguments":[{"name":"encoding","types":["String"],"description":"The encoding that the string is in\n\n"}],"description":"Creates a new `StringDecoder`.","short_description":"Creates a new `StringDecoder`.","line":24,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/string_decoder.markdown","name":"new","name_prefix":"StringDecoder.","path":"StringDecoder.new","outFile":"string_decoder.html#StringDecoder.new"},{"id":"StringDecoder.write","type":"class method","signatures":[{"arguments":[{"name":"buffer","types":["Buffer"],"description":"The buffer to convert\n\n\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"buffer","types":["Buffer"],"description":"The buffer to convert\n\n\n\n"}],"related_to":"Buffer.toString","description":"Returns a decoded string.","short_description":"Returns a decoded string.","line":32,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/string_decoder.markdown","name":"write","name_prefix":"StringDecoder.","path":"StringDecoder.write","outFile":"string_decoder.html#StringDecoder.write"}],"file":"0.8.14/nodejs_ref_guide/string_decoder.markdown","subclasses":[],"name":"StringDecoder","path":"StringDecoder","outFile":"string_decoder.html"},{"id":"timer","type":"class","metadata":{"type":"global"},"description":"\nThe timer functions are useful for scheduling functions to run after a defined\namount of time. All of the objects in this class are global; the method calls\ndon't need to be prepended with an object name.\n\nIt's important to note that your callback probably *won't* be called in exactly\n`delay` milliseconds. Node.js makes no guarantees about the exact timing of when\nthe callback is fired, nor of the ordering things will fire in. The callback is\ncalled as close as possible to the time specified.\n\nThe difference between ``setInterval()` and `setTimeout()` is simple:\n`setTimeout()` executes a function after a certain period of time, while\n`setInterval()` executes a function, then after a set period of time, executes\nthe function again, then waits again, and executes again. This continues until\n`clearInterval()` is called.\n\n\n#### Example: The Wrong Way to use Timers\n\n\t\tfor (var i = 0; i < 5; i++) {\n\t\t   setTimeout(function () {\n\t\t     console.log(i);\n\t\t   }, i);\n\t\t }\n\nThe code above prints the number `5` five times. This happens because the loop\nfills up before the first `setTimeout()` is called.\n\n#### Example: The Right Way to use Timers\n\nThe solution to the above problem is to create a\n[closure](http://stackoverflow.com/questions/1801957/what-exactly-does-closure-r\nefer-to-in-javascript) so that the current value of `i` is stored:\n\n     for (var i = 0; i < 5; i++) {\n       (\n           function(i) {\n               setTimeout(function () {\n                   console.log(i);\n                }, i);\n            }\n        )(i)};","stability":"5 - Locked","short_description":"\nThe timer functions are useful for scheduling functions to run after a defined\namount of time. All of the objects in this class are global; the method calls\ndon't need to be prepended with an object name.\n","line":54,"aliases":[],"children":[{"id":"timer.clearInterval","type":"class method","signatures":[{"arguments":[{"name":"intervalId","types":["Number"],"description":"The id of the interval\n\n"}]}],"arguments":[{"name":"intervalId","types":["Number"],"description":"The id of the interval\n\n"}],"description":"Stops a interval from triggering.","short_description":"Stops a interval from triggering.","line":66,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/timers.markdown","name":"clearInterval","name_prefix":"timer.","path":"timer.clearInterval","outFile":"timers.html#timer.clearInterval"},{"id":"timer.clearTimeout","type":"class method","signatures":[{"arguments":[{"name":"timeoutId","types":["Number"],"description":"The id of the timeout\n\n"}]}],"arguments":[{"name":"timeoutId","types":["Number"],"description":"The id of the timeout\n\n"}],"description":"Prevents a timeout from triggering.","short_description":"Prevents a timeout from triggering.","line":77,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/timers.markdown","name":"clearTimeout","name_prefix":"timer.","path":"timer.clearTimeout","outFile":"timers.html#timer.clearTimeout"},{"id":"timer.setInterval","type":"class method","signatures":[{"arguments":[{"name":"callback","arguments":[],"callback":true,"types":["Function"],"description":"The callback function to execute\n\n"},{"name":"delay","types":["Number"],"description":"The delay (in milliseconds) before executing the callback\n\n"},{"name":"arg","ellipsis":true,"optional":true,"types":["Object"],"description":"Any optional arguments to pass the to callback\n\n"}]}],"arguments":[{"name":"callback","types":["Function"],"description":"The callback function to execute\n\n"},{"name":"delay","types":["Number"],"description":"The delay (in milliseconds) before executing the callback\n\n"},{"name":"arg","types":["Object"],"description":"Any optional arguments to pass the to callback\n\n"}],"description":"This schedules the repeated execution of a callback function after a defined\ndelay. It returns an `intervalId` for possible use with `clearInterval()`.\nOptionally, you can also pass arguments to the callback.\n\n\n#### Example\n\t\tvar interval_count = 0;\n\n\t\t// Set an interval for one second, twice;\n\t\t// on the third second, break out\n\t\tsetInterval(function(param) {\n\t\t  ++interval_count;\n\n\t\t  if (interval_count == 3)\n\t\t    clearInterval(this);\n\t\t}, 1000, 'test param');\n\n\n\n\n/**\n timer.setTimeout(callback(), delay [, arg...])\n- callback {Function}   The callback function to execute\n- delay {Number}   The delay (in milliseconds) before executing the callback\n- arg {Object}  Any optional arguments to pass the to callback\n\nThis function schedules the execution of a one-time callback function after a\ndefined delay, It returns a `timeoutId`, which can be used later with\n`clearTimeout()`. Optionally, you can also pass arguments to the callback.","short_description":"This schedules the repeated execution of a callback function after a defined\ndelay. It returns an `intervalId` for possible use with `clearInterval()`.\nOptionally, you can also pass arguments to the callback.\n","line":118,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/timers.markdown","name":"setInterval","name_prefix":"timer.","path":"timer.setInterval","outFile":"timers.html#timer.setInterval"}],"file":"0.8.14/nodejs_ref_guide/timers.markdown","subclasses":[],"name":"timer","path":"timer","outFile":"timers.html"},{"id":"tls","type":"class","description":"\nThe `tls` module uses OpenSSL to provide both the Transport Layer Security and\nthe Secure Socket Layer; in other words, it provides encrypted stream\ncommunications. To access this module, add `require('tls')` in your code.\n\nTLS/SSL is a public/private key infrastructure. Each client and each server must\nhave a private key. A private key is created in your terminal like this:\n\n    openssl genrsa -out ryans-key.pem 1024\n\nwhere `ryans-key.pm` is the name of your file. All servers (and some clients)\nneed to have a certificate. Certificates are public keys signed by a Certificate\nAuthority— or, they are self-signed. The first step to getting a certificate is\nto create a \"Certificate Signing Request\" (CSR) file. This is done using:\n\n    openssl req -new -key ryans-key.pem -out ryans-csr.pem\n\nTo create a self-signed certificate with the CSR, enter this:\n\n    openssl x509 -req -in ryans-csr.pem -signkey ryans-key.pem -out ryans-cert.pem\n\nAlternatively, you can send the CSR to a Certificate Authority for signing.\n\n(Documentation on creating a CA are pending; for now, interested users should\njust look at\n[`test/fixtures/keys/Makefile`](https://github.com/joyent/node/blob/master/test/fixtures/keys/Makefile) in the Node.js source code.)\n\nTo create a .pfx or .p12, do this:\n\n    openssl pkcs12 -export -in agent5-cert.pem -inkey agent5-key.pem \\\n        -certfile ca-cert.pem -out agent5.pfx\n\nwhere:\n\n- `in` is the certificate\n- `inkey`is the private key\n- `certfile`is all the CA certs concatenated in one file, like this:\n`cat ca1-cert.pem ca2-cert.pem > ca-cert.pem`\n\n#### Using NPN and SNI\n\nNPN (Next Protocol Negotiation) and SNI (Server Name Indication) are TLS\nhandshake extensions provided with this module.\n\nNPN is to use one TLS server for multiple protocols (HTTP, SPDY).\nSNI is to use one TLS server for multiple hostnames with different SSL\ncertificates.\n\n##### Client-initiated Renegotiation Attack Mitigation\n\nThe TLS protocol lets the client renegotiate certain aspects of the TLS session.\nUnfortunately, session renegotiation requires a disproportional amount of\nserver-side resources, which makes it a potential vector for denial-of-service\nattacks.\n\nTo mitigate this, renegotiations are limited to three times every 10 minutes. An\nerror is emitted on the [[tls.CleartextStream CleartextStream]] instance when\nthe threshold is exceeded. The limits are configurable:\n\n  - `tls.CLIENT_RENEG_LIMIT`: the renegotiation limit; default is 3.\n\n  - `tls.CLIENT_RENEG_WINDOW`: the renegotiation window in seconds; default is 10 minutes.\n\nDon't change the defaults unless you know what you are doing.\n\nTo test your server, connect to it with `openssl s_client -connect address:port`\nand tap `R<CR>` (that's the letter `R` followed by a carriage return) a few\ntimes.","stability":"3 - Stable","short_description":"\nThe `tls` module uses OpenSSL to provide both the Transport Layer Security and\nthe Secure Socket Layer; in other words, it provides encrypted stream\ncommunications. To access this module, add `require('tls')` in your code.\n","line":75,"aliases":[],"children":[{"id":"tls.CleartextStream","type":"class","superclass":"tls","description":"This is a stream on top of the encrypted stream that makes it possible to\nread/write an encrypted data as a cleartext data.\n\nThis instance implements the duplex [[stream `Stream`]] interfaces. It has all\nthe common stream methods and events.","short_description":"This is a stream on top of the encrypted stream that makes it possible to\nread/write an encrypted data as a cleartext data.\n","line":499,"aliases":[],"children":[{"id":"tls.CleartextStream.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"returns":[{"type":"Object","description":"An object with three properties, e.g.\n\n*`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`\n\n"}],"description":"Returns the bound address, the address family name, and port of the\nunderlying socket as reported by the operating system.","short_description":"Returns the bound address, the address family name, and port of the\nunderlying socket as reported by the operating system.","line":603,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"address","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.address","outFile":"tls.html#tls.CleartextStream.address"},{"id":"tls.CleartextStream.authorizationError","type":"class property","signatures":[{"returns":[{"type":"Error"}]}],"description":"The reason why the peer's certificate has not been verified. This property\nbecomes available only when `cleartextStream.authorized === false`.","short_description":"The reason why the peer's certificate has not been verified. This property\nbecomes available only when `cleartextStream.authorized === false`.","line":545,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"authorizationError","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.authorizationError","outFile":"tls.html#tls.CleartextStream.authorizationError"},{"id":"tls.CleartextStream.authorized","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"If `true`, the peer certificate was signed by one of the specified CAs;\notherwise, `false`.","short_description":"If `true`, the peer certificate was signed by one of the specified CAs;\notherwise, `false`.","line":533,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"authorized","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.authorized","outFile":"tls.html#tls.CleartextStream.authorized"},{"id":"tls.CleartextStream.connections","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns the bound address and port of the underlying socket as reported by the\noperating system. The object has two properties, _e.g._\n`{\"address\":\"192.168.57.1\", \"port\":62053}`","short_description":"Returns the bound address and port of the underlying socket as reported by the\noperating system. The object has two properties, _e.g._\n`{\"address\":\"192.168.57.1\", \"port\":62053}`","line":614,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"connections","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.connections","outFile":"tls.html#tls.CleartextStream.connections"},{"id":"tls.CleartextStream.getCipher","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns an object representing the cipher name and the SSL/TLS\nprotocol version of the current connection. The format is:\n\n  { name: 'AES256-SHA', version: 'TLSv1/SSLv3' }\n\nSee SSL_CIPHER_get_name() and SSL_CIPHER_get_version() in\n<http://www.openssl.org/docs/ssl/ssl.html#DEALING_WITH_CIPHERS> for more\ninformation.","short_description":"Returns an object representing the cipher name and the SSL/TLS\nprotocol version of the current connection. The format is:\n","line":593,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"getCipher","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.getCipher","outFile":"tls.html#tls.CleartextStream.getCipher"},{"id":"tls.CleartextStream.getPeerCertificate","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns an object representing the peer's certificate. The returned object has\nsome properties corresponding to the field of the certificate.\n\nIf the peer does not provide a certificate, it returns `null` or an empty\nobject.\n\n#### Example\n\n    { subject:\n       { C: 'UK',\n         ST: 'Acknack Ltd',\n         L: 'Rhys Jones',\n         O: 'node.js',\n         OU: 'Test TLS Certificate',\n         CN: 'localhost' },\n      issuer:\n       { C: 'UK',\n         ST: 'Acknack Ltd',\n         L: 'Rhys Jones',\n         O: 'node.js',\n         OU: 'Test TLS Certificate',\n         CN: 'localhost' },\n         valid_from: 'Nov 11 09:52:22 2009 GMT',\n         valid_to: 'Nov  6 09:52:22 2029 GMT',\n        fingerprint:\n'2A:7A:C2:DD:E5:F9:CC:53:72:35:99:7A:02:5A:71:38:52:EC:8A:DF' }","short_description":"Returns an object representing the peer's certificate. The returned object has\nsome properties corresponding to the field of the certificate.\n","line":579,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"getPeerCertificate","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.getPeerCertificate","outFile":"tls.html#tls.CleartextStream.getPeerCertificate"},{"id":"tls.CleartextStream.remoteAddress","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","short_description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","line":625,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"remoteAddress","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.remoteAddress","outFile":"tls.html#tls.CleartextStream.remoteAddress"},{"id":"tls.CleartextStream.remotePort","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The numeric representation of the remote port. For example, `443`.","short_description":"The numeric representation of the remote port. For example, `443`.","line":637,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"remotePort","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.remotePort","outFile":"tls.html#tls.CleartextStream.remotePort"},{"id":"tls.CleartextStream@clientError","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The standard Error object\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The standard Error object\n\n"}],"description":"If a client connection emits an 'error' event before a secure connection is\nestablished, this event is triggered, and the error is passed along.","short_description":"If a client connection emits an 'error' event before a secure connection is\nestablished, this event is triggered, and the error is passed along.","line":525,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"clientError","name_prefix":"tls.CleartextStream@","path":"tls.CleartextStream.event.clientError","outFile":"tls.html#tls.CleartextStream.event.clientError"},{"id":"tls.CleartextStream@secureConnect","type":"event","signatures":[{"arguments":[]}],"description":"This event is emitted after a new connection has been successfully handshaked.\nThe listener will be called no matter if the server's certificate was authorized\nor not.\n\nIt is up to the user to test `cleartextStream.authorized` to see if the server\ncertificate was signed by one of the specified CAs. If\n`cleartextStream.authorized === false`, then the error can be found in\n`cleartextStream.authorizationError`. Also if NPN was used, you can check\n`cleartextStream.npnProtocol` for the negotiated protocol.","short_description":"This event is emitted after a new connection has been successfully handshaked.\nThe listener will be called no matter if the server's certificate was authorized\nor not.\n","line":515,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"secureConnect","name_prefix":"tls.CleartextStream@","path":"tls.CleartextStream.event.secureConnect","outFile":"tls.html#tls.CleartextStream.event.secureConnect"}],"file":"0.8.14/nodejs_ref_guide/tls.markdown","subclasses":[],"name":"CleartextStream","name_prefix":"tls.","path":"tls.CleartextStream","outFile":"tls.html"},{"id":"tls.connect","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Configuration options to pass in\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional listener\n\n"}]},{"arguments":[{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","default_value":"localhost","optional":true,"types":["String"],"description":"An optional hostname to connect to`\n\n"},{"name":"options","optional":true,"types":["Object"],"description":"Configuration options to pass in\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional listener\n\n"}],"returns":[{"type":"tls.CleartextStream"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Configuration options to pass in\n\n"},{"name":"port","types":["Number"],"description":"The port to connect to\n\n"},{"name":"host","types":["String"],"description":"An optional hostname to connect to`\n\n"},{"name":"options","types":["Object"],"description":"Any options you want to pass to the server\n\n"},{"name":"callback","types":["Function"],"description":"An optional listener\n\n"}],"description":"Creates a new client connection to the given `port` and `host`. This function\nreturns a [[tls.CleartextStream `tls.CleartextStream`]] object.\n\n`options` should be an object that specifies the following values:\n\n  - `host`: Host the client should connect to\n\n  - `port`: Port the client should connect to\n\n  - `socket`: Establish secure connection on a given socket rather than\n    creating a new socket. If this option is specified, `host` and `port`\n    are ignored.\n\n  - `pfx`: A string or `Buffer` containing the private key, certificate and\n    CA certs of the server in PFX or PKCS12 format.\n\n  - `key`: A string or `Buffer` containing the private key of the client in aPEM\nformat. The default is `null`.\n\n  - `passphrase`: A string of a passphrase for the private key. The default is\n`null`.\n\n  - `cert`: A string or `Buffer` containing the certificate key of the client in\na PEM format; in other words, the public x509 certificate to use. The default is\n`null`.\n\n  - `ca`: An array of strings or `Buffer`s of trusted certificates. These are\nused to authorize connections. If this is omitted, several \"well-known root\" CAs\nwill be used, like VeriSign.\n\n  - `rejectUnauthorized`: If `true`, the server certificate is verified against\n    the list of supplied CAs. An `'error'` event is emitted if verification\n    fails. Default to  `false`.\n\n\n  - `NPNProtocols`: An array of strings or a  `Buffer` containing supported NPN\nprotocols.\n        `Buffer` should have the following format: `0x05hello0x05world`, where\nthe preceding byte indicates the following protocol name's length. Passing an\narray is usually much simpler: `['hello', 'world']`.\n        Protocols should be ordered by their priority.\n\n  - `servername`: The server name for the SNI (Server Name Indication) TLS\nextension.\n\n`callback` automatically sets a listener for the\n[`secureConnection`](#tls.event.secureConnection) event.\n\n\n#### Example: Connecting to an echo server on port 8000:\n\n    var tls = require('tls');\n    var fs = require('fs');\n\n    var options = {\n      // These are necessary only if using the client certificate authentication\n      key: fs.readFileSync('client-key.pem'),\n      cert: fs.readFileSync('client-cert.pem'),\n\n      // This is necessary only if the server uses the self-signed certificate\n      ca: [ fs.readFileSync('server-cert.pem') ]\n    };\n\n    var cleartextStream = tls.connect(8000, options, function() {\n      console.log('client connected',\n                  cleartextStream.authorized ? 'authorized' : 'unauthorized');\n      process.stdin.pipe(cleartextStream);\n      process.stdin.resume();\n    });\n    cleartextStream.setEncoding('utf8');\n    cleartextStream.on('data', function(data) {\n      console.log(data);\n    });\n    cleartextStream.on('end', function() {\n      server.close();\n    });\n\nOr, with pfx:\n\n    var tls = require('tls');\n    var fs = require('fs');\n\n    var options = {\n      pfx: fs.readFileSync('client.pfx')\n    };\n\n    var cleartextStream = tls.connect(8000, options, function() {\n      console.log('client connected',\n                  cleartextStream.authorized ? 'authorized' : 'unauthorized');\n      process.stdin.pipe(cleartextStream);\n      process.stdin.resume();\n    });\n    cleartextStream.setEncoding('utf8');\n    cleartextStream.on('data', function(data) {\n      console.log(data);\n    });\n    cleartextStream.on('end', function() {\n      server.close();\n    });","short_description":"Creates a new client connection to the given `port` and `host`. This function\nreturns a [[tls.CleartextStream `tls.CleartextStream`]] object.\n","line":209,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"connect","name_prefix":"tls.","path":"tls.connect","outFile":"tls.html#tls.connect"},{"id":"tls.createSecurePair","type":"class method","signatures":[{"arguments":[{"name":"credentials","optional":true,"types":["Object"],"description":"An optional credentials object from\n\n*[[crypto.createCredentials `crypto.createCredentials()`]]\n\n"},{"name":"isServer","optional":true,"types":["Boolean"],"description":"An optional boolean indicating whether this TLS\n\n*connection should be opened as a server (`true`) or a client (`false`)\n\n"},{"name":"requestCert","optional":true,"types":["Boolean"],"description":"A boolean indicating whether a server should request a\n\n*certificate from a connecting client; only applies to server connections\n\n"},{"name":"rejectUnauthorized","optional":true,"types":["Boolean"],"description":"A boolean indicating whether a server should\n\n*automatically reject clients with invalid certificates; only applies to servers\n\n*with `requestCert` enabled\n\n"}],"returns":[{"type":"tls.SecurePair"}]}],"arguments":[{"name":"credentials","types":["Object"],"description":"An optional credentials object from\n\n*[[crypto.createCredentials `crypto.createCredentials()`]]\n\n"},{"name":"isServer","types":["Boolean"],"description":"An optional boolean indicating whether this TLS\n\n*connection should be opened as a server (`true`) or a client (`false`)\n\n"},{"name":"requestCert","types":["Boolean"],"description":"A boolean indicating whether a server should request a\n\n*certificate from a connecting client; only applies to server connections\n\n"},{"name":"rejectUnauthorized","types":["Boolean"],"description":"A boolean indicating whether a server should\n\n*automatically reject clients with invalid certificates; only applies to servers\n\n*with `requestCert` enabled\n\n"}],"description":"Creates a new secure `pair` object with two streams, one of which reads/writes\nencrypted data, and one reads/writes cleartext data. This function returns a\nSecurePair object with [[tls.CleartextStream `tls.CleartextStream`]] and\n`encrypted` stream properties.\n\nGenerally, the encrypted strean is piped to/from an incoming encrypted data\nstream, and the cleartext one is used as a replacement for the initial encrypted\nstream.","short_description":"Creates a new secure `pair` object with two streams, one of which reads/writes\nencrypted data, and one reads/writes cleartext data. This function returns a\nSecurePair object with [[tls.CleartextStream `tls.CleartextStream`]] and\n`encrypted` stream properties.\n","line":236,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"createSecurePair","name_prefix":"tls.","path":"tls.createSecurePair","outFile":"tls.html#tls.createSecurePair"},{"id":"tls.createServer","type":"class method","signatures":[{"arguments":[{"name":"options","types":["Object"],"description":"Any options you want to pass to the server\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional listener, automatically set \n\n*as a listiner for the [[tls@secureConnection `'secureConnection'`]] event.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"Any options you want to pass to the server\n\n"},{"name":"callback","types":["Function"],"description":"An optional listener, automatically set \n\n*as a listiner for the [[tls@secureConnection `'secureConnection'`]] event.\n\n"}],"description":"Creates a new [[tls.Server `tls.Server`]].\n\nThe `options` object has the following mix of required values:\n\n  - `pfx`: A string or `Buffer` containing the private key, certificate, and\n    CA certs of the server in PFX or PKCS12 format. (Mutually exclusive with\n    the `key`, `cert`, and `ca` options.)\n\n  - `key`: A string or `Buffer` containing the private key of the server in a\nPEM format. (Required)\n\n  - `cert`: A string or `Buffer` containing the certificate key of the server in\na PEM format. (Required)\n\n`options` also has the following option values:\n\n  - `ca`: An array of strings or `Buffer`s of trusted certificates. These are\nused to authorize connections. If this is omitted, several \"well-known root\" CAs\nwill be used, like VeriSign.\n\n  - `crl`: Either a string or list of strings of PEM encoded CRLs (Certificate\n    Revocation List)\n\n  - `ciphers`: A string describing the ciphers to use or exclude.\n\n    To mitigate [BEAST attacks](http://blog.ivanristic.com/2011/10/mitigating-the-beast-attack-on-tls.html) it is recommended that you use this option in\n    conjunction with the `honorCipherOrder` option described below to\n    prioritize the non-CBC cipher.\n\n    Defaults to\n    `ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH`.\n    Consult the [OpenSSL cipher list format documentation](http://www.openssl.org/docs/apps/ciphers.html#CIPHER_LIST_FORMAT) for details on the\n    format.\n\n    `ECDHE-RSA-AES128-SHA256` and `AES128-GCM-SHA256` are used when node.js is\n    linked against OpenSSL 1.0.1 or newer and the client speaks TLS 1.2, RC4 is\n    used as a secure fallback.\n\n*NOTE**: Previous revisions of this section suggested `AES256-SHA` as an\n    acceptable cipher. Unfortunately, `AES256-SHA` is a CBC cipher and therefore\n    susceptible to BEAST attacks. Do *not* use it.\n\n  - `honorCipherOrder` : When choosing a cipher, use the server's preferences\n    instead of the client preferences.\n\n  - `NPNProtocols`: An array of strings or a  `Buffer` containing supported NPN\nprotocols.\n        `Buffer` should have the following format: `0x05hello0x05world`, where\nthe preceding byte indicates the following protocol name's length. Passing an\narray is usually much simplier: `['hello', 'world']`.\n        Protocols should be ordered by their priority.\n\n  - `passphrase`: A string of a passphrase for the private key or pfx.\n\n  - `rejectUnauthorized`: If `true` the server rejects any connection that is\nnot authorized with the list of supplied CAs. This option only has an effect if\n`requestCert` is `true`. This defaults to `false`.\n\n  - `requestCert`: If `true` the server requests a certificate from clients that\nconnect and attempt to verify that certificate. This defaults to `false`.\n\n  - `sessionIdContext`: A string containing an opaque identifier for session\nresumption. If `requestCert` is `true`, the default is an MD5 hash value\ngenerated from the command line. Otherwise, the default is not provided.\n\n  - `SNICallback`: A function that is called if the client supports the SNI TLS\nextension. Only one argument will be passed to it: `servername`. `SNICallback`\nshould return a SecureContext instance. You can use\n`crypto.createCredentials(...).context` to get a proper SecureContext. If\n`SNICallback` wasn't provided, a default callback within the high-level API is\nused (for more information, see below).\n\n`callback` automatically sets a listener for the\n[`secureConnection`](#tls.event.secureConnection) event.\n\n#### Example\n\nHere's a simple \"echo\" server:\n\n    var tls = require('tls');\n    var fs = require('fs');\n\n    var options = {\n      key: fs.readFileSync('server-key.pem'),\n      cert: fs.readFileSync('server-cert.pem'),\n\n      // This is necessary only if using the client certificate authentication.\n      requestCert: true,\n\n      // This is necessary only if the client uses the self-signed certificate.\n      ca: [ fs.readFileSync('client-cert.pem') ]\n    };\n\n    var server = tls.createServer(options, function(cleartextStream) {\n      console.log('server connected',\n                  cleartextStream.authorized ? 'authorized' : 'unauthorized');\n      cleartextStream.write(\"welcome!\\n\");\n      cleartextStream.setEncoding('utf8');\n      cleartextStream.pipe(cleartextStream);\n    });\n    server.listen(8000, function() {\n      console.log('server bound');\n    });\n\nOr, with pfx:\n\n    var tls = require('tls');\n    var fs = require('fs');\n\n    var options = {\n      pfx: fs.readFileSync('server.pfx'),\n\n      // This is necessary only if using the client certificate authentication.\n      requestCert: true,\n\n    };\n\n    var server = tls.createServer(options, function(cleartextStream) {\n      console.log('server connected',\n                  cleartextStream.authorized ? 'authorized' : 'unauthorized');\n      cleartextStream.write(\"welcome!\\n\");\n      cleartextStream.setEncoding('utf8');\n      cleartextStream.pipe(cleartextStream);\n    });\n    server.listen(8000, function() {\n      console.log('server bound');\n    });\n\nYou can test this server by connecting to it with `openssl s_client`:\n\n    openssl s_client -connect 127.0.0.1:8000","short_description":"Creates a new [[tls.Server `tls.Server`]].\n","line":376,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"createServer","name_prefix":"tls.","path":"tls.createServer","outFile":"tls.html#tls.createServer"},{"id":"tls.SecurePair","type":"class","superclass":"tls","description":"Returned by [[tls.createSecurePair `tls.createSecurePair()`]].","short_description":"Returned by [[tls.createSecurePair `tls.createSecurePair()`]].","line":475,"aliases":[],"children":[{"id":"tls.SecurePair@secure","type":"event","signatures":[{"arguments":[]}],"description":"The event is emitted from the SecurePair once the pair has successfully\nestablished a secure connection.\n\nSimilar to the checking for the server `'secureConnection'` event,\n[[tls.CleartextStream.authorized `tls.CleartextStream.authorized`]] should be\nchecked to confirm whether the certificate used properly authorized.","short_description":"The event is emitted from the SecurePair once the pair has successfully\nestablished a secure connection.\n","line":488,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"secure","name_prefix":"tls.SecurePair@","path":"tls.SecurePair.event.secure","outFile":"tls.html#tls.SecurePair.event.secure"}],"file":"0.8.14/nodejs_ref_guide/tls.markdown","subclasses":[],"name":"SecurePair","name_prefix":"tls.","path":"tls.SecurePair","outFile":"tls.html"},{"id":"tls.Server","type":"class","superclass":"tls","description":"This class is a subclass of [[net.Server `net.Server`]] and has the same methods\nas it. However, instead of accepting just raw TCP connections, it also accepts\nencrypted connections using TLS or SSL.","short_description":"This class is a subclass of [[net.Server `net.Server`]] and has the same methods\nas it. However, instead of accepting just raw TCP connections, it also accepts\nencrypted connections using TLS or SSL.","line":385,"aliases":[],"children":[{"id":"tls.Server.addContext","type":"class method","signatures":[{"arguments":[{"name":"hostname","types":["String"],"description":"The hostname to match\n\n"},{"name":"credentials","types":["Object"],"description":"The credentials to use\n\n"}]}],"arguments":[{"name":"hostname","types":["String"],"description":"The hostname to match\n\n"},{"name":"credentials","types":["Object"],"description":"The credentials to use\n\n"}],"description":"Add secure context that will be used if client request's SNI hostname is\nmatching passed `hostname` (wildcards can be used). `credentials` can contain\n`key`, `cert`, and `ca`.\n\n#### Example\n    var serverResults = [];\n\n    var server = tls.createServer(serverOptions, function(c) {\n      serverResults.push(c.servername);\n    });\n\n    server.addContext('a.example.com', SNIContexts['a.example.com']);\n    server.addContext('*.test.com', SNIContexts['asterisk.test.com']);\n\n    server.listen(1337);","short_description":"Add secure context that will be used if client request's SNI hostname is\nmatching passed `hostname` (wildcards can be used). `credentials` can contain\n`key`, `cert`, and `ca`.\n","line":408,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"addContext","name_prefix":"tls.Server.","path":"tls.Server.addContext","outFile":"tls.html#tls.Server.addContext"},{"id":"tls.Server.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the bound address and port of the server as reported by the operating\nsystem.\n\nFor more information, see [[net.Server.address `net.Server.address()`]].","short_description":"Returns the bound address and port of the server as reported by the operating\nsystem.\n","line":418,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"address","name_prefix":"tls.Server.","path":"tls.Server.address","outFile":"tls.html#tls.Server.address"},{"id":"tls.Server.close","type":"class method","signatures":[{"arguments":[]}],"description":"Stops the server from accepting new connections. This function is asynchronous,\nand the server is finally closed when it emits a `'close'` event.","short_description":"Stops the server from accepting new connections. This function is asynchronous,\nand the server is finally closed when it emits a `'close'` event.","line":427,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"close","name_prefix":"tls.Server.","path":"tls.Server.close","outFile":"tls.html#tls.Server.close"},{"id":"tls.Server.connections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of concurrent connections on the server.","short_description":"The number of concurrent connections on the server.","line":460,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"connections","name_prefix":"tls.Server.","path":"tls.Server.connections","outFile":"tls.html#tls.Server.connections"},{"id":"tls.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The specific port to listen to\n\n"},{"name":"host","optional":true,"types":["String"],"description":"An optional host to listen to\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute when the server has been\n\n*bound\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The specific port to listen to\n\n"},{"name":"host","types":["String"],"description":"An optional host to listen to\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute when the server has been\n\n*bound\n\n"}],"description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server will accept connections directed to any IPv4 address\n(`INADDR_ANY`).\n\nFor more information, see [[net.Server `net.Server`]].","short_description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server will accept connections directed to any IPv4 address\n(`INADDR_ANY`).\n","line":442,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"listen","name_prefix":"tls.Server.","path":"tls.Server.listen","outFile":"tls.html#tls.Server.listen"},{"id":"tls.Server.maxConnections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Set this property to reject connections when the server's connection count gets\nhigh.","short_description":"Set this property to reject connections when the server's connection count gets\nhigh.","line":468,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"maxConnections","name_prefix":"tls.Server.","path":"tls.Server.maxConnections","outFile":"tls.html#tls.Server.maxConnections"},{"id":"tls.Server.pause","type":"class method","signatures":[{"arguments":[{"name":"msecs","default_value":1000,"types":["Number"],"description":"The number of milliseconds to pause for\n\n"}]}],"arguments":[{"name":"msecs","types":["Number"],"description":"The number of milliseconds to pause for\n\n"}],"description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","short_description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","line":452,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"pause","name_prefix":"tls.Server.","path":"tls.Server.pause","outFile":"tls.html#tls.Server.pause"}],"file":"0.8.14/nodejs_ref_guide/tls.markdown","subclasses":[],"name":"Server","name_prefix":"tls.","path":"tls.Server","outFile":"tls.html"},{"id":"tls@secureConnection","type":"event","signatures":[{"arguments":[{"name":"cleartextStream","types":["tls.CleartextStream"],"description":"A object containing the NPN and SNI\n\n*string protocols\n\n"}]}],"arguments":[{"name":"cleartextStream","types":["tls.CleartextStream"],"description":"A object containing the NPN and SNI\n\n*string protocols\n\n"}],"description":"This event is emitted after a new connection has been successfully handshaked.\n\nIf [[tls.CleartextStream.authorized `tls.CleartextStream.authorized`]] is\n`false`, then [[tls.CleartextStream.authorizationError\n`tls.Cleartext.authorizationError`]] is set to describe how the authorization\nfailed. Depending on the settings of the TLS server, your unauthorized\nconnections may still be accepted.\n\n`cleartextStream.npnProtocol` is a string containing the selected NPN protocol.\n`cleartextStream.servername` is a string containing the servername requested\nwith SNI.","short_description":"This event is emitted after a new connection has been successfully handshaked.\n","line":96,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"secureConnection","name_prefix":"tls@","path":"tls.event.secureConnection","outFile":"tls.html#tls.event.secureConnection"},{"id":"tls.Server","type":"class","superclass":"tls","description":"This class is a subclass of [[net.Server `net.Server`]] and has the same methods\nas it. However, instead of accepting just raw TCP connections, it also accepts\nencrypted connections using TLS or SSL.","short_description":"This class is a subclass of [[net.Server `net.Server`]] and has the same methods\nas it. However, instead of accepting just raw TCP connections, it also accepts\nencrypted connections using TLS or SSL.","line":385,"aliases":[],"children":[{"id":"tls.Server.addContext","type":"class method","signatures":[{"arguments":[{"name":"hostname","types":["String"],"description":"The hostname to match\n\n"},{"name":"credentials","types":["Object"],"description":"The credentials to use\n\n"}]}],"arguments":[{"name":"hostname","types":["String"],"description":"The hostname to match\n\n"},{"name":"credentials","types":["Object"],"description":"The credentials to use\n\n"}],"description":"Add secure context that will be used if client request's SNI hostname is\nmatching passed `hostname` (wildcards can be used). `credentials` can contain\n`key`, `cert`, and `ca`.\n\n#### Example\n    var serverResults = [];\n\n    var server = tls.createServer(serverOptions, function(c) {\n      serverResults.push(c.servername);\n    });\n\n    server.addContext('a.example.com', SNIContexts['a.example.com']);\n    server.addContext('*.test.com', SNIContexts['asterisk.test.com']);\n\n    server.listen(1337);","short_description":"Add secure context that will be used if client request's SNI hostname is\nmatching passed `hostname` (wildcards can be used). `credentials` can contain\n`key`, `cert`, and `ca`.\n","line":408,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"addContext","name_prefix":"tls.Server.","path":"tls.Server.addContext","outFile":"tls.html#tls.Server.addContext"},{"id":"tls.Server.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Returns the bound address and port of the server as reported by the operating\nsystem.\n\nFor more information, see [[net.Server.address `net.Server.address()`]].","short_description":"Returns the bound address and port of the server as reported by the operating\nsystem.\n","line":418,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"address","name_prefix":"tls.Server.","path":"tls.Server.address","outFile":"tls.html#tls.Server.address"},{"id":"tls.Server.close","type":"class method","signatures":[{"arguments":[]}],"description":"Stops the server from accepting new connections. This function is asynchronous,\nand the server is finally closed when it emits a `'close'` event.","short_description":"Stops the server from accepting new connections. This function is asynchronous,\nand the server is finally closed when it emits a `'close'` event.","line":427,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"close","name_prefix":"tls.Server.","path":"tls.Server.close","outFile":"tls.html#tls.Server.close"},{"id":"tls.Server.connections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The number of concurrent connections on the server.","short_description":"The number of concurrent connections on the server.","line":460,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"connections","name_prefix":"tls.Server.","path":"tls.Server.connections","outFile":"tls.html#tls.Server.connections"},{"id":"tls.Server.listen","type":"class method","signatures":[{"arguments":[{"name":"port","types":["Number"],"description":"The specific port to listen to\n\n"},{"name":"host","optional":true,"types":["String"],"description":"An optional host to listen to\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback to execute when the server has been\n\n*bound\n\n"}]}],"arguments":[{"name":"port","types":["Number"],"description":"The specific port to listen to\n\n"},{"name":"host","types":["String"],"description":"An optional host to listen to\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback to execute when the server has been\n\n*bound\n\n"}],"description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server will accept connections directed to any IPv4 address\n(`INADDR_ANY`).\n\nFor more information, see [[net.Server `net.Server`]].","short_description":"Begin accepting connections on the specified `port` and `host`.  If the `host`\nis omitted, the server will accept connections directed to any IPv4 address\n(`INADDR_ANY`).\n","line":442,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"listen","name_prefix":"tls.Server.","path":"tls.Server.listen","outFile":"tls.html#tls.Server.listen"},{"id":"tls.Server.maxConnections","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Set this property to reject connections when the server's connection count gets\nhigh.","short_description":"Set this property to reject connections when the server's connection count gets\nhigh.","line":468,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"maxConnections","name_prefix":"tls.Server.","path":"tls.Server.maxConnections","outFile":"tls.html#tls.Server.maxConnections"},{"id":"tls.Server.pause","type":"class method","signatures":[{"arguments":[{"name":"msecs","default_value":1000,"types":["Number"],"description":"The number of milliseconds to pause for\n\n"}]}],"arguments":[{"name":"msecs","types":["Number"],"description":"The number of milliseconds to pause for\n\n"}],"description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","short_description":"Stop accepting connections for the given number of milliseconds. This could be\nuseful for throttling new connections against DoS attacks or other\noversubscriptions.","line":452,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"pause","name_prefix":"tls.Server.","path":"tls.Server.pause","outFile":"tls.html#tls.Server.pause"}],"file":"0.8.14/nodejs_ref_guide/tls.markdown","subclasses":[],"name":"Server","name_prefix":"tls.","path":"tls.Server","outFile":"tls.html"},{"id":"tls.SecurePair","type":"class","superclass":"tls","description":"Returned by [[tls.createSecurePair `tls.createSecurePair()`]].","short_description":"Returned by [[tls.createSecurePair `tls.createSecurePair()`]].","line":475,"aliases":[],"children":[{"id":"tls.SecurePair@secure","type":"event","signatures":[{"arguments":[]}],"description":"The event is emitted from the SecurePair once the pair has successfully\nestablished a secure connection.\n\nSimilar to the checking for the server `'secureConnection'` event,\n[[tls.CleartextStream.authorized `tls.CleartextStream.authorized`]] should be\nchecked to confirm whether the certificate used properly authorized.","short_description":"The event is emitted from the SecurePair once the pair has successfully\nestablished a secure connection.\n","line":488,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"secure","name_prefix":"tls.SecurePair@","path":"tls.SecurePair.event.secure","outFile":"tls.html#tls.SecurePair.event.secure"}],"file":"0.8.14/nodejs_ref_guide/tls.markdown","subclasses":[],"name":"SecurePair","name_prefix":"tls.","path":"tls.SecurePair","outFile":"tls.html"},{"id":"tls.CleartextStream","type":"class","superclass":"tls","description":"This is a stream on top of the encrypted stream that makes it possible to\nread/write an encrypted data as a cleartext data.\n\nThis instance implements the duplex [[stream `Stream`]] interfaces. It has all\nthe common stream methods and events.","short_description":"This is a stream on top of the encrypted stream that makes it possible to\nread/write an encrypted data as a cleartext data.\n","line":499,"aliases":[],"children":[{"id":"tls.CleartextStream.address","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"returns":[{"type":"Object","description":"An object with three properties, e.g.\n\n*`{ port: 12346, family: 'IPv4', address: '127.0.0.1' }`\n\n"}],"description":"Returns the bound address, the address family name, and port of the\nunderlying socket as reported by the operating system.","short_description":"Returns the bound address, the address family name, and port of the\nunderlying socket as reported by the operating system.","line":603,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"address","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.address","outFile":"tls.html#tls.CleartextStream.address"},{"id":"tls.CleartextStream.authorizationError","type":"class property","signatures":[{"returns":[{"type":"Error"}]}],"description":"The reason why the peer's certificate has not been verified. This property\nbecomes available only when `cleartextStream.authorized === false`.","short_description":"The reason why the peer's certificate has not been verified. This property\nbecomes available only when `cleartextStream.authorized === false`.","line":545,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"authorizationError","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.authorizationError","outFile":"tls.html#tls.CleartextStream.authorizationError"},{"id":"tls.CleartextStream.authorized","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"If `true`, the peer certificate was signed by one of the specified CAs;\notherwise, `false`.","short_description":"If `true`, the peer certificate was signed by one of the specified CAs;\notherwise, `false`.","line":533,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"authorized","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.authorized","outFile":"tls.html#tls.CleartextStream.authorized"},{"id":"tls.CleartextStream.connections","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns the bound address and port of the underlying socket as reported by the\noperating system. The object has two properties, _e.g._\n`{\"address\":\"192.168.57.1\", \"port\":62053}`","short_description":"Returns the bound address and port of the underlying socket as reported by the\noperating system. The object has two properties, _e.g._\n`{\"address\":\"192.168.57.1\", \"port\":62053}`","line":614,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"connections","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.connections","outFile":"tls.html#tls.CleartextStream.connections"},{"id":"tls.CleartextStream.getCipher","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns an object representing the cipher name and the SSL/TLS\nprotocol version of the current connection. The format is:\n\n  { name: 'AES256-SHA', version: 'TLSv1/SSLv3' }\n\nSee SSL_CIPHER_get_name() and SSL_CIPHER_get_version() in\n<http://www.openssl.org/docs/ssl/ssl.html#DEALING_WITH_CIPHERS> for more\ninformation.","short_description":"Returns an object representing the cipher name and the SSL/TLS\nprotocol version of the current connection. The format is:\n","line":593,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"getCipher","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.getCipher","outFile":"tls.html#tls.CleartextStream.getCipher"},{"id":"tls.CleartextStream.getPeerCertificate","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Object"}]}],"description":"Returns an object representing the peer's certificate. The returned object has\nsome properties corresponding to the field of the certificate.\n\nIf the peer does not provide a certificate, it returns `null` or an empty\nobject.\n\n#### Example\n\n    { subject:\n       { C: 'UK',\n         ST: 'Acknack Ltd',\n         L: 'Rhys Jones',\n         O: 'node.js',\n         OU: 'Test TLS Certificate',\n         CN: 'localhost' },\n      issuer:\n       { C: 'UK',\n         ST: 'Acknack Ltd',\n         L: 'Rhys Jones',\n         O: 'node.js',\n         OU: 'Test TLS Certificate',\n         CN: 'localhost' },\n         valid_from: 'Nov 11 09:52:22 2009 GMT',\n         valid_to: 'Nov  6 09:52:22 2029 GMT',\n        fingerprint:\n'2A:7A:C2:DD:E5:F9:CC:53:72:35:99:7A:02:5A:71:38:52:EC:8A:DF' }","short_description":"Returns an object representing the peer's certificate. The returned object has\nsome properties corresponding to the field of the certificate.\n","line":579,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"getPeerCertificate","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.getPeerCertificate","outFile":"tls.html#tls.CleartextStream.getPeerCertificate"},{"id":"tls.CleartextStream.remoteAddress","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","short_description":"The string representation of the remote IP address. For example,\n`'74.125.127.100'` or `'2001:4860:a005::68'`.","line":625,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"remoteAddress","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.remoteAddress","outFile":"tls.html#tls.CleartextStream.remoteAddress"},{"id":"tls.CleartextStream.remotePort","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"The numeric representation of the remote port. For example, `443`.","short_description":"The numeric representation of the remote port. For example, `443`.","line":637,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"remotePort","name_prefix":"tls.CleartextStream.","path":"tls.CleartextStream.remotePort","outFile":"tls.html#tls.CleartextStream.remotePort"},{"id":"tls.CleartextStream@clientError","type":"event","signatures":[{"arguments":[{"name":"exception","types":["Error"],"description":"The standard Error object\n\n"}]}],"arguments":[{"name":"exception","types":["Error"],"description":"The standard Error object\n\n"}],"description":"If a client connection emits an 'error' event before a secure connection is\nestablished, this event is triggered, and the error is passed along.","short_description":"If a client connection emits an 'error' event before a secure connection is\nestablished, this event is triggered, and the error is passed along.","line":525,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"clientError","name_prefix":"tls.CleartextStream@","path":"tls.CleartextStream.event.clientError","outFile":"tls.html#tls.CleartextStream.event.clientError"},{"id":"tls.CleartextStream@secureConnect","type":"event","signatures":[{"arguments":[]}],"description":"This event is emitted after a new connection has been successfully handshaked.\nThe listener will be called no matter if the server's certificate was authorized\nor not.\n\nIt is up to the user to test `cleartextStream.authorized` to see if the server\ncertificate was signed by one of the specified CAs. If\n`cleartextStream.authorized === false`, then the error can be found in\n`cleartextStream.authorizationError`. Also if NPN was used, you can check\n`cleartextStream.npnProtocol` for the negotiated protocol.","short_description":"This event is emitted after a new connection has been successfully handshaked.\nThe listener will be called no matter if the server's certificate was authorized\nor not.\n","line":515,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tls.markdown","name":"secureConnect","name_prefix":"tls.CleartextStream@","path":"tls.CleartextStream.event.secureConnect","outFile":"tls.html#tls.CleartextStream.event.secureConnect"}],"file":"0.8.14/nodejs_ref_guide/tls.markdown","subclasses":[],"name":"CleartextStream","name_prefix":"tls.","path":"tls.CleartextStream","outFile":"tls.html"}],"file":"0.8.14/nodejs_ref_guide/tls.markdown","subclasses":["tls.Server","tls.SecurePair","tls.CleartextStream"],"name":"tls","path":"tls","outFile":"tls.html"},{"id":"tty","type":"class","description":"\nThe `tty` module houses the `tty.ReadStream` and `tty.WriteStream` classes. In\nmost cases, you will not need to use this module directly.\n\nWhen node detects that it is being run inside a TTY context, then `process.stdin`\nwill be a `tty.ReadStream` instance and `process.stdout` will be\na `tty.WriteStream` instance. The preferred way to check if node is being run in\na TTY context is to check `process.stdout.isTTY`:\n\n    $ node -p -e \"Boolean(process.stdout.isTTY)\"\n    true\n    $ node -p -e \"Boolean(process.stdout.isTTY)\" | cat\n    false","stability":"2 - Unstable","short_description":"\nThe `tty` module houses the `tty.ReadStream` and `tty.WriteStream` classes. In\nmost cases, you will not need to use this module directly.\n","line":21,"aliases":[],"children":[{"id":"tty.isatty","type":"class method","signatures":[{"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor to check\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"fd","types":["Number"],"description":"The file descriptor to check\n\n"}],"description":"Returns `true` or `false` depending on if the file descriptor is associated with\na terminal.","short_description":"Returns `true` or `false` depending on if the file descriptor is associated with\na terminal.","line":30,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"isatty","name_prefix":"tty.","path":"tty.isatty","outFile":"tty.html#tty.isatty"},{"id":"tty.ReadStream","type":"class","superclass":"tty","description":"A `net.Socket` subclass that represents the readable portion of a tty. In normal\ncircumstances, `process.stdin` is the only `tty.ReadStream` instance in any\nNode.js program (only when `isatty(0)` is true).","short_description":"A `net.Socket` subclass that represents the readable portion of a tty. In normal\ncircumstances, `process.stdin` is the only `tty.ReadStream` instance in any\nNode.js program (only when `isatty(0)` is true).","line":49,"aliases":[],"children":[{"id":"tty.ReadStream.isRaw","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"Represents the current \"raw\" state of the `tty.ReadStream` instance. Initialized\nto `false`.","short_description":"Represents the current \"raw\" state of the `tty.ReadStream` instance. Initialized\nto `false`.","line":57,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"isRaw","name_prefix":"tty.ReadStream.","path":"tty.ReadStream.isRaw","outFile":"tty.html#tty.ReadStream.isRaw"},{"id":"tty.ReadStream.setRawMode","type":"class method","signatures":[{"arguments":[{"name":"mode","types":["Boolean"],"description":"Sets the raw state of the `tty.ReadStream` instance\n\n"}]}],"arguments":[{"name":"mode","types":["Boolean"],"description":"Sets the raw state of the `tty.ReadStream` instance\n\n"}],"description":"Sets the properties of the `tty.ReadStream` to act either as a raw device or\ndefault. `isRaw` will be set to the resulting mode.","short_description":"Sets the properties of the `tty.ReadStream` to act either as a raw device or\ndefault. `isRaw` will be set to the resulting mode.","line":67,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"setRawMode","name_prefix":"tty.ReadStream.","path":"tty.ReadStream.setRawMode","outFile":"tty.html#tty.ReadStream.setRawMode"}],"file":"0.8.14/nodejs_ref_guide/tty.markdown","subclasses":[],"name":"ReadStream","name_prefix":"tty.","path":"tty.ReadStream","outFile":"tty.html"},{"id":"tty.setRawMode","type":"class method","signatures":[{"arguments":[{"name":"mode","types":["Boolean"],"description":"A boolean value indicating how to set the rawness\n\n\n\n"}]}],"arguments":[{"name":"mode","types":["Boolean"],"description":"A boolean value indicating how to set the rawness\n\n\n\n"}],"deprecated":true,"description":"Deprecated. Use [[tty.ReadStream.setRawMode `tty.ReadStream.setRawMode()`]]\ninstead.","short_description":"Deprecated. Use [[tty.ReadStream.setRawMode `tty.ReadStream.setRawMode()`]]\ninstead.","line":40,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"setRawMode","name_prefix":"tty.","path":"tty.setRawMode","outFile":"tty.html#tty.setRawMode"},{"id":"tty.WriteStream","type":"class","superclass":"tty","description":"A `net.Socket` subclass that represents the writable portion of a tty. In normal\ncircumstances, `process.stdout` will be the only `tty.WriteStream` instance\never created (and only when `isatty(1)` is true).","short_description":"A `net.Socket` subclass that represents the writable portion of a tty. In normal\ncircumstances, `process.stdout` will be the only `tty.WriteStream` instance\never created (and only when `isatty(1)` is true).","line":76,"aliases":[],"children":[{"id":"tty.WriteStream.columns","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Returns the number of columns the TTY currently has. This property is updated on\n\"resize\" events.","short_description":"Returns the number of columns the TTY currently has. This property is updated on\n\"resize\" events.","line":84,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"columns","name_prefix":"tty.WriteStream.","path":"tty.WriteStream.columns","outFile":"tty.html#tty.WriteStream.columns"},{"id":"tty.WriteStream.rows","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Returns the number  of rows the TTY currently has. This property is updated on\n\"resize\" events.","short_description":"Returns the number  of rows the TTY currently has. This property is updated on\n\"resize\" events.","line":92,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"rows","name_prefix":"tty.WriteStream.","path":"tty.WriteStream.rows","outFile":"tty.html#tty.WriteStream.rows"},{"id":"tty.WriteStream@resize","type":"namespace","description":"Emitted by `refreshSize()` when either of the `columns` or `rows` properties\nhas changed.\n\n#### Example\n\n    process.stdout.on('resize', function() {\n      console.log('screen size has changed!');\n      console.log(process.stdout.columns + 'x' + process.stdout.rows);\n    });","short_description":"Emitted by `refreshSize()` when either of the `columns` or `rows` properties\nhas changed.\n","line":107,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"resize","name_prefix":"tty.WriteStream@","path":"tty.WriteStream.event.resize","outFile":"tty.html#tty.WriteStream.event.resize"}],"file":"0.8.14/nodejs_ref_guide/tty.markdown","subclasses":[],"name":"WriteStream","name_prefix":"tty.","path":"tty.WriteStream","outFile":"tty.html"},{"id":"tty.ReadStream","type":"class","superclass":"tty","description":"A `net.Socket` subclass that represents the readable portion of a tty. In normal\ncircumstances, `process.stdin` is the only `tty.ReadStream` instance in any\nNode.js program (only when `isatty(0)` is true).","short_description":"A `net.Socket` subclass that represents the readable portion of a tty. In normal\ncircumstances, `process.stdin` is the only `tty.ReadStream` instance in any\nNode.js program (only when `isatty(0)` is true).","line":49,"aliases":[],"children":[{"id":"tty.ReadStream.isRaw","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"Represents the current \"raw\" state of the `tty.ReadStream` instance. Initialized\nto `false`.","short_description":"Represents the current \"raw\" state of the `tty.ReadStream` instance. Initialized\nto `false`.","line":57,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"isRaw","name_prefix":"tty.ReadStream.","path":"tty.ReadStream.isRaw","outFile":"tty.html#tty.ReadStream.isRaw"},{"id":"tty.ReadStream.setRawMode","type":"class method","signatures":[{"arguments":[{"name":"mode","types":["Boolean"],"description":"Sets the raw state of the `tty.ReadStream` instance\n\n"}]}],"arguments":[{"name":"mode","types":["Boolean"],"description":"Sets the raw state of the `tty.ReadStream` instance\n\n"}],"description":"Sets the properties of the `tty.ReadStream` to act either as a raw device or\ndefault. `isRaw` will be set to the resulting mode.","short_description":"Sets the properties of the `tty.ReadStream` to act either as a raw device or\ndefault. `isRaw` will be set to the resulting mode.","line":67,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"setRawMode","name_prefix":"tty.ReadStream.","path":"tty.ReadStream.setRawMode","outFile":"tty.html#tty.ReadStream.setRawMode"}],"file":"0.8.14/nodejs_ref_guide/tty.markdown","subclasses":[],"name":"ReadStream","name_prefix":"tty.","path":"tty.ReadStream","outFile":"tty.html"},{"id":"tty.WriteStream","type":"class","superclass":"tty","description":"A `net.Socket` subclass that represents the writable portion of a tty. In normal\ncircumstances, `process.stdout` will be the only `tty.WriteStream` instance\never created (and only when `isatty(1)` is true).","short_description":"A `net.Socket` subclass that represents the writable portion of a tty. In normal\ncircumstances, `process.stdout` will be the only `tty.WriteStream` instance\never created (and only when `isatty(1)` is true).","line":76,"aliases":[],"children":[{"id":"tty.WriteStream.columns","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Returns the number of columns the TTY currently has. This property is updated on\n\"resize\" events.","short_description":"Returns the number of columns the TTY currently has. This property is updated on\n\"resize\" events.","line":84,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"columns","name_prefix":"tty.WriteStream.","path":"tty.WriteStream.columns","outFile":"tty.html#tty.WriteStream.columns"},{"id":"tty.WriteStream.rows","type":"class property","signatures":[{"returns":[{"type":"Number"}]}],"description":"Returns the number  of rows the TTY currently has. This property is updated on\n\"resize\" events.","short_description":"Returns the number  of rows the TTY currently has. This property is updated on\n\"resize\" events.","line":92,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"rows","name_prefix":"tty.WriteStream.","path":"tty.WriteStream.rows","outFile":"tty.html#tty.WriteStream.rows"},{"id":"tty.WriteStream@resize","type":"namespace","description":"Emitted by `refreshSize()` when either of the `columns` or `rows` properties\nhas changed.\n\n#### Example\n\n    process.stdout.on('resize', function() {\n      console.log('screen size has changed!');\n      console.log(process.stdout.columns + 'x' + process.stdout.rows);\n    });","short_description":"Emitted by `refreshSize()` when either of the `columns` or `rows` properties\nhas changed.\n","line":107,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/tty.markdown","name":"resize","name_prefix":"tty.WriteStream@","path":"tty.WriteStream.event.resize","outFile":"tty.html#tty.WriteStream.event.resize"}],"file":"0.8.14/nodejs_ref_guide/tty.markdown","subclasses":[],"name":"WriteStream","name_prefix":"tty.","path":"tty.WriteStream","outFile":"tty.html"}],"file":"0.8.14/nodejs_ref_guide/tty.markdown","subclasses":["tty.ReadStream","tty.WriteStream"],"name":"tty","path":"tty","outFile":"tty.html"},{"id":"url","type":"class","description":"\nThis module has utilities for URL resolution and parsing. To use it, add\n`require('url')` to your code.\n\nParsed URL objects have some or all of the following fields, depending on\nwhether or not they exist in the URL string. Any parts that are not in the URL\nstring are not in the parsed object. All the examples shown use the following\nURL:\n\n`'http://user:pass@HOST.com:8080/p/a/t/h?query=string#hash'`\n\n* `href`: the full URL that was originally parsed. Both the protocol and host\nare in lowercase.\n\n  For the URL above, this is:\n`'http://user:pass@host.com:8080/p/a/t/h?query=string#hash'`\n\n* `protocol`: the request protocol, in lowercase.\n\n  For the URL above, this is: `'http:'`\n\n* `host`: the full lowercased host portion of the URL, including port and\nauthentication information.\n\n  For the URL above, this is: `'user:pass@host.com:8080'`\n\n* `auth`: The authentication information from the URL.\n\n  For the URL above, this is: `'user:pass'`\n\n* `hostname`: the lowercased hostname portion of the URL.\n\n  For the URL above, this is: `'host.com'`\n\n* `port`: The port number of the URL.\n\n  For the URL above, this is: `'8080'`\n\n* `pathname`: the path section of the URL, that comes after the host and before\nthe query, including the initial slash (if present).\n\n  For the URL above, this is: `'/p/a/t/h'`\n\n* `search`: the 'query string' portion of the URL, including the leading\nquestion mark.\n\n  For the URL above, this is: `'?query=string'`\n\n* `path`: a concatenation of `pathname` and `search`.\n\n  For the URL above, this is: `'/p/a/t/h?query=string'`\n\n* `query`: either the 'params' portion of the query string, or a\nquerystring-parsed object.\n\n  For the URL above, this is: `'query=string'` or `{'query':'string'}`\n\n* `hash`: the 'fragment' portion of the URL including the pound-sign.\n\n  For the URL above, this is: `'#hash'`","stability":"3 - Stable","short_description":"\nThis module has utilities for URL resolution and parsing. To use it, add\n`require('url')` to your code.\n","line":70,"aliases":[],"children":[{"id":"url.format","type":"class method","signatures":[{"arguments":[{"name":"urlObj","types":["String"],"description":"The object to tranform into a URL\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"urlObj","types":["String"],"description":"The object to tranform into a URL\n\n"}],"description":"Takes a parsed URL object and returns a formatted URL string that contains these\nproperties:\n\n* `href` is ignored.\n* `protocol` is treated the same with or without the trailing `:` (colon). Note\nthat:\n The protocols `http`, `https`, `ftp`, `gopher`, and `file` are postfixed\n     with `://`\n All other protocols (like `mailto`, `xmpp`, `aim`, `sftp`, `foo`, etc) are\n    postfixed with `:`\n* `auth` is used if it's available\n* `hostname` is only used if `host` is absent\n* `port` is only used if `host` is absent\n* `host` is only used in place of `hostname` and `port`\n* `pathname` is treated the same with or without the leading `/` (slash)\n* `search` is used in place of `query`\n* `query`, a [querystring](querystring.html) object, is only used if `search` is\nabsent\n* `search` is treated the same with or without the leading `?`\n* `hash` is treated the same with or without the leading `#`","short_description":"Takes a parsed URL object and returns a formatted URL string that contains these\nproperties:\n","line":116,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/url.markdown","name":"format","name_prefix":"url.","path":"url.format","outFile":"url.html#url.format"},{"id":"url.parse","type":"class method","signatures":[{"arguments":[{"name":"urlStr","types":["String"],"description":"The URL string\n\n"},{"name":"parseQueryString","default_value":false,"optional":true,"types":["Boolean"],"description":"If `true`, the method parses the URL using the\n\n*[[querystring `querystring`]] module\n\n"},{"name":"slashesDenoteHost","default_value":false,"optional":true,"types":["Boolean"],"description":"If `true`, `//foo/bar` acts like `{ host : 'foo',\n\n*pathname  '/bar' }`, instead of `{ pathname : '//foo/bar' }`\n\n"}],"returns":[{"type":"Object"}]}],"arguments":[{"name":"urlStr","types":["String"],"description":"The URL string\n\n"},{"name":"parseQueryString","types":["Boolean"],"description":"If `true`, the method parses the URL using the\n\n*[[querystring `querystring`]] module\n\n"},{"name":"slashesDenoteHost","types":["Boolean"],"description":"If `true`, `//foo/bar` acts like `{ host : 'foo',\n\n*pathname  '/bar' }`, instead of `{ pathname : '//foo/bar' }`\n\n"}],"description":"Takes a URL string, and return it as an object.","short_description":"Takes a URL string, and return it as an object.","line":86,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/url.markdown","name":"parse","name_prefix":"url.","path":"url.parse","outFile":"url.html#url.parse"},{"id":"url.resolve","type":"class method","signatures":[{"arguments":[{"name":"from","types":["String"],"description":"The base URL\n\n"},{"name":"to","types":["String"],"description":"The href URL\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"from","types":["String"],"description":"The base URL\n\n"},{"name":"to","types":["String"],"description":"The href URL\n\n"}],"description":"Takes a base URL, and an href URL, and resolves them as a browser would for an\nanchor tag.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/url/url.resolve.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Takes a base URL, and an href URL, and resolves them as a browser would for an\nanchor tag.\n","line":131,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/url.markdown","name":"resolve","name_prefix":"url.","path":"url.resolve","outFile":"url.html#url.resolve"}],"file":"0.8.14/nodejs_ref_guide/url.markdown","subclasses":[],"name":"url","path":"url","outFile":"url.html"},{"id":"util","type":"class","description":"\n\nThe `util` module provides varies utilities that you can use in your Node.js\nprograms, fmostly around verifying the type of an object. To access these\nmethods, add `require('util')` to your code.","stability":"5 - Locked","short_description":"\n","line":13,"aliases":[],"children":[{"id":"util.debug","type":"class method","signatures":[{"arguments":[{"name":"str","types":["String"],"description":"The string to print\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"str","types":["String"],"description":"The string to print\n\n"}],"description":"A synchronous output function. This block the process and outputs `string`\nimmediately to `stderr`.","short_description":"A synchronous output function. This block the process and outputs `string`\nimmediately to `stderr`.","line":24,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"debug","name_prefix":"util.","path":"util.debug","outFile":"util.html#util.debug"},{"id":"util.error","type":"class method","signatures":[{"arguments":[{"name":"str","ellipsis":true,"optional":true,"types":["String"],"description":"The string to print\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"str","types":["String"],"description":"The string to print\n\n"}],"description":"Same as `util.debug()` except this will output all arguments immediately to\n`stderr`.","short_description":"Same as `util.debug()` except this will output all arguments immediately to\n`stderr`.","line":95,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"error","name_prefix":"util.","path":"util.error","outFile":"util.html#util.error"},{"id":"util.format","type":"class method","signatures":[{"arguments":[{"name":"format","ellipsis":true,"types":["String"],"description":"A message, and placeholders used for formatting\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"format","types":["String"],"description":"A message, and placeholders used for formatting\n\n"}],"description":"Returns a formatted string using the first argument in\na [`printf()`-like](http://en.wikipedia.org/wiki/Printf_format_string#Format_placeholders) way.\n\nThe first argument is a string that contains zero or more placeholders. Each\nplaceholder is replaced with the converted value from its corresponding\nargument. Supported placeholders are:\n\n* `%s` - String.\n* `%d` - Number (both integer and float).\n* `%j` - JSON.\n* `%%` - single percent sign (`'%'`). This does not consume an argument.\n\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/util/util.format.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns a formatted string using the first argument in\na [`printf()`-like](http://en.wikipedia.org/wiki/Printf_format_string#Format_placeholders) way.\n","line":48,"aliases":["console.log"],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"format","name_prefix":"util.","path":"util.format","outFile":"util.html#util.format"},{"id":"util.inherits","type":"class method","signatures":[{"arguments":[{"name":"constructor","types":["Function"],"description":"The prototype methods to inherit\n\n"},{"name":"superConstructor","types":["Object"],"description":"The new object's type\n\n"}]}],"arguments":[{"name":"constructor","types":["Function"],"description":"The prototype methods to inherit\n\n"},{"name":"superConstructor","types":["Object"],"description":"The new object's type\n\n"}],"description":"Inherit the prototype methods from one constructor into another. The prototype\nof `constructor` is set to a new object created from `superConstructor`.\n\nAs an additional convenience, `superConstructor` is accessible through the\n`constructor.super_` property.\n\nFor more information, see the MDN\n[`constructor`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Object/constructor) documentation.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/util/util.inherits.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Inherit the prototype methods from one constructor into another. The prototype\nof `constructor` is set to a new object created from `superConstructor`.\n","line":223,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"inherits","name_prefix":"util.","path":"util.inherits","outFile":"util.html#util.inherits"},{"id":"util.inspect","type":"class method","signatures":[{"arguments":[{"name":"object","types":["Object"],"description":"The object to be represented\n\n"},{"name":"showHidden","default_value":false,"types":["Boolean"],"description":"Identifies whether the non-enumerable properties are\n\n*also shown\n\n"},{"name":"depth","default_value":2,"types":["Number"],"description":"Indicates how many times to recurse while formatting the\n\n*object\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"object","types":["Object"],"description":"The object to be represented\n\n"},{"name":"showHidden","types":["Boolean"],"description":"Identifies whether the non-enumerable properties are\n\n*also shown\n\n"},{"name":"depth","types":["Number"],"description":"Indicates how many times to recurse while formatting the\n\n*object\n\n"}],"description":"Returns a string representation of `object`, which is useful for debugging.\n\nTo make the function recurse an object indefinitely, pass in `null` for `depth`.\n\nIf `colors` is `true`, the output is styled with ANSI color codes.\n\nObjects also may define their own `inspect(depth)` function, which `util.inspect()`\nwill invoke and use the result of when inspecting the object:\n\n```javascript\nvar util = require('util');\n\nvar obj = { name: 'nate' };\nobj.inspect = function(depth) {\n  return '{' + this.name + '}';\n};\n\nutil.inspect(obj);\n  // \"{nate}\"\n```\n\n#### Example\n\nHere's an example inspecting all the properties of the `util` object:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/util/util.inspect.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns a string representation of `object`, which is useful for debugging.\n","line":86,"aliases":["console.dir"],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"inspect","name_prefix":"util.","path":"util.inspect","outFile":"util.html#util.inspect"},{"id":"util.isArray","type":"class method","signatures":[{"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"description":"Returns `true` if the given object is an `Array`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/util/util.isArray.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns `true` if the given object is an `Array`.\n","line":127,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"isArray","name_prefix":"util.","path":"util.isArray","outFile":"util.html#util.isArray"},{"id":"util.isDate","type":"class method","signatures":[{"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"description":"Returns `true` if the given object is a `Date`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/util/util.isDate.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns `true` if the given object is a `Date`.\n","line":141,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"isDate","name_prefix":"util.","path":"util.isDate","outFile":"util.html#util.isDate"},{"id":"util.isError","type":"class method","signatures":[{"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"description":"Returns `true` if the given object is an `Error`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/util/util.isError.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns `true` if the given object is an `Error`.\n","line":155,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"isError","name_prefix":"util.","path":"util.isError","outFile":"util.html#util.isError"},{"id":"util.isRegExp","type":"class method","signatures":[{"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"returns":[{"type":"Boolean"}]}],"arguments":[{"name":"object","types":["Object"],"description":"The object to be identified\n\n"}],"description":"Returns `true` if the given \"object\" is a `RegExp`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/util/util.isRegExp.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"Returns `true` if the given \"object\" is a `RegExp`.\n","line":170,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"isRegExp","name_prefix":"util.","path":"util.isRegExp","outFile":"util.html#util.isRegExp"},{"id":"util.log","type":"class method","signatures":[{"arguments":[{"name":"str","types":["String"],"description":"The string to print\n\n"}]}],"arguments":[{"name":"str","types":["String"],"description":"The string to print\n\n"}],"description":"Outputs to `stdout`...but with a timestamp!","short_description":"Outputs to `stdout`...but with a timestamp!","line":181,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"log","name_prefix":"util.","path":"util.log","outFile":"util.html#util.log"},{"id":"util.print","type":"class method","signatures":[{"arguments":[{"name":"str","ellipsis":true,"optional":true,"types":["String"],"description":"The string to print\n\n"}]}],"arguments":[{"name":"str","types":["String"],"description":"The string to print\n\n"}],"description":"A synchronous output function. Will block the process, cast each argument to a\nstring then output to `stdout`. Does not place newlines after each argument.","short_description":"A synchronous output function. Will block the process, cast each argument to a\nstring then output to `stdout`. Does not place newlines after each argument.","line":113,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"print","name_prefix":"util.","path":"util.print","outFile":"util.html#util.print"},{"id":"util.pump","type":"class method","signatures":[{"arguments":[{"name":"readableStream","types":["stream.ReadableStream"],"description":"The stream to read from\n\n"},{"name":"writableStream","types":["stream.WritableStream"],"description":"The stream to write to\n\n"},{"name":"callback","arguments":[],"callback":true,"optional":true,"types":["Function"],"description":"An optional callback function once the pump is through\n\n\n\n"}]}],"arguments":[{"name":"readableStream","types":["stream.ReadableStream"],"description":"The stream to read from\n\n"},{"name":"writableStream","types":["stream.WritableStream"],"description":"The stream to write to\n\n"},{"name":"callback","types":["Function"],"description":"An optional callback function once the pump is through\n\n\n\n"}],"deprecated":true,"description":"This function is deprecated. Use [[stream.ReadableStream.pipe `stream.ReadableStream.pipe()`]] instead.\n\nReads the data from `readableStream` and sends it to the `writableStream`.\n\nWhen `writableStream.write(data)` returns `false`, `readableStream` is paused\nuntil the `drain` event occurs on the `writableStream`. `callback` gets an error\nas its only argument and is called when `writableStream` is closed or when an\nerror occurs.","short_description":"This function is deprecated. Use [[stream.ReadableStream.pipe `stream.ReadableStream.pipe()`]] instead.\n","line":200,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"pump","name_prefix":"util.","path":"util.pump","outFile":"util.html#util.pump"},{"id":"util.puts","type":"class method","signatures":[{"arguments":[{"name":"str","ellipsis":true,"optional":true,"types":["String"],"description":"The string to print\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"str","types":["String"],"description":"The string to print\n\n"}],"description":"A synchronous output function. Will block the process and output all arguments\nto `stdout` with newlines after each argument.","short_description":"A synchronous output function. Will block the process and output all arguments\nto `stdout` with newlines after each argument.","line":104,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/util.markdown","name":"puts","name_prefix":"util.","path":"util.puts","outFile":"util.html#util.puts"}],"file":"0.8.14/nodejs_ref_guide/util.markdown","subclasses":[],"name":"util","path":"util","outFile":"util.html"},{"id":"vm","type":"class","description":"\nIn Node.js, JavaScript code can be compiled and run immediately or compiled,\nsaved, and run later. To do that, you can add `require('vm');` to your code.\n\n#### Caveats\n\nThe `vm` module has many known issues and edge cases. If you run into\nissues or unexpected behavior, please consult\n[the open issues on GitHub](https://github.com/joyent/node/issues/search?q=vm).\nSome of the biggest problems are described below.\n\n#### Sandboxes\n\nThe `sandbox` argument to `vm.runInNewContext` and `vm.createContext`,\nalong with the `initSandbox` argument to `vm.createContext`, do not\nbehave as one might normally expect and their behavior varies\nbetween different versions of Node.\n\nThe key issue to be aware of is that V8 provides no way to directly\ncontrol the global object used within a context. As a result, while\nproperties of your `sandbox` object will be available in the context,\nany properties from the `prototype`s of the `sandbox` may not be\navailable. Furthermore, the `this` expression within the global scope\nof the context evaluates to the empty object (`{}`) instead of to\nyour sandbox.\n\nYour sandbox's properties are also not shared directly with the script.\nInstead, the properties of the sandbox are copied into the context at\nthe beginning of execution, and then after execution, the properties\nare copied back out in an attempt to propagate any changes.\n\n#### Globals\n\nProperties of the global object, like `Array` and `String`, have\ndifferent values inside of a context. This means that common\nexpressions like `[] instanceof Array` or\n`Object.getPrototypeOf([]) === Array.prototype` may not produce\nexpected results when used inside of scripts evaluated via the `vm` module.\n\nSome of these problems have known workarounds listed in the issues for\n`vm` on GitHub. for example, `Array.isArray` works around\nthe example problem with `Array`.\n\n#### Example\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","stability":"2 - Unstable","short_description":"\nIn Node.js, JavaScript code can be compiled and run immediately or compiled,\nsaved, and run later. To do that, you can add `require('vm');` to your code.\n","line":54,"aliases":[],"children":[{"id":"vm.createContext","type":"class method","signatures":[{"arguments":[{"name":"initSandbox","optional":true,"types":["Object"],"description":"An object that is shallow-copied to seed the initial\n\n*contents of the global object used by the context\n\n"}],"returns":[{"type":"Object"}]}],"arguments":[{"name":"initSandbox","types":["Object"],"description":"An object that is shallow-copied to seed the initial\n\n*contents of the global object used by the context\n\n"}],"description":"`vm.createContext()` creates a new context which is suitable for use as the\nsecond argument of a subsequent call to `vm.runInContext()`.\n\nA (V8) context comprises a global object together with a set of build-in objects\nand functions.","short_description":"`vm.createContext()` creates a new context which is suitable for use as the\nsecond argument of a subsequent call to `vm.runInContext()`.\n","line":158,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"createContext","name_prefix":"vm.","path":"vm.createContext","outFile":"vm.html#vm.createContext"},{"id":"vm.createScript","type":"class method","signatures":[{"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"filename","optional":true,"types":["String"],"description":"A filename to emulate where the code is coming from\n\n"}],"returns":[{"type":"vm.Script"}]}],"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"filename","types":["String"],"description":"A filename to emulate where the code is coming from\n\n"}],"description":"This script can be run later many times using the other `vm` methods. In case of\nsyntax error in `code`, `createScript` prints the syntax error to stderr and\nthrows an exception.\n\n\n`createScript()` compiles `code` as if it were loaded from `filename`, but does\nnot run it. Instead, it returns a `vm.Script` object representing this compiled\ncode. The returned script is not bound to any global object. It is bound before\neach run, just for that run. The `filename` is optional, and is only used in\nstack traces.","short_description":"This script can be run later many times using the other `vm` methods. In case of\nsyntax error in `code`, `createScript` prints the syntax error to stderr and\nthrows an exception.\n","line":178,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"createScript","name_prefix":"vm.","path":"vm.createScript","outFile":"vm.html#vm.createScript"},{"id":"vm.runInContext","type":"class method","signatures":[{"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"context","types":["Object"],"description":"The context to execute it in, coming from [[vm.createContext]]\n\n"},{"name":"filename","optional":true,"types":["String"],"description":"A filename to emulate where the code is coming from\n\n"}],"returns":[{"type":"String","description":"A string representing the result of running `code`.\n\n"}]}],"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"context","types":["Object"],"description":"The context to execute it in, coming from [[vm.createContext]]\n\n"},{"name":"filename","types":["String"],"description":"A filename to emulate where the code is coming from\n\n"}],"returns":[{"type":"String","description":"A string representing the result of running `code`.\n\n"}],"description":"`vm.runInContext()` compiles `code`, then runs it in `context` and returns the\nresult.\n\nA (V8) context comprises a global object, together with a set of built-in\nobjects and functions. Running code does not have access to local scope and the\nglobal object held within `context` is used as the global object for `code`. The\n`filename` is optional, and is only used in stack traces.\n\nIn case of syntax error in `code`, `vm.runInContext()` emits the syntax error to\nstderr and throws an exception.\n\nNote: Running untrusted code is a tricky business requiring great care.  To\nprevent accidental global variable leakage, `vm.runInContext()` is quite useful,\nbut safely running untrusted code requires a separate process.\n\n#### Example\n\nCompiling and executing code in an existing context.\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.runInContext.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"`vm.runInContext()` compiles `code`, then runs it in `context` and returns the\nresult.\n","line":145,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"runInContext","name_prefix":"vm.","path":"vm.runInContext","outFile":"vm.html#vm.runInContext"},{"id":"vm.runInNewContext","type":"class method","signatures":[{"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"sandbox","optional":true,"types":["Object"],"description":"A global object with properties to pass into `code`\n\n"},{"name":"filename","optional":true,"types":["String"],"description":"A filename to emulate where the code is coming from\n\n"}]}],"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"sandbox","types":["Object"],"description":"A global object with properties to pass into `code`\n\n"},{"name":"filename","types":["String"],"description":"A filename to emulate where the code is coming from\n\n"}],"description":"`vm.runInNewContext()` compiles `code` then runs it in `sandbox` and returns the\nresult. Running code does not have access to local scope. The object `sandbox`\nis used as the global object for `code`.\n`sandbox` and `filename` are optional, and `filename` is only used in stack\ntraces.\n\nWarning: Running untrusted code is a tricky business requiring great care.  To\nprevent accidental global variable leakage, `vm.runInNewContext()` is quite\nuseful, but safely running untrusted code requires a separate process.\n\nIn case of syntax error in `code`, `vm.runInNewContext()` emits the syntax error\nto stderr and throws an exception.\n\n#### Example\n\nHere's an example to ompile and execute code that increments a global variable\nand sets a new one. These globals are contained in the sandbox.\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.runInNewContext.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>","short_description":"`vm.runInNewContext()` compiles `code` then runs it in `sandbox` and returns the\nresult. Running code does not have access to local scope. The object `sandbox`\nis used as the global object for `code`.\n`sandbox` and `filename` are optional, and `filename` is only used in stack\ntraces.\n","line":113,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"runInNewContext","name_prefix":"vm.","path":"vm.runInNewContext","outFile":"vm.html#vm.runInNewContext"},{"id":"vm.runInThisContext","type":"class method","signatures":[{"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"filename","optional":true,"types":["String"],"description":"A filename to emulate where the code is coming from \n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"code","types":["String"],"description":"The code to run\n\n"},{"name":"filename","types":["String"],"description":"A filename to emulate where the code is coming from \n\n"}],"description":"`vm.runInThisContext()` compiles `code` as if it were loaded from `filename`,\nruns it, and returns the result. Running code does not have access to local\nscope. The `filename` is optional, and is only used in stack traces.\n\nIn case of syntax error in `code`, `vm.runInThisContext()` emits the syntax\nerror to stderr and throws an exception.\n\n#### Example: Using `vm.runInThisContext` and `eval` to run the same code:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.runInThisContext.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nSince `vm.runInThisContext()` doesn't have access to the local scope, `localVar`\nis unchanged. `eval` does have access to the local scope, so `localVar` is\nchanged.\n\n#### Returns\n\nA string representing the result of running `code`.","short_description":"`vm.runInThisContext()` compiles `code` as if it were loaded from `filename`,\nruns it, and returns the result. Running code does not have access to local\nscope. The `filename` is optional, and is only used in stack traces.\n","line":83,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"runInThisContext","name_prefix":"vm.","path":"vm.runInThisContext","outFile":"vm.html#vm.runInThisContext"},{"id":"vm.Script","type":"class","superclass":"vm","description":"This object is created as a result of the [[vm.createScript\n`vm.createScript()`]] method. It represents some compiled code than can be run\nat a later moment.","short_description":"This object is created as a result of the [[vm.createScript\n`vm.createScript()`]] method. It represents some compiled code than can be run\nat a later moment.","line":190,"aliases":[],"children":[{"id":"vm.Script.runInNewContext","type":"class method","signatures":[{"arguments":[{"name":"sandbox","optional":true,"types":["Object"],"description":"A global object with properties to pass into the `Script`\n\n*object\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"sandbox","types":["Object"],"description":"A global object with properties to pass into the `Script`\n\n*object\n\n"}],"description":"Similar to `vm.runInNewContext()`, this is a method of a precompiled `Script`\nobject.\n\n`script.runInNewContext()` runs the code of `script` with `sandbox` as the\nglobal object and returns the result. Running code does not have access to local\nscope.\n\nWarning: Running untrusted code is a tricky business requiring great care.  To\nprevent accidental global variable leakage, `script.runInNewContext()` is quite\nuseful, but safely running untrusted code requires a separate process.\n\n#### Example\n\nCompiling code that increments a global variable and sets one, then execute the\ncode multiple times:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.Script.runInNewContext.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Returns\n\nA string representing the result of running `code`.","short_description":"Similar to `vm.runInNewContext()`, this is a method of a precompiled `Script`\nobject.\n","line":248,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"runInNewContext","name_prefix":"vm.Script.","path":"vm.Script.runInNewContext","outFile":"vm.html#vm.Script.runInNewContext"},{"id":"vm.Script.runInThisContext","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Similar to `vm.runInThisContext()`, but a method of the precompiled `Script`\nobject.\n\n`script.runInThisContext()` runs the code of `script` and returns the result.\nRunning code doesn't have access to local scope, but does have access to the\n`global` object.\n\n#### Example\n\nUsing `script.runInThisContext()` to compile code once and run it multiple\ntimes:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.Script.runInThisContext.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Returns\n\nA string representing the result of running `code`.","short_description":"Similar to `vm.runInThisContext()`, but a method of the precompiled `Script`\nobject.\n","line":216,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"runInThisContext","name_prefix":"vm.Script.","path":"vm.Script.runInThisContext","outFile":"vm.html#vm.Script.runInThisContext"}],"file":"0.8.14/nodejs_ref_guide/vm.markdown","subclasses":[],"name":"Script","name_prefix":"vm.","path":"vm.Script","outFile":"vm.html"},{"id":"vm.Script","type":"class","superclass":"vm","description":"This object is created as a result of the [[vm.createScript\n`vm.createScript()`]] method. It represents some compiled code than can be run\nat a later moment.","short_description":"This object is created as a result of the [[vm.createScript\n`vm.createScript()`]] method. It represents some compiled code than can be run\nat a later moment.","line":190,"aliases":[],"children":[{"id":"vm.Script.runInNewContext","type":"class method","signatures":[{"arguments":[{"name":"sandbox","optional":true,"types":["Object"],"description":"A global object with properties to pass into the `Script`\n\n*object\n\n"}],"returns":[{"type":"String"}]}],"arguments":[{"name":"sandbox","types":["Object"],"description":"A global object with properties to pass into the `Script`\n\n*object\n\n"}],"description":"Similar to `vm.runInNewContext()`, this is a method of a precompiled `Script`\nobject.\n\n`script.runInNewContext()` runs the code of `script` with `sandbox` as the\nglobal object and returns the result. Running code does not have access to local\nscope.\n\nWarning: Running untrusted code is a tricky business requiring great care.  To\nprevent accidental global variable leakage, `script.runInNewContext()` is quite\nuseful, but safely running untrusted code requires a separate process.\n\n#### Example\n\nCompiling code that increments a global variable and sets one, then execute the\ncode multiple times:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.Script.runInNewContext.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Returns\n\nA string representing the result of running `code`.","short_description":"Similar to `vm.runInNewContext()`, this is a method of a precompiled `Script`\nobject.\n","line":248,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"runInNewContext","name_prefix":"vm.Script.","path":"vm.Script.runInNewContext","outFile":"vm.html#vm.Script.runInNewContext"},{"id":"vm.Script.runInThisContext","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"String"}]}],"description":"Similar to `vm.runInThisContext()`, but a method of the precompiled `Script`\nobject.\n\n`script.runInThisContext()` runs the code of `script` and returns the result.\nRunning code doesn't have access to local scope, but does have access to the\n`global` object.\n\n#### Example\n\nUsing `script.runInThisContext()` to compile code once and run it multiple\ntimes:\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/vm/vm.Script.runInThisContext.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\n#### Returns\n\nA string representing the result of running `code`.","short_description":"Similar to `vm.runInThisContext()`, but a method of the precompiled `Script`\nobject.\n","line":216,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/vm.markdown","name":"runInThisContext","name_prefix":"vm.Script.","path":"vm.Script.runInThisContext","outFile":"vm.html#vm.Script.runInThisContext"}],"file":"0.8.14/nodejs_ref_guide/vm.markdown","subclasses":[],"name":"Script","name_prefix":"vm.","path":"vm.Script","outFile":"vm.html"}],"file":"0.8.14/nodejs_ref_guide/vm.markdown","subclasses":["vm.Script"],"name":"vm","path":"vm","outFile":"vm.html"},{"id":"worker","type":"class","superclass":"cluster","description":"A `Worker` object contains all public information and methods about a worker. In\nthe master, it can be obtained using `cluster.workers`. In a worker it can be\nobtained using `cluster.worker`.","short_description":"A `Worker` object contains all public information and methods about a worker. In\nthe master, it can be obtained using `cluster.workers`. In a worker it can be\nobtained using `cluster.worker`.","line":325,"aliases":[],"children":[{"id":"worker.destroy","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Void"}]}],"description":"This function kills the worker, and informs the master to not spawn a new worker.\nTo know the difference between suicide and accidentally death, a suicide boolean\nis set to `true`.\n\n    cluster.on('death', function (worker) {\n      if (worker.suicide === true) {\n        console.log('Oh, it was just suicide\\' – no need to worry').\n      }\n    });\n\n    // destroy worker\n    worker.destroy();","short_description":"This function kills the worker, and informs the master to not spawn a new worker.\nTo know the difference between suicide and accidentally death, a suicide boolean\nis set to `true`.\n","line":396,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"destroy","name_prefix":"worker.","path":"worker.destroy","outFile":"cluster.html#worker.destroy"},{"id":"worker.disconnect","type":"class method","signatures":[{"arguments":[],"returns":[{"type":"Void"}]}],"description":"When calling this function the worker will no longer accept new connections, but\nthey will be handled by any other listening worker. Existing connection will be\nallowed to exit as usual. When no more connections exist, the IPC channel to the\nworker will close allowing it to die graceful. When the IPC channel is closed\nthe `disconnect` event will emit, this is then followed by the `death` event,\nthere is emitted when the worker finally die.\n\nBecause there might be long living connections, it is useful to implement a\ntimeout. This example ask the worker to disconnect and after two seconds it will\ndestroy the server. An alternative would be to execute `worker.destroy()` after\n2 seconds, but that would normally not allow the worker to do any cleanup if\nneeded.\n\n#### Example\n\n    if (cluster.isMaster) {\n      var worker = cluster.fork();\n      var timeout;\n\n      worker.on('listening', function () {\n        worker.disconnect();\n        timeout = setTimeout(function () {\n          worker.send('force kill');\n        }, 2000);\n      });\n\n      worker.on('disconnect', function () {\n        clearTimeout(timeout);\n      });\n\n    } else if (cluster.isWorker) {\n      var net = require('net');\n      var server = net.createServer(function (socket) {\n        // connection never end\n      });\n\n      server.listen(8000);\n\n      server.on('close', function () {\n        // cleanup\n      });\n\n      process.on('message', function (msg) {\n        if (msg === 'force kill') {\n          server.destroy();\n        }\n      });\n    }","short_description":"When calling this function the worker will no longer accept new connections, but\nthey will be handled by any other listening worker. Existing connection will be\nallowed to exit as usual. When no more connections exist, the IPC channel to the\nworker will close allowing it to die graceful. When the IPC channel is closed\nthe `disconnect` event will emit, this is then followed by the `death` event,\nthere is emitted when the worker finally die.\n","line":450,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"disconnect","name_prefix":"worker.","path":"worker.disconnect","outFile":"cluster.html#worker.disconnect"},{"id":"worker.id","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"Each new worker is given its own unique id, stored here.\n\nWhile a worker is alive, this is the key that indexes it in `cluster.workers`.","short_description":"Each new worker is given its own unique id, stored here.\n","line":334,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"id","name_prefix":"worker.","path":"worker.id","outFile":"cluster.html#worker.id"},{"id":"worker.process","type":"class property","signatures":[{"returns":[{"type":"child_process"}]}],"description":"Since all workers are created using [[child_process.fork\n`child_process.fork()`]], the returned object from that function is stored in\n`process`.\n\nFor more information, see the [[`child_process` module](child_process.html).","short_description":"Since all workers are created using [[child_process.fork\n`child_process.fork()`]], the returned object from that function is stored in\n`process`.\n","line":345,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"process","name_prefix":"worker.","path":"worker.process","outFile":"cluster.html#worker.process"},{"id":"worker.send","type":"class method","signatures":[{"arguments":[{"name":"message","types":["Object"],"description":"A message to send\n\n"}],"returns":[{"type":"Void"}]}],"arguments":[{"name":"message","types":["Object"],"description":"A message to send\n\n"}],"description":"This function is equal to the send methods provided by `child_process.fork()`.\nIn the master, you should use this function to\nsend a message to a specific worker.  However, in a worker you can also use\n`process.send(message)`, since this is the same function.\n\n#### Example: Echoing Back Messages from the Master\n\n    if (cluster.isMaster) {\n      var worker = cluster.fork();\n      worker.send('hi there');\n\n    } else if (cluster.isWorker) {\n      process.on('message', function (msg) {\n        process.send(msg);\n      });\n    }","short_description":"This function is equal to the send methods provided by `child_process.fork()`.\nIn the master, you should use this function to\nsend a message to a specific worker.  However, in a worker you can also use\n`process.send(message)`, since this is the same function.\n","line":377,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"send","name_prefix":"worker.","path":"worker.send","outFile":"cluster.html#worker.send"},{"id":"worker.suicide","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"This property is a boolean. It is set when a worker dies after calling\n`destroy()` or immediately after calling the `disconnect()` method. Until then,\nit is `undefined`.","short_description":"This property is a boolean. It is set when a worker dies after calling\n`destroy()` or immediately after calling the `disconnect()` method. Until then,\nit is `undefined`.","line":354,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"suicide","name_prefix":"worker.","path":"worker.suicide","outFile":"cluster.html#worker.suicide"},{"id":"worker@disconnect","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The disconnected worker\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The disconnected worker\n\n"}],"description":"Same as the [[cluster@disconnect `cluster.on('disconnect')`]] event, but emits only when the state\nchange on the specified worker.\n\n    cluster.fork().on('disconnect', function (worker) {\n      // Worker has disconnected\n    };","short_description":"Same as the [[cluster@disconnect `cluster.on('disconnect')`]] event, but emits only when the state\nchange on the specified worker.\n","line":543,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"disconnect","name_prefix":"worker@","path":"worker.event.disconnect","outFile":"cluster.html#worker.event.disconnect"},{"id":"worker@exit","type":"event","signatures":[{"arguments":[{"name":"code","types":["Number"],"description":"The exit code, if exited normally\n\n"},{"name":"signal","types":["String"],"description":"The name of the signal, (_e.g._ `'SIGHUP'`) that caused\n\n*  the process to be killed.\n\n"}]}],"arguments":[{"name":"code","types":["Number"],"description":"The exit code, if exited normally\n\n"},{"name":"signal","types":["String"],"description":"The name of the signal, (_e.g._ `'SIGHUP'`) that caused\n\n*  the process to be killed.\n\n"}],"description":"Emitted by the individual worker instance, when the underlying child process\nis terminated.  For more information, see [[child_process@exit child_process' `'exit'` event].\n\n    var worker = cluster.fork();\n    worker.on('exit', function(code, signal) {\n      if( signal ) {\n        console.log(\"worker was killed by signal: \"+signal);\n      } else if( code !== 0 ) {\n        console.log(\"worker exited with error code: \"+code);\n      } else {\n        console.log(\"worker success!\");\n      }\n    };","short_description":"Emitted by the individual worker instance, when the underlying child process\nis terminated.  For more information, see [[child_process@exit child_process' `'exit'` event].\n","line":565,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"exit","name_prefix":"worker@","path":"worker.event.exit","outFile":"cluster.html#worker.event.exit"},{"id":"worker@listening@listening","type":"event","signatures":[{"arguments":[{"name":"address","types":["Object"],"description":"Contains the `address` and `port` information where the worker is listening\n\n"}]}],"arguments":[{"name":"address","types":["Object"],"description":"Contains the `address` and `port` information where the worker is listening\n\n"}],"description":"Same as the [[cluster@listening]] event, but emits only when the state change on the specified worker.\n\n#### Example\n\n    cluster.fork().on('listening', function (address) {\n      // Worker is listening\n    };","short_description":"Same as the [[cluster@listening]] event, but emits only when the state change on the specified worker.\n","line":530,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"listening@listening","name_prefix":"worker@","path":"worker.event.listening@listening","outFile":"cluster.html#worker.event.listeningeventlistening"},{"id":"worker@message","type":"event","signatures":[{"arguments":[{"name":"message","types":["Object"],"description":"The message to send\n\n"}]}],"arguments":[{"name":"message","types":["Object"],"description":"The message to send\n\n"}],"description":"This event is the same as the one provided by `child_process.fork()`. In the\nmaster you should use this event, however in a worker you can also use\n`process.on('message')`\n\n#### Example\n\nHere is a cluster that keeps count of the number of requests in the master\nprocess using the message system:\n\n    var cluster = require('cluster');\n    var http = require('http');\n\n    if (cluster.isMaster) {\n\n      // Keep track of http requests\n      var numReqs = 0;\n      setInterval(function() {\n        console.log(\"numReqs =\", numReqs);\n      }, 1000);\n\n      // Count requestes\n      var messageHandler = function (msg) {\n        if (msg.cmd && msg.cmd == 'notifyRequest') {\n          numReqs += 1;\n        }\n      };\n\n      // Start workers and listen for messages containing notifyRequest\n      var numCPUs = require('os').cpus().length;\n      for (var i = 0; i < numCPUs; i++) {\n        cluster.fork();\n      }\n\n    } else {\n\n      // Worker processes have a http server.\n      http.Server(function(req, res) {\n        res.writeHead(200);\n        res.end(\"hello world\\n\");\n\n        // notify master about the request\n        process.send({ cmd: 'notifyRequest' });\n      }).listen(8000);\n    }","short_description":"This event is the same as the one provided by `child_process.fork()`. In the\nmaster you should use this event, however in a worker you can also use\n`process.on('message')`\n","line":501,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"message","name_prefix":"worker@","path":"worker.event.message","outFile":"cluster.html#worker.event.message"},{"id":"worker@online","type":"event","signatures":[{"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that came online\n\n"}]}],"arguments":[{"name":"worker","types":["cluster.worker"],"description":"The worker that came online\n\n"}],"description":"Same as a cluster's [[cluster@online `'online'`]] event, but emits only when the\nstate changes on the specified worker.\n\n#### Example\n\n    cluster.fork().on('online', function (worker) {\n      // Worker is online\n    };","short_description":"Same as a cluster's [[cluster@online `'online'`]] event, but emits only when the\nstate changes on the specified worker.\n","line":516,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","name":"online","name_prefix":"worker@","path":"worker.event.online","outFile":"cluster.html#worker.event.online"}],"file":"0.8.14/nodejs_ref_guide/cluster.markdown","subclasses":[],"name":"worker","path":"worker","outFile":"cluster.html"},{"id":"zlib","type":"class","description":"\nThis provides bindings to Gzip/Gunzip, Deflate/Inflate, and\nDeflateRaw/InflateRaw classes. Each class takes the same options, and is a\nreadable/writable Stream.\n\nYou can access this module by adding `var zlib = require('zlib');` to your code.\n\nAll of the constants defined in `zlib.h` are also defined in this module.  In\nthe normal course of operations, you will not need to ever set any of these.\nThey are described in more detail in the [zlib\ndocumentation](http://zlib.net/manual.html#Constants).\n\n<a id=\"zlib_memory_usage_tuning\"></a>\n#### Memory Usage Tuning\n\nFrom `zlib/zconf.h`, modified to Node's usage:\n\nThe memory requirements for deflate are (in bytes):\n\n    (1 << (windowBits+2)) +  (1 << (memLevel+9))\n\nthat is: 128K for `windowBits=15`  and  128K for `memLevel = 8`\n(default values) plus a few kilobytes for small objects.\n\nFor example, if you want to reduce the default memory requirements from 256K to\n128K, set the options to:\n\n    { windowBits: 14, memLevel: 7 }\n\nOf course, this will generally degrade compression (there's no free lunch).\n\nThe memory requirements for inflate are (in bytes)\n\n    1 << windowBits\n\nthat is: 32K for `windowBits=15` (default value) plus a few kilobytes\nfor small objects.\n\nThis is in addition to a single internal output slab buffer of size `chunkSize`,\nwhich defaults to 16K.\n\nThe speed of zlib compression is affected most dramatically by the `level`\nsetting.  A higher level will result in better compression, but takes longer to\ncomplete.  A lower level will result in less compression, but will be much\nfaster.\n\nIn general, greater memory usage options will mean that node has to make fewer\ncalls to zlib, since it'll be able to process more data in a single `write`\noperation.  This is another factor that affects the speed, at the cost of memory\nusage.","stability":"3 - Stable","short_description":"\nThis provides bindings to Gzip/Gunzip, Deflate/Inflate, and\nDeflateRaw/InflateRaw classes. Each class takes the same options, and is a\nreadable/writable Stream.\n","line":57,"aliases":[],"children":[{"id":"zlib.createDeflate","type":"class method","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}],"description":"Returns a new object for compressing using deflate.","short_description":"Returns a new object for compressing using deflate.","line":190,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"createDeflate","name_prefix":"zlib.","path":"zlib.createDeflate","outFile":"zlib.html#zlib.createDeflate"},{"id":"zlib.createDeflateRaw","type":"class method","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}],"description":"Returns a new object for compressing using deflate, without an appended zlib\nheader.","short_description":"Returns a new object for compressing using deflate, without an appended zlib\nheader.","line":215,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"createDeflateRaw","name_prefix":"zlib.","path":"zlib.createDeflateRaw","outFile":"zlib.html#zlib.createDeflateRaw"},{"id":"zlib.createGunzip","type":"class method","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}],"description":"Returns a new object for Gunzip compression.","short_description":"Returns a new object for Gunzip compression.","line":178,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"createGunzip","name_prefix":"zlib.","path":"zlib.createGunzip","outFile":"zlib.html#zlib.createGunzip"},{"id":"zlib.createGzip","type":"class method","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}],"description":"Returns a new Object for Gzip compression.","short_description":"Returns a new Object for Gzip compression.","line":166,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"createGzip","name_prefix":"zlib.","path":"zlib.createGzip","outFile":"zlib.html#zlib.createGzip"},{"id":"zlib.createInflate","type":"class method","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}],"description":"Returns a new object to decompress a deflate stream.","short_description":"Returns a new object to decompress a deflate stream.","line":202,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"createInflate","name_prefix":"zlib.","path":"zlib.createInflate","outFile":"zlib.html#zlib.createInflate"},{"id":"zlib.createInflateRaw","type":"class method","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}],"description":"Returns a new object to decompress a raw deflate stream (one without an appended\nzlib header).","short_description":"Returns a new object to decompress a raw deflate stream (one without an appended\nzlib header).","line":227,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"createInflateRaw","name_prefix":"zlib.","path":"zlib.createInflateRaw","outFile":"zlib.html#zlib.createInflateRaw"},{"id":"zlib.createUnzip","type":"class method","signatures":[{"arguments":[{"name":"options","optional":true,"types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}]}],"arguments":[{"name":"options","types":["Object"],"description":"The standard [[zlib.options `options`]] object available to\n\n*all the methods.\n\n"}],"description":"Returns a new unzip to decompress either a Gzip- or Deflate-compressed stream by\nauto-detecting the header.","short_description":"Returns a new unzip to decompress either a Gzip- or Deflate-compressed stream by\nauto-detecting the header.","line":240,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"createUnzip","name_prefix":"zlib.","path":"zlib.createUnzip","outFile":"zlib.html#zlib.createUnzip"},{"id":"zlib.deflate","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard error object\n\n","types":["Error"]},{"name":"result","description":"The result of the method\n\n","types":["Object"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard error object\n\n"},{"name":"result","types":["Object"],"description":"The result of the method\n\n"}],"description":"Compresses a buffer using deflate.","short_description":"Compresses a buffer using deflate.","line":255,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"deflate","name_prefix":"zlib.","path":"zlib.deflate","outFile":"zlib.html#zlib.deflate"},{"id":"zlib.deflateRaw","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard error object\n\n","types":["Error"]},{"name":"result","description":"The result of the method\n\n","types":["Object"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard error object\n\n"},{"name":"result","types":["Object"],"description":"The result of the method\n\n"}],"description":"Compresses a buffer using a raw deflate stream (one without an appended zlib\nheader).","short_description":"Compresses a buffer using a raw deflate stream (one without an appended zlib\nheader).","line":271,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"deflateRaw","name_prefix":"zlib.","path":"zlib.deflateRaw","outFile":"zlib.html#zlib.deflateRaw"},{"id":"zlib.gunzip","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard error object\n\n","types":["Error"]},{"name":"result","description":"The result of the method\n\n","types":["Object"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard error object\n\n"},{"name":"result","types":["Object"],"description":"The result of the method\n\n"}],"description":"Decompress a buffer with Gunzip.","short_description":"Decompress a buffer with Gunzip.","line":301,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"gunzip","name_prefix":"zlib.","path":"zlib.gunzip","outFile":"zlib.html#zlib.gunzip"},{"id":"zlib.gzip","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard error object\n\n","types":["Error"]},{"name":"result","description":"The result of the method\n\n","types":["Object"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard error object\n\n"},{"name":"result","types":["Object"],"description":"The result of the method\n\n"}],"description":"Compresses a buffer using Gzip.","short_description":"Compresses a buffer using Gzip.","line":286,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"gzip","name_prefix":"zlib.","path":"zlib.gzip","outFile":"zlib.html#zlib.gzip"},{"id":"zlib.inflate","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard error object\n\n","types":["Error"]},{"name":"result","description":"The result of the method\n\n","types":["Object"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard error object\n\n"},{"name":"result","types":["Object"],"description":"The result of the method\n\n"}],"description":"Decompress a buffer with Inflate.","short_description":"Decompress a buffer with Inflate.","line":316,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"inflate","name_prefix":"zlib.","path":"zlib.inflate","outFile":"zlib.html#zlib.inflate"},{"id":"zlib.inflateRaw","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard error object\n\n","types":["Error"]},{"name":"result","description":"The result of the method\n\n","types":["Object"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard error object\n\n"},{"name":"result","types":["Object"],"description":"The result of the method\n\n"}],"description":"Decompress a raw buffer with a raw deflate stream (one without an appended zlib\nheader)..","short_description":"Decompress a raw buffer with a raw deflate stream (one without an appended zlib\nheader)..","line":332,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"inflateRaw","name_prefix":"zlib.","path":"zlib.inflateRaw","outFile":"zlib.html#zlib.inflateRaw"},{"id":"zlib.options","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"Each class takes an optional options object.  All options are optional.  (The\nconvenience methods use the default settings for all options.)\n\nNote that some options are only relevant when compressing, and are ignored by\nthe decompression classes.\n\nThe options are:\n\n* chunkSize (default: 16*1024)\n* windowBits\n* level (compression only)\n* memLevel (compression only)\n* strategy (compression only)\n* dictionary (deflate/inflate only, empty dictionary by default)\n\nSee the description of `deflateInit2` and `inflateInit2` at\n<http://zlib.net/manual.html#Advanced> for more information on these.\n\n#### Examples\n\nNote: These examples are drastically simplified to show the basic concept. Zlib\nencoding can be expensive, and the results ought to be cached.  See\n[Memory Usage Tuning](#zlib_memory_usage_tuning) for more information on the\nspeed/memory/compression tradeoffs involved in zlib usage.\n\nCompressing or decompressing a file can be done by piping an `fs.ReadStream`\ninto a zlib stream, then into an `fs.WriteStream`.\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/zlib/zlib.ex.1.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nCompressing or decompressing data in one step can be done by using the\nconvenience methods.\n\n<script src='http://snippets.c9.io/github.com/c9/nodemanual.org-examples/nodejs_ref_guide/zlib/zlib.ex.2.js?linestart=3&lineend=0&showlines=false' defer='defer'></script>\n\nTo use this module in an HTTP client or server, use the\n[accept-encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3) on requests, and the\n[content-encoding](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11) header on responses. Here's an example:\n\n    // client request example\n    var zlib = require('zlib');\n    var http = require('http');\n    var fs = require('fs');\n    var request = http.get({ host: 'izs.me',\n                             path: '/',\n                             port: 80,\n                             headers: { 'accept-encoding': 'gzip,deflate' } });\n    request.on('response', function(response) {\n      var output = fs.createWriteStream('izs.me_index.html');\n\n      switch (response.headers['content-encoding']) {\n        // or, just use zlib.createUnzip() to handle both cases\n        case 'gzip':\n          response.pipe(zlib.createGunzip()).pipe(output);\n          break;\n        case 'deflate':\n          response.pipe(zlib.createInflate()).pipe(output);\n          break;\n        default:\n          response.pipe(output);\n          break;\n      }\n    });\n\n    // server example\n    // Running a gzip operation on every request is quite expensive.\n    // It would be much more efficient to cache the compressed buffer.\n    var zlib = require('zlib');\n    var http = require('http');\n    var fs = require('fs');\n    http.createServer(function(request, response) {\n      var raw = fs.createReadStream('index.html');\n      var acceptEncoding = request.headers['accept-encoding'];\n      if (!acceptEncoding) {\n        acceptEncoding = '';\n      }\n\n      // Note: this is not a conformant accept-encoding parser.\n      // See http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.3\n      if (acceptEncoding.match(/\\bdeflate\\b/)) {\n        response.writeHead(200, { 'content-encoding': 'deflate' });\n        raw.pipe(zlib.createDeflate()).pipe(response);\n      } else if (acceptEncoding.match(/\\bgzip\\b/)) {\n        response.writeHead(200, { 'content-encoding': 'gzip' });\n        raw.pipe(zlib.createGzip()).pipe(response);\n      } else {\n        response.writeHead(200, {});\n        raw.pipe(response);\n      }\n    }).listen(1337);","short_description":"Each class takes an optional options object.  All options are optional.  (The\nconvenience methods use the default settings for all options.)\n","line":155,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"options","name_prefix":"zlib.","path":"zlib.options","outFile":"zlib.html#zlib.options"},{"id":"zlib.unzip","type":"class method","signatures":[{"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","arguments":[{"name":"error","description":"The standard error object\n\n","types":["Error"]},{"name":"result","description":"The result of the method\n\n","types":["Object"]}],"callback":true,"types":["Function"],"description":"The function to execute once the method completes\n\n"}]}],"arguments":[{"name":"buf","types":["Buffer"],"description":"The buffer to compress\n\n"},{"name":"callback","types":["Function"],"description":"The function to execute once the method completes\n\n"},{"name":"error","types":["Error"],"description":"The standard error object\n\n"},{"name":"result","types":["Object"],"description":"The result of the method\n\n"}],"description":"Decompress a buffer with Unzip.","short_description":"Decompress a buffer with Unzip.","line":346,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","name":"unzip","name_prefix":"zlib.","path":"zlib.unzip","outFile":"zlib.html#zlib.unzip"}],"file":"0.8.14/nodejs_ref_guide/zlib.markdown","subclasses":[],"name":"zlib","path":"zlib","outFile":"zlib.html"},{"id":"module.children","type":"class property","signatures":[{"returns":[{"type":"Array"}]}],"description":"The module objects required by this one.","short_description":"The module objects required by this one.","line":433,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/modules.markdown","name":"children","name_prefix":"module.","path":"module.children","outFile":"modules.html#module.children"},{"id":"module.filename","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The fully resolved filename to the module.","short_description":"The fully resolved filename to the module.","line":411,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/modules.markdown","name":"filename","name_prefix":"module.","path":"module.filename","outFile":"modules.html#module.filename"},{"id":"module.id","type":"class property","signatures":[{"returns":[{"type":"String"}]}],"description":"The identifier for the module. Typically this is the fully resolved filename.","short_description":"The identifier for the module. Typically this is the fully resolved filename.","line":404,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/modules.markdown","name":"id","name_prefix":"module.","path":"module.id","outFile":"modules.html#module.id"},{"id":"module.loaded","type":"class property","signatures":[{"returns":[{"type":"Boolean"}]}],"description":"Identifies wether or not the module is done loading (`true`), or is in the\nprocess of loading.","short_description":"Identifies wether or not the module is done loading (`true`), or is in the\nprocess of loading.","line":419,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/modules.markdown","name":"loaded","name_prefix":"module.","path":"module.loaded","outFile":"modules.html#module.loaded"},{"id":"module.parent","type":"class property","signatures":[{"returns":[{"type":"Object"}]}],"description":"The module that required this one.","short_description":"The module that required this one.","line":426,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/modules.markdown","name":"parent","name_prefix":"module.","path":"module.parent","outFile":"modules.html#module.parent"},{"id":"module.require","type":"class method","signatures":[{"arguments":[{"name":"id","types":["String"],"description":"The name of the module\n\n"}],"returns":[{"type":"Object"}]}],"arguments":[{"name":"id","types":["String"],"description":"The name of the module\n\n"}],"description":"The `module.require` method provides a way to load a module as if `require()`\nwas called from the original module. The object returned is actually the\n`exports` from the resolved module.\n\nNote that in order to do this, you must get a reference to the `module` object.\nSince `require()` returns the `exports`, and the `module` is typically *only*\navailable within a specific module's code, it must be explicitly exported in\norder to be used.","short_description":"The `module.require` method provides a way to load a module as if `require()`\nwas called from the original module. The object returned is actually the\n`exports` from the resolved module.\n","line":397,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/modules.markdown","name":"require","name_prefix":"module.","path":"module.require","outFile":"modules.html#module.require"},{"id":"Addons","type":"class","description":"Addons are dynamically linked shared objects. They can provide glue to C and\nC++ libraries. The API (at the moment) is rather complex, involving\nknowledge of several libraries:\n\n - V8 JavaScript, a C++ library. Used for interfacing with JavaScript:\n creating objects, calling functions, etc. These are documented mostly in\n the `v8.h` header file (`deps/v8/include/v8.h` in the Node.js source tree),\n and also available [online](http://izs.me/v8-docs/main.html).\n\n - [libuv](https://github.com/joyent/libuv), a C event loop library. Anytime\n  one needs to wait for a file descriptor to become readable, wait for a timer,\n or wait for a signal to received one needs to interface with libuv. That is,\n if you perform  any I/O, libuv needs to be used.\n\n - Internal Node libraries. Most importantly is the `node::ObjectWrap` class\n which you will likely want to derive from.\n\n - Additional libraries are located the `deps/` folder.\n\nNode.js statically compiles all its dependencies into the executable. When\ncompiling  your module, you don't need to worry about linking to any of these\nlibraries.\n\nFirst, let's make a small Addon which is the C++ equivalent of the following\nJavaScript code:\n\n    exports.hello = function() { return 'world'; };\n\nTo get started, we'll create a file `hello.cc`:\n\n    #include <node.h>\n    #include <v8.h>\n\n    using namespace v8;\n\n    Handle<Value> Method(const Arguments& args) {\n      HandleScope scope;\n      return scope.Close(String::New(\"world\"));\n    }\n\n    void init(Handle<Object> target) {\n      NODE_SET_METHOD(target, \"hello\", Method);\n    }\n    NODE_MODULE(hello, init)\n\nNote that all Node.js addons must export an initialization function:\n\n    void Initialize (Handle<Object> target);\n    NODE_MODULE(module_name, Initialize)\n\nThere is no semi-colon after `NODE_MODULE`, as it's not a function (for more\ninformation, see `node.h`).\n\nThe source code needs to be built into `hello.node`, the binary Addon. To\ndo this we create a file called `binding.gyp` which describes the configuration\nto build your module in a JSON-like format. This file gets compiled by\n[node-gyp](https://github.com/TooTallNate/node-gyp).\n\n    {\n      \"targets\": [\n        {\n          \"target_name\": \"hello\",\n          \"sources\": [ \"hello.cc\" ]\n        }\n      ]\n    }\n\nThe next step is to generate the appropriate project build files for the\ncurrent platform. Use `node-gyp configure` for that.\n\nNow you will have either a `Makefile` (on Unix platforms) or a `vcxproj` file\n(on Windows) in the `build/` directory. Next invoke the `node-gyp build`\ncommand.\n\nNow you have your compiled `.node` bindings file! The compiled bindings end up\nin `build/Release/`.\n\nYou can now use the binary addon in a Node project `hello.js` by pointing `require` to\nthe recently built `hello.node` module:\n\n    var addon = require('./build/Release/hello');\n\n    console.log(addon.hello()); // 'world'\n\nPlease see patterns below for further information or\n<https://github.com/arturadib/node-qt> for an example in production.\n\n\n## Addon patterns\n\nBelow are some addon patterns to help you get started. Consult the online\n[v8 reference](http://izs.me/v8-docs/main.html) for help with the various v8\ncalls, and v8's [Embedder's Guide](http://code.google.com/apis/v8/embed.html)\nfor an explanation of several concepts used such as handles, scopes,\nfunction templates, etc.\n\nIn order to use these examples you need to compile them using `node-gyp`.\nCreate the following `binding.gyp` file:\n\n    {\n      \"targets\": [\n        {\n          \"target_name\": \"addon\",\n          \"sources\": [ \"addon.cc\" ]\n        }\n      ]\n    }\n\nIn cases where there is more than one `.cc` file, simply add the file name to the\n`sources` array, e.g.:\n\n    \"sources\": [\"addon.cc\", \"myexample.cc\"]\n\nNow that you have your `binding.gyp` ready, you can configure and build the\naddon:\n\n    $ node-gyp configure build\n\n\n### Function arguments\n\nThe following pattern illustrates how to read arguments from JavaScript\nfunction calls and return a result. This is the main and only needed source\n`addon.cc`:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n\n    using namespace v8;\n\n    Handle<Value> Add(const Arguments& args) {\n      HandleScope scope;\n\n      if (args.Length() < 2) {\n        ThrowException(Exception::TypeError(String::New(\"Wrong number of arguments\")));\n        return scope.Close(Undefined());\n      }\n\n      if (!args[0]->IsNumber() || !args[1]->IsNumber()) {\n        ThrowException(Exception::TypeError(String::New(\"Wrong arguments\")));\n        return scope.Close(Undefined());\n      }\n\n      Local<Number> num = Number::New(args[0]->NumberValue() +\n          args[1]->NumberValue());\n      return scope.Close(num);\n    }\n\n    void Init(Handle<Object> target) {\n      target->Set(String::NewSymbol(\"add\"),\n          FunctionTemplate::New(Add)->GetFunction());\n    }\n\n    NODE_MODULE(addon, Init)\n\nYou can test it with the following JavaScript snippet:\n\n    var addon = require('./build/Release/addon');\n\n    console.log( 'This should be eight:', addon.add(3,5) );\n\n\n### Callbacks\n\nYou can pass JavaScript functions to a C++ function and execute them from\nthere. Here's `addon.cc`:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n\n    using namespace v8;\n\n    Handle<Value> RunCallback(const Arguments& args) {\n      HandleScope scope;\n\n      Local<Function> cb = Local<Function>::Cast(args[0]);\n      const unsigned argc = 1;\n      Local<Value> argv[argc] = { Local<Value>::New(String::New(\"hello world\")) };\n      cb->Call(Context::GetCurrent()->Global(), argc, argv);\n\n      return scope.Close(Undefined());\n    }\n\n    void Init(Handle<Object> target) {\n      target->Set(String::NewSymbol(\"runCallback\"),\n          FunctionTemplate::New(RunCallback)->GetFunction());\n    }\n\n    NODE_MODULE(addon, Init)\n\nTo test it run the following JavaScript snippet:\n\n    var addon = require('./build/Release/addon');\n\n    addon.runCallback(function(msg){\n      console.log(msg); // 'hello world'\n    });\n\n\n### Object factory\n\nYou can create and return new objects from within a C++ function with this\n`addon.cc` pattern, which returns an object with property `msg` that echoes\nthe string passed to `createObject()`:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n\n    using namespace v8;\n\n    Handle<Value> CreateObject(const Arguments& args) {\n      HandleScope scope;\n\n      Local<Object> obj = Object::New();\n      obj->Set(String::NewSymbol(\"msg\"), args[0]->ToString());\n\n      return scope.Close(obj);\n    }\n\n    void Init(Handle<Object> target) {\n      target->Set(String::NewSymbol(\"createObject\"),\n          FunctionTemplate::New(CreateObject)->GetFunction());\n    }\n\n    NODE_MODULE(addon, Init)\n\nTo test it in JavaScript:\n\n    var addon = require('./build/Release/addon');\n\n    var obj1 = addon.createObject('hello');\n    var obj2 = addon.createObject('world');\n    console.log(obj1.msg+' '+obj2.msg); // 'hello world'\n\n\n### Function factory\n\nThis pattern illustrates how to create and return a JavaScript function that\nwraps a C++ function:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n\n    using namespace v8;\n\n    Handle<Value> MyFunction(const Arguments& args) {\n      HandleScope scope;\n      return scope.Close(String::New(\"hello world\"));\n    }\n\n    Handle<Value> CreateFunction(const Arguments& args) {\n      HandleScope scope;\n\n      Local<FunctionTemplate> tpl = FunctionTemplate::New(MyFunction);\n      Local<Function> fn = tpl->GetFunction();\n      fn->SetName(String::NewSymbol(\"theFunction\")); // omit this to make it anonymous\n\n      return scope.Close(fn);\n    }\n\n    void Init(Handle<Object> target) {\n      target->Set(String::NewSymbol(\"createFunction\"),\n          FunctionTemplate::New(CreateFunction)->GetFunction());\n    }\n\n    NODE_MODULE(addon, Init)\n\n\nTo test:\n\n    var addon = require('./build/Release/addon');\n\n    var fn = addon.createFunction();\n    console.log(fn()); // 'hello world'\n\n\n### Wrapping C++ objects\n\nHere we will create a wrapper for a C++ object/class `MyObject` that can be\ninstantiated in JavaScript through the `new` operator. First prepare the main\nmodule `addon.cc`:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n    #include \"myobject.h\"\n\n    using namespace v8;\n\n    void InitAll(Handle<Object> target) {\n      MyObject::Init(target);\n    }\n\n    NODE_MODULE(addon, InitAll)\n\nThen in `myobject.h` make your wrapper inherit from `node::ObjectWrap`:\n\n    #ifndef MYOBJECT_H\n    #define MYOBJECT_H\n\n    #include <node.h>\n\n    class MyObject : public node::ObjectWrap {\n     public:\n      static void Init(v8::Handle<v8::Object> target);\n\n     private:\n      MyObject();\n      ~MyObject();\n\n      static v8::Handle<v8::Value> New(const v8::Arguments& args);\n      static v8::Handle<v8::Value> PlusOne(const v8::Arguments& args);\n      double counter_;\n    };\n\n    #endif\n\nAnd in `myobject.cc` implement the various methods that you want to expose.\nHere we expose the method `plusOne` by adding it to the constructor's\nprototype:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n    #include \"myobject.h\"\n\n    using namespace v8;\n\n    MyObject::MyObject() {};\n    MyObject::~MyObject() {};\n\n    void MyObject::Init(Handle<Object> target) {\n      // Prepare constructor template\n      Local<FunctionTemplate> tpl = FunctionTemplate::New(New);\n      tpl->SetClassName(String::NewSymbol(\"MyObject\"));\n      tpl->InstanceTemplate()->SetInternalFieldCount(1);\n      // Prototype\n      tpl->PrototypeTemplate()->Set(String::NewSymbol(\"plusOne\"),\n          FunctionTemplate::New(PlusOne)->GetFunction());\n\n      Persistent<Function> constructor = Persistent<Function>::New(tpl->GetFunction());\n      target->Set(String::NewSymbol(\"MyObject\"), constructor);\n    }\n\n    Handle<Value> MyObject::New(const Arguments& args) {\n      HandleScope scope;\n\n      MyObject* obj = new MyObject();\n      obj->counter_ = args[0]->IsUndefined() ? 0 : args[0]->NumberValue();\n      obj->Wrap(args.This());\n\n      return args.This();\n    }\n\n    Handle<Value> MyObject::PlusOne(const Arguments& args) {\n      HandleScope scope;\n\n      MyObject* obj = ObjectWrap::Unwrap<MyObject>(args.This());\n      obj->counter_ += 1;\n\n      return scope.Close(Number::New(obj->counter_));\n    }\n\nTest it with:\n\n    var addon = require('./build/Release/addon');\n\n    var obj = new addon.MyObject(10);\n    console.log( obj.plusOne() ); // 11\n    console.log( obj.plusOne() ); // 12\n    console.log( obj.plusOne() ); // 13\n\n\n### Factory of wrapped objects\n\nThis is useful when you want to be able to create native objects without\nexplicitly instantiating them with the `new` operator in JavaScript, e.g.\n\n    var obj = addon.createObject();\n    // instead of:\n    // var obj = new addon.Object();\n\nLet's register our `createObject` method in `addon.cc`:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n    #include \"myobject.h\"\n\n    using namespace v8;\n\n    Handle<Value> CreateObject(const Arguments& args) {\n      HandleScope scope;\n      return scope.Close(MyObject::NewInstance(args));\n    }\n\n    void InitAll(Handle<Object> target) {\n      MyObject::Init();\n\n      target->Set(String::NewSymbol(\"createObject\"),\n          FunctionTemplate::New(CreateObject)->GetFunction());\n    }\n\n    NODE_MODULE(addon, InitAll)\n\nIn `myobject.h` we now introduce the static method `NewInstance` that takes\ncare of instantiating the object (i.e. it does the job of `new` in JavaScript):\n\n    #define BUILDING_NODE_EXTENSION\n    #ifndef MYOBJECT_H\n    #define MYOBJECT_H\n\n    #include <node.h>\n\n    class MyObject : public node::ObjectWrap {\n     public:\n      static void Init();\n      static v8::Handle<v8::Value> NewInstance(const v8::Arguments& args);\n\n     private:\n      MyObject();\n      ~MyObject();\n\n      static v8::Persistent<v8::Function> constructor;\n      static v8::Handle<v8::Value> New(const v8::Arguments& args);\n      static v8::Handle<v8::Value> PlusOne(const v8::Arguments& args);\n      double counter_;\n    };\n\n    #endif\n\nThe implementation is similar to the above in `myobject.cc`:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n    #include \"myobject.h\"\n\n    using namespace v8;\n\n    MyObject::MyObject() {};\n    MyObject::~MyObject() {};\n\n    Persistent<Function> MyObject::constructor;\n\n    void MyObject::Init() {\n      // Prepare constructor template\n      Local<FunctionTemplate> tpl = FunctionTemplate::New(New);\n      tpl->SetClassName(String::NewSymbol(\"MyObject\"));\n      tpl->InstanceTemplate()->SetInternalFieldCount(1);\n      // Prototype\n      tpl->PrototypeTemplate()->Set(String::NewSymbol(\"plusOne\"),\n          FunctionTemplate::New(PlusOne)->GetFunction());\n\n      constructor = Persistent<Function>::New(tpl->GetFunction());\n    }\n\n    Handle<Value> MyObject::New(const Arguments& args) {\n      HandleScope scope;\n\n      MyObject* obj = new MyObject();\n      obj->counter_ = args[0]->IsUndefined() ? 0 : args[0]->NumberValue();\n      obj->Wrap(args.This());\n\n      return args.This();\n    }\n\n    Handle<Value> MyObject::NewInstance(const Arguments& args) {\n      HandleScope scope;\n\n      const unsigned argc = 1;\n      Handle<Value> argv[argc] = { args[0] };\n      Local<Object> instance = constructor->NewInstance(argc, argv);\n\n      return scope.Close(instance);\n    }\n\n    Handle<Value> MyObject::PlusOne(const Arguments& args) {\n      HandleScope scope;\n\n      MyObject* obj = ObjectWrap::Unwrap<MyObject>(args.This());\n      obj->counter_ += 1;\n\n      return scope.Close(Number::New(obj->counter_));\n    }\n\nTest it with:\n\n    var addon = require('./build/Release/addon');\n\n    var obj = addon.createObject(10);\n    console.log( obj.plusOne() ); // 11\n    console.log( obj.plusOne() ); // 12\n    console.log( obj.plusOne() ); // 13\n\n    var obj2 = addon.createObject(20);\n    console.log( obj2.plusOne() ); // 21\n    console.log( obj2.plusOne() ); // 22\n    console.log( obj2.plusOne() ); // 23\n\n\n### Passing wrapped objects around\n\nIn addition to wrapping and returning C++ objects, you can pass them around\nby unwrapping them with Node's `node::ObjectWrap::Unwrap` helper function.\nIn the following `addon.cc` we introduce a function `add()` that can take on two\n`MyObject` objects:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n    #include \"myobject.h\"\n\n    using namespace v8;\n\n    Handle<Value> CreateObject(const Arguments& args) {\n      HandleScope scope;\n      return scope.Close(MyObject::NewInstance(args));\n    }\n\n    Handle<Value> Add(const Arguments& args) {\n      HandleScope scope;\n\n      MyObject* obj1 = node::ObjectWrap::Unwrap<MyObject>(\n          args[0]->ToObject());\n      MyObject* obj2 = node::ObjectWrap::Unwrap<MyObject>(\n          args[1]->ToObject());\n\n      double sum = obj1->Val() + obj2->Val();\n      return scope.Close(Number::New(sum));\n    }\n\n    void InitAll(Handle<Object> target) {\n      MyObject::Init();\n\n      target->Set(String::NewSymbol(\"createObject\"),\n          FunctionTemplate::New(CreateObject)->GetFunction());\n\n      target->Set(String::NewSymbol(\"add\"),\n          FunctionTemplate::New(Add)->GetFunction());\n    }\n\n    NODE_MODULE(addon, InitAll)\n\nTo make things interesting we introduce a public method in `myobject.h` so we\ncan probe private values after unwrapping the object:\n\n    #define BUILDING_NODE_EXTENSION\n    #ifndef MYOBJECT_H\n    #define MYOBJECT_H\n\n    #include <node.h>\n\n    class MyObject : public node::ObjectWrap {\n     public:\n      static void Init();\n      static v8::Handle<v8::Value> NewInstance(const v8::Arguments& args);\n      double Val() const { return val_; }\n\n     private:\n      MyObject();\n      ~MyObject();\n\n      static v8::Persistent<v8::Function> constructor;\n      static v8::Handle<v8::Value> New(const v8::Arguments& args);\n      double val_;\n    };\n\n    #endif\n\nThe implementation of `myobject.cc` is similar as before:\n\n    #define BUILDING_NODE_EXTENSION\n    #include <node.h>\n    #include \"myobject.h\"\n\n    using namespace v8;\n\n    MyObject::MyObject() {};\n    MyObject::~MyObject() {};\n\n    Persistent<Function> MyObject::constructor;\n\n    void MyObject::Init() {\n      // Prepare constructor template\n      Local<FunctionTemplate> tpl = FunctionTemplate::New(New);\n      tpl->SetClassName(String::NewSymbol(\"MyObject\"));\n      tpl->InstanceTemplate()->SetInternalFieldCount(1);\n\n      constructor = Persistent<Function>::New(tpl->GetFunction());\n    }\n\n    Handle<Value> MyObject::New(const Arguments& args) {\n      HandleScope scope;\n\n      MyObject* obj = new MyObject();\n      obj->val_ = args[0]->IsUndefined() ? 0 : args[0]->NumberValue();\n      obj->Wrap(args.This());\n\n      return args.This();\n    }\n\n    Handle<Value> MyObject::NewInstance(const Arguments& args) {\n      HandleScope scope;\n\n      const unsigned argc = 1;\n      Handle<Value> argv[argc] = { args[0] };\n      Local<Object> instance = constructor->NewInstance(argc, argv);\n\n      return scope.Close(instance);\n    }\n\nTest it with:\n\n    var addon = require('./build/Release/addon');\n\n    var obj1 = addon.createObject(10);\n    var obj2 = addon.createObject(20);\n    var result = addon.add(obj1, obj2);\n\n    console.log(result); // 30","short_description":"Addons are dynamically linked shared objects. They can provide glue to C and\nC++ libraries. The API (at the moment) is rather complex, involving\nknowledge of several libraries:\n","line":622,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/addons.markdown","subclasses":[],"name":"Addons","path":"Addons","outFile":"addons.html"},{"id":"Debugger","type":"class","description":"\nV8 comes with an extensive debugger which is accessible out-of-process via a\nsimple [TCP protocol](http://code.google.com/p/v8/wiki/DebuggerProtocol).\n\nNode.js has a built-in client for this debugger. To use this, start Node.js with\nthe `debug` argument; a prompt appears, ready to take your command:\n\n    % node debug myscript.js\n    < debugger listening on port 5858\n    connecting... ok\n    break in /home/indutny/Code/git/indutny/myscript.js:1\n      1 x = 5;\n      2 setTimeout(function () {\n      3   debugger;\n    debug>\n\nNode's debugger client doesn't support the full range of commands, but simple\nstep and inspection is possible. By putting the statement `debugger;` into the\nsource code of your script, you will enable a breakpoint.\n\nFor example, suppose `myscript.js` looked like this:\n\n    // myscript.js\n    x = 5;\n    setTimeout(function () {\n      debugger;\n      console.log(\"world\");\n    }, 1000);\n    console.log(\"hello\");\n\nThen once the debugger is run, it will break on line 4.\n\n    % node debug myscript.js\n    < debugger listening on port 5858\n    connecting... ok\n    break in /home/indutny/Code/git/indutny/myscript.js:1\n      1 x = 5;\n      2 setTimeout(function () {\n      3   debugger;\n    debug> cont\n    < hello\n    break in /home/indutny/Code/git/indutny/myscript.js:3\n      1 x = 5;\n      2 setTimeout(function () {\n      3   debugger;\n      4   console.log(\"world\");\n      5 }, 1000);\n    debug> next\n    break in /home/indutny/Code/git/indutny/myscript.js:4\n      2 setTimeout(function () {\n      3   debugger;\n      4   console.log(\"world\");\n      5 }, 1000);\n      6 console.log(\"hello\");\n    debug> repl\n    Press Ctrl + C to leave debug repl\n    > x\n    5\n    > 2+2\n    4\n    debug> next\n    < world\n    break in /home/indutny/Code/git/indutny/myscript.js:5\n      3   debugger;\n      4   console.log(\"world\");\n      5 }, 1000);\n      6 console.log(\"hello\");\n      7\n    debug> quit\n    %\n\n\nThe `repl` command allows you to evaluate code remotely. The `next` command\nsteps over to the next line. There are a few other commands available and more\nto come. Type `help` to see others.\n\nThere are some online JavaScript IDEs, like [Cloud9 IDE](http://www.c9.io),\nwhich provide the Node.js standard debugging mechanisms, as well as more.\n\n## Watchers\n\nYou can watch expressions and variable values while debugging your code.\n\nOn every breakpoint each expression from the watchers list will be evaluated in\nthe current context and displayed just before the breakpoint's source code\nlisting.\n\nTo start watching an expression, type `watch(\"my_expression\")`. `watchers`\nprints the active watchers. To remove a watcher, type\n`unwatch(\"my_expression\")`.\n\n## Commands Reference\n\n### Stepping\n\n* `cont`, `c`: Continue\n* `next`, `n`: Step next\n* `step`, `s`: Step in\n* `out`, `o`: Step out\n* `pause` - Pause running code (like pause button in Developer Tools)\n\n### Breakpoints\n\n* `setBreakpoint()`, `sb()`: Sets a breakpoint on the current line\n* `setBreakpoint(line)`, `sb(line)`: Set breakpoint on specific line\n* `setBreakpoint('fn()')`, `sb(...)`: Sets a breakpoint on the first statement\nin the function's body\n* `setBreakpoint('script.js', 1)`, `sb(...)`: Sets a  breakpoint on the first\nline of `script.js`\n* `clearBreakpoint`, `cb(...)`: Clears a breakpoint\n\n### Info\n\n* `backtrace`, `bt`: Prints a backtrace of the current execution frame\n* `list(c)`: Lists the script's source code with a five line context (five lines\nbefore and after)\n* `watch(expr)`: Adds an expression to the watch list\n* `unwatch(expr)`: Removes am expression from the watch list\n* `watchers`: Lists all the watchers and their values (automatically listed on\neach breakpoint)\n* `repl`: Open the debugger's REPL for evaluation in debugging a script's\ncontext\n\n### Execution control\n\n* `run`: Run a script (automatically runs on debugger's start)\n* `restart`: Restart a script\n* `kill`: Kill a script\n\n### Various\n\n* `scripts`: List all the loaded scripts\n* `version`: Display the V8 version\n\n## Advanced Usage\n\nThe V8 debugger can be enabled and accessed either by starting Node.js with the\n`--debug` command-line flag or by signaling an existing Node.js process with\n`SIGUSR1`.","stability":"3 - Stable","short_description":"\nV8 comes with an extensive debugger which is accessible out-of-process via a\nsimple [TCP protocol](http://code.google.com/p/v8/wiki/DebuggerProtocol).\n","line":147,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/debugger.markdown","subclasses":[],"name":"Debugger","path":"Debugger","outFile":"debugger.html"},{"id":"Globals","type":"class","description":"These objects are available to all modules. Some of these objects aren't\nactually in the global scope, but in the module scope; they'll be noted as such\nbelow.\n\n<dl>\n<dt><code>__dirname</code></dt>\n<dd>The name of the directory that the currently executing script resides in.\n<code>__dirname</code> isn't actually on the global scope, but is local to each\nmodule.</dd>\n<dd>For example, if you're running <code>node example.js</code> from <code>/Users/mjr</code>:\n\n<pre class=\"prettyprint\">\n    console.log(__dirname);\n    // prints /Users/mjr\n</pre>\n</dd>\n\n<dt><code>__filename</code></dt>\n<dd>The filename of the code being executed.  This is the resolved absolute path\nof this code file.  For a main program this is not necessarily the same filename\nused in the command line.  The value inside a module is the path to that module\nfile.</dd>\n<dd><code>__filename</code> isn't actually on the global scope, but is local to each\nmodule.</dd>\n<dd>For example, if you're running <code>node example.js</code> from <code>/Users/mjr</code>:\n\n<pre class=\"prettyprint\">\n    console.log(__filename);\n    // prints /Users/mjr/example.js\n</pre>\n</dd>\n\n<dt>Buffer</dt>\n<dd>Used to handle binary data. See the [[Buffer Buffers]] section for more\ninformation.</dd>\n\n<dt><code>console</code></dt>\n<dd>Used to print to stdout and stderr. See the [[console STDIO]] section for\nmore information.</dd>\n\n<dt><code>exports</code></dt>\n<dd>An object which is shared between all instances of the current module and\nmade accessible through <code>require()</code>.</dd>\n<dd><code>exports</code> is the same as the <code>module.exports</code> object. See <code>src/node.js</code> for\nmore information.</dd>\n<dd><code>exports</code> isn't actually on the global scope, but is local to each\nmodule.</dd>\n<dd>See the [module system documentation][modules.html] for more information.</dd>\n\n<dt><code>global</code></dt>\n<dd>The global namespace object.</dd>\n<dd>In browsers, the top-level scope is the global scope. That means that in\nbrowsers if you're in the global scope <code>var something</code> will define a global\nvariable. In Node.js this is different. The top-level scope is not the global\nscope; <code>var something</code> inside a Node.js module is local only to that\nmodule.</dd>\n\n<dt><code>module</code></dt>\n<dd>A reference to the current module. In particular <code>module.exports</code> is the\nsame as the <code>exports</code> object. See <code>src/node.js</code> for more information.</dd>\n<dd><code>module</code> isn't actually on the global scope, but is local to each\nmodule.</dd>\n<dd>See the [module system documentation][modules.html] for more information.</dd>\n\n<dt><code>process</code></dt>\n<dd>The process object. See the [process object](process.html) section for more\ninformation.</dd>\n\n<dt><code>require()</code></dt>\n<dd>This is necessary to require modules. See the [Modules](modules.html)\nsection for more information.</dd>\n<dd><code>require</code> isn't actually on the global scope, but is local to each\nmodule.</dd>\n\n<dt><code>require.extensions</code></dt>\n<dd>An [[Array array]] that instructs `require` on how to handle certain file extensions.\n\nFor example, to process files with the extension <code>.sjs</code> as <code>.js</code>:\n\n    require.extensions['.sjs'] = require.extensions['.js'];\n\nOr, to write your own extension handler:\n\n    require.extensions['.sjs'] = function(module, filename) {\n      var content = fs.readFileSync(filename, 'utf8');\n      // Parse the file content and give to module.exports\n      module.exports = content;\n    };</dd>\n\n<dt><code>require.cache</code></dt>\n<dd>Modules are cached in this object when they are required. By deleting a key\nvalue from this object, the next <code>require</code> will reload the module.</dd>\n\n<dt><code>require.resolve()</code></dt>\n<dd>Use the internal <code>require()</code> machinery to look up the location of a module,\nbut rather than loading the module, just return the resolved filename.</dd>\n\n<dt><code>setTimeout(cb, ms)</code><br/>\n<code>clearTimeout(t)</code><br/>\n<code>setInterval(cb, ms)</code><br/>\n<code>clearInterval(t)</code></dt>\n<dd>These timer functions are all global variables. See the [[timer <code>Timers</code>]]\nsection for more information.</dd>\n</dl>","short_description":"These objects are available to all modules. Some of these objects aren't\nactually in the global scope, but in the module scope; they'll be noted as such\nbelow.\n","line":111,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/globals.markdown","subclasses":[],"name":"Globals","path":"Globals","outFile":"globals.html"},{"id":"Index","type":"class","description":"Node.js is a server-side JavaScript environment. It's event-driven,\nasynchronous, and allows you to write a web server in a relatively quick amount\nof time.\n\nThis section is the Node.js Reference API in its entirety. You can change the\nversion of the Node.js documentation by using the dropdown in the toolbar.","short_description":"Node.js is a server-side JavaScript environment. It's event-driven,\nasynchronous, and allows you to write a web server in a relatively quick amount\nof time.\n","line":13,"aliases":[],"children":[],"file":"0.8.14/nodejs_ref_guide/index.markdown","subclasses":[],"name":"Index","path":"Index","outFile":"index.html"}]}}